{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "PRBMath__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewUnstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ftgToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakeholderAddress",
          "type": "address"
        }
      ],
      "name": "getAccountRewardInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakeholderAddress",
          "type": "address"
        }
      ],
      "name": "getStakes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct FTGStaking.Staking[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardsList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardPer1BFTG",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum FTGStaking.StakeType",
          "name": "_stakeType",
          "type": "uint8"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeholders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalStaked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardUpdate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFTGStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum FTGStaking.StakeType",
          "name": "_stakeType",
          "type": "uint8"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewRewardsList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rewards",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardPer1BFTG",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct FTGStaking.Reward[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/bruno/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
    "1": "/home/bruno/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
    "2": "/home/bruno/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/utils/Context.sol",
    "7": "/home/bruno/.brownie/packages/paulrberg/prb-math@2.5.0/contracts/PRBMath.sol",
    "8": "contracts/FTGStaking.sol"
  },
  "ast": {
    "absolutePath": "contracts/FTGStaking.sol",
    "exportedSymbols": {
      "Context": [
        3477
      ],
      "FTGStaking": [
        804
      ],
      "IERC20": [
        1014
      ],
      "Ownable": [
        936
      ],
      "PRBMath": [
        2908
      ],
      "PRBMathSD59x18__AbsInputTooSmall": [
        1039
      ],
      "PRBMathSD59x18__CeilOverflow": [
        1044
      ],
      "PRBMathSD59x18__DivInputTooSmall": [
        1047
      ],
      "PRBMathSD59x18__DivOverflow": [
        1052
      ],
      "PRBMathSD59x18__Exp2InputTooBig": [
        1062
      ],
      "PRBMathSD59x18__ExpInputTooBig": [
        1057
      ],
      "PRBMathSD59x18__FloorUnderflow": [
        1067
      ],
      "PRBMathSD59x18__FromIntOverflow": [
        1072
      ],
      "PRBMathSD59x18__FromIntUnderflow": [
        1077
      ],
      "PRBMathSD59x18__GmNegativeProduct": [
        1084
      ],
      "PRBMathSD59x18__GmOverflow": [
        1091
      ],
      "PRBMathSD59x18__LogInputTooSmall": [
        1096
      ],
      "PRBMathSD59x18__MulInputTooSmall": [
        1099
      ],
      "PRBMathSD59x18__MulOverflow": [
        1104
      ],
      "PRBMathSD59x18__PowuOverflow": [
        1109
      ],
      "PRBMathSD59x18__SqrtNegativeInput": [
        1114
      ],
      "PRBMathSD59x18__SqrtOverflow": [
        1119
      ],
      "PRBMathUD60x18__AddOverflow": [
        1126
      ],
      "PRBMathUD60x18__CeilOverflow": [
        1131
      ],
      "PRBMathUD60x18__Exp2InputTooBig": [
        1141
      ],
      "PRBMathUD60x18__ExpInputTooBig": [
        1136
      ],
      "PRBMathUD60x18__FromUintOverflow": [
        1146
      ],
      "PRBMathUD60x18__GmOverflow": [
        1153
      ],
      "PRBMathUD60x18__LogInputTooSmall": [
        1158
      ],
      "PRBMathUD60x18__SqrtOverflow": [
        1163
      ],
      "PRBMathUD60x18__SubUnderflow": [
        1170
      ],
      "PRBMath__MulDivFixedPointOverflow": [
        1021
      ],
      "PRBMath__MulDivOverflow": [
        1028
      ],
      "PRBMath__MulDivSignedInputTooSmall": [
        1031
      ],
      "PRBMath__MulDivSignedOverflow": [
        1036
      ]
    },
    "id": 805,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "/home/bruno/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 1015,
        "src": "57:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bruno/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 937,
        "src": "142:80:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bruno/.brownie/packages/paulrberg/prb-math@2.5.0/contracts/PRBMath.sol",
        "file": "paulrberg/prb-math@2.5.0/contracts/PRBMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 805,
        "sourceUnit": 2909,
        "src": "223:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nameLocations": [
                "305:7:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 936,
              "src": "305:7:8"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "305:7:8"
          }
        ],
        "canonicalName": "FTGStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 804,
        "linearizedBaseContracts": [
          804,
          936,
          3477
        ],
        "name": "FTGStaking",
        "nameLocation": "291:10:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1dbf3eb5",
            "id": 9,
            "mutability": "immutable",
            "name": "ftgToken",
            "nameLocation": "343:8:8",
            "nodeType": "VariableDeclaration",
            "scope": 804,
            "src": "319:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1014",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "IERC20",
                "nameLocations": [
                  "319:6:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1014,
                "src": "319:6:8"
              },
              "referencedDeclaration": 1014,
              "src": "319:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1014",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FTGStaking.Staking",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "totalStaked",
                "nameLocation": "425:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "417:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "417:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "454:9:8",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "446:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Staking",
            "nameLocation": "399:7:8",
            "nodeType": "StructDefinition",
            "scope": 804,
            "src": "392:78:8",
            "visibility": "public"
          },
          {
            "canonicalName": "FTGStaking.Stakeholder",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "totalStaked",
                "nameLocation": "513:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "505:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "505:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "totalReward",
                "nameLocation": "542:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "534:19:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "lastRewardUpdate",
                "nameLocation": "571:16:8",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "563:24:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "563:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "flexStakes",
                "nameLocation": "607:10:8",
                "nodeType": "VariableDeclaration",
                "scope": 25,
                "src": "597:20:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr",
                  "typeString": "struct FTGStaking.Staking[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 22,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 21,
                      "name": "Staking",
                      "nameLocations": [
                        "597:7:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14,
                      "src": "597:7:8"
                    },
                    "referencedDeclaration": 14,
                    "src": "597:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staking_$14_storage_ptr",
                      "typeString": "struct FTGStaking.Staking"
                    }
                  },
                  "id": 23,
                  "nodeType": "ArrayTypeName",
                  "src": "597:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr",
                    "typeString": "struct FTGStaking.Staking[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stakeholder",
            "nameLocation": "483:11:8",
            "nodeType": "StructDefinition",
            "scope": 804,
            "src": "476:148:8",
            "visibility": "public"
          },
          {
            "canonicalName": "FTGStaking.Reward",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "rewards",
                "nameLocation": "662:7:8",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "654:15:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "654:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "rewardPer1BFTG",
                "nameLocation": "687:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "679:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "679:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "719:9:8",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "711:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "711:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Reward",
            "nameLocation": "637:6:8",
            "nodeType": "StructDefinition",
            "scope": 804,
            "src": "630:105:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "05e3aba9",
            "id": 34,
            "mutability": "mutable",
            "name": "totalFTGStaked",
            "nameLocation": "756:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 804,
            "src": "741:29:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "741:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FTGStaking.StakeType",
            "id": 37,
            "members": [
              {
                "id": 35,
                "name": "FLEX",
                "nameLocation": "802:4:8",
                "nodeType": "EnumValue",
                "src": "802:4:8"
              },
              {
                "id": 36,
                "name": "LOCK30DAYS",
                "nameLocation": "816:10:8",
                "nodeType": "EnumValue",
                "src": "816:10:8"
              }
            ],
            "name": "StakeType",
            "nameLocation": "782:9:8",
            "nodeType": "EnumDefinition",
            "src": "777:55:8"
          },
          {
            "constant": false,
            "functionSelector": "bd39e015",
            "id": 41,
            "mutability": "mutable",
            "name": "rewardsList",
            "nameLocation": "854:11:8",
            "nodeType": "VariableDeclaration",
            "scope": 804,
            "src": "838:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
              "typeString": "struct FTGStaking.Reward[]"
            },
            "typeName": {
              "baseType": {
                "id": 39,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 38,
                  "name": "Reward",
                  "nameLocations": [
                    "838:6:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "838:6:8"
                },
                "referencedDeclaration": 32,
                "src": "838:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Reward_$32_storage_ptr",
                  "typeString": "struct FTGStaking.Reward"
                }
              },
              "id": 40,
              "nodeType": "ArrayTypeName",
              "src": "838:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage_ptr",
                "typeString": "struct FTGStaking.Reward[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c07cfca9",
            "id": 46,
            "mutability": "mutable",
            "name": "stakeholders",
            "nameLocation": "911:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 804,
            "src": "872:51:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
              "typeString": "mapping(address => struct FTGStaking.Stakeholder)"
            },
            "typeName": {
              "id": 45,
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "880:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "872:31:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                "typeString": "mapping(address => struct FTGStaking.Stakeholder)"
              },
              "valueType": {
                "id": 44,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 43,
                  "name": "Stakeholder",
                  "nameLocations": [
                    "891:11:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "891:11:8"
                },
                "referencedDeclaration": 25,
                "src": "891:11:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stakeholder_$25_storage_ptr",
                  "typeString": "struct FTGStaking.Stakeholder"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "55595f34fd936311e65eca0a752ee70068b8992fdf64918aff1b6345689c84e4",
            "id": 54,
            "name": "NewStake",
            "nameLocation": "936:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "961:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "945:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "975:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "967:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "991:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "983:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:57:8"
            },
            "src": "930:72:8"
          },
          {
            "anonymous": false,
            "eventSelector": "d6954c073268a41234627942b1c88cbf53c8bdc07009b12907400074e65d3e9b",
            "id": 62,
            "name": "NewUnstake",
            "nameLocation": "1013:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1040:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1024:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1054:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1046:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1070:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1062:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:57:8"
            },
            "src": "1007:74:8"
          },
          {
            "anonymous": false,
            "eventSelector": "e5f54735f9ce2571eeffc4ce867a47d7cd77ab6ca4d979f9fc33e445a39ebf3e",
            "id": 68,
            "name": "NewReward",
            "nameLocation": "1092:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1118:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "1102:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1134:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "1126:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:43:8"
            },
            "src": "1086:59:8"
          },
          {
            "anonymous": false,
            "eventSelector": "dd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5",
            "id": 74,
            "name": "Log",
            "nameLocation": "1182:3:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "1193:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1186:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1210:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1202:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1185:30:8"
            },
            "src": "1176:40:8"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1257:49:8",
              "statements": [
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "ftgToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1267:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1014",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 81,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "1285:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "1278:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1014_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1278:21:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1014",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1267:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1014",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:32:8"
                }
              ]
            },
            "id": 86,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "1242:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1234:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1233:23:8"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:8"
            },
            "scope": 804,
            "src": "1222:84:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1407:603:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 91,
                      "name": "totalFTGStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1421:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1439:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1421:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "1872:132:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 135,
                                  "name": "_reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88,
                                  "src": "1910:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 136,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1919:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "expression": {
                                    "id": 137,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1922:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1928:9:8",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1922:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 134,
                                "name": "Reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1903:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Reward_$32_storage_ptr_$",
                                  "typeString": "type(struct FTGStaking.Reward storage pointer)"
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1903:35:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reward_$32_memory_ptr",
                                "typeString": "struct FTGStaking.Reward memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Reward_$32_memory_ptr",
                                "typeString": "struct FTGStaking.Reward memory"
                              }
                            ],
                            "expression": {
                              "id": 131,
                              "name": "rewardsList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "1886:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                                "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1898:4:8",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1886:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Reward_$32_storage_$dyn_storage_ptr_$_t_struct$_Reward_$32_storage_$returns$__$bound_to$_t_array$_t_struct$_Reward_$32_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct FTGStaking.Reward storage ref[] storage pointer,struct FTGStaking.Reward storage ref)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1886:53:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1886:53:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 143,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1968:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 144,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1977:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1983:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1977:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 142,
                            "name": "NewReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "1958:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1958:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 147,
                        "nodeType": "EmitStatement",
                        "src": "1953:40:8"
                      }
                    ]
                  },
                  "id": 149,
                  "nodeType": "IfStatement",
                  "src": "1417:587:8",
                  "trueBody": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "1442:424:8",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "5f726577617264",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1465:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bd788a89176d6ec76bd7637d875751320b1e354b02095dc410b55f57985496a",
                                "typeString": "literal_string \"_reward\""
                              },
                              "value": "_reward"
                            },
                            {
                              "id": 96,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1476:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8bd788a89176d6ec76bd7637d875751320b1e354b02095dc410b55f57985496a",
                                "typeString": "literal_string \"_reward\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 94,
                            "name": "Log",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "1461:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1461:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "EmitStatement",
                        "src": "1456:28:8"
                      },
                      {
                        "assignments": [
                          100
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 100,
                            "mutability": "mutable",
                            "name": "rewardPer1BFTG",
                            "nameLocation": "1506:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 130,
                            "src": "1498:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 99,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1498:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 107,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "315f3030305f3030305f303030",
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1555:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              },
                              "value": "1_000_000_000"
                            },
                            {
                              "id": 104,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1612:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 105,
                              "name": "totalFTGStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1637:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000000_by_1",
                                "typeString": "int_const 1000000000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 101,
                              "name": "PRBMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2908,
                              "src": "1523:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PRBMath_$2908_$",
                                "typeString": "type(library PRBMath)"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1531:6:8",
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2497,
                            "src": "1523:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1523:142:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1498:167:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "7265776172645065723142465447",
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1688:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b9cad0e7a967ebf890cf786927ab3c97078c7450869bc40349d8714c8fdbc48a",
                                "typeString": "literal_string \"rewardPer1BFTG\""
                              },
                              "value": "rewardPer1BFTG"
                            },
                            {
                              "id": 110,
                              "name": "rewardPer1BFTG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "1706:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b9cad0e7a967ebf890cf786927ab3c97078c7450869bc40349d8714c8fdbc48a",
                                "typeString": "literal_string \"rewardPer1BFTG\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 108,
                            "name": "Log",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "1684:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1684:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "EmitStatement",
                        "src": "1679:42:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 117,
                                  "name": "_reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88,
                                  "src": "1759:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 118,
                                  "name": "rewardPer1BFTG",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100,
                                  "src": "1768:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 119,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1784:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 120,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1790:9:8",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1784:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 116,
                                "name": "Reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1752:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Reward_$32_storage_ptr_$",
                                  "typeString": "type(struct FTGStaking.Reward storage pointer)"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1752:48:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Reward_$32_memory_ptr",
                                "typeString": "struct FTGStaking.Reward memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Reward_$32_memory_ptr",
                                "typeString": "struct FTGStaking.Reward memory"
                              }
                            ],
                            "expression": {
                              "id": 113,
                              "name": "rewardsList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "1735:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                                "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1747:4:8",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1735:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Reward_$32_storage_$dyn_storage_ptr_$_t_struct$_Reward_$32_storage_$returns$__$bound_to$_t_array$_t_struct$_Reward_$32_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct FTGStaking.Reward storage ref[] storage pointer,struct FTGStaking.Reward storage ref)"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1735:66:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "1735:66:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 125,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "1830:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 126,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1839:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1845:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1839:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 124,
                            "name": "NewReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "1820:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1820:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "EmitStatement",
                        "src": "1815:40:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNewReward",
            "nameLocation": "1368:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_reward",
                  "nameLocation": "1390:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1382:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:17:8"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1407:0:8"
            },
            "scope": 804,
            "src": "1359:651:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "2207:390:8",
              "statements": [
                {
                  "assignments": [
                    159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 159,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2225:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "2217:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 158,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2217:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 160,
                          "name": "rewardsList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2229:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                            "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                          }
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2241:6:8",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2229:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2250:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2229:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2279:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2229:51:8",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 164,
                          "name": "rewardsList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2254:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                            "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2266:6:8",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2254:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2275:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2254:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2217:63:8"
                },
                {
                  "body": {
                    "id": 185,
                    "nodeType": "Block",
                    "src": "2454:103:8",
                    "statements": [
                      {
                        "id": 184,
                        "nodeType": "UncheckedBlock",
                        "src": "2468:46:8",
                        "statements": [
                          {
                            "expression": {
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": true,
                              "src": "2496:3:8",
                              "subExpression": {
                                "id": 181,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 159,
                                "src": "2498:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 183,
                            "nodeType": "ExpressionStatement",
                            "src": "2496:3:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 171,
                            "name": "rewardsList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "2400:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                              "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                            }
                          },
                          "id": 173,
                          "indexExpression": {
                            "id": 172,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "2412:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2400:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Reward_$32_storage",
                            "typeString": "struct FTGStaking.Reward storage ref"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2415:9:8",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31,
                        "src": "2400:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 175,
                        "name": "lastUpdateTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "2428:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2400:42:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 177,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2446:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2451:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2446:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2400:52:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "nodeType": "WhileStatement",
                  "src": "2393:164:8"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 187,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2573:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2577:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2573:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "31",
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2589:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2573:17:8",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 190,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "2581:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2585:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2581:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "2566:24:8"
                }
              ]
            },
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getfirstRewardsIndexToAdd",
            "nameLocation": "2097:26:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "lastUpdateTime",
                  "nameLocation": "2132:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2124:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2123:24:8"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "2194:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2193:9:8"
            },
            "scope": 804,
            "src": "2088:509:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "2815:397:8",
              "statements": [
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2833:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2825:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2825:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 224,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 208,
                              "name": "stakeholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "2837:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                              }
                            },
                            "id": 210,
                            "indexExpression": {
                              "id": 209,
                              "name": "_stakeholderAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "2850:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2837:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                              "typeString": "struct FTGStaking.Stakeholder storage ref"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2871:10:8",
                          "memberName": "flexStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "2837:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                            "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2882:6:8",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2837:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2891:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2837:55:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2977:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2837:141:8",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 215,
                              "name": "stakeholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46,
                              "src": "2907:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                              }
                            },
                            "id": 217,
                            "indexExpression": {
                              "id": 216,
                              "name": "_stakeholderAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "2920:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2907:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                              "typeString": "struct FTGStaking.Stakeholder storage ref"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2941:10:8",
                          "memberName": "flexStakes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "2907:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                            "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2952:6:8",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2907:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2961:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2907:55:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2825:153:8"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "3106:70:8",
                    "statements": [
                      {
                        "id": 241,
                        "nodeType": "UncheckedBlock",
                        "src": "3120:46:8",
                        "statements": [
                          {
                            "expression": {
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": true,
                              "src": "3148:3:8",
                              "subExpression": {
                                "id": 238,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "3150:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 240,
                            "nodeType": "ExpressionStatement",
                            "src": "3148:3:8"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 225,
                                "name": "stakeholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "3008:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                  "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                }
                              },
                              "id": 227,
                              "indexExpression": {
                                "id": 226,
                                "name": "_stakeholderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 199,
                                "src": "3021:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3008:33:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                "typeString": "struct FTGStaking.Stakeholder storage ref"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3042:10:8",
                            "memberName": "flexStakes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "3008:44:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                              "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                            }
                          },
                          "id": 230,
                          "indexExpression": {
                            "id": 229,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "3053:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3008:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staking_$14_storage",
                            "typeString": "struct FTGStaking.Staking storage ref"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3056:9:8",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "3008:57:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 232,
                        "name": "_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3068:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3008:65:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 234,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3089:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3094:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3089:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3008:87:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "WhileStatement",
                  "src": "2988:188:8"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 244,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3192:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3196:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3192:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3204:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3192:13:8",
                    "trueExpression": {
                      "id": 247,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "3200:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 205,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "3185:20:8"
                }
              ]
            },
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getStakeHolderStakeIndexAtRewardTime",
            "nameLocation": "2680:37:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "_stakeholderAddress",
                  "nameLocation": "2735:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2727:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2727:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "2772:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2764:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2717:66:8"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "2806:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2805:9:8"
            },
            "scope": 804,
            "src": "2671:541:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "3386:1737:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeType_$37",
                      "typeString": "enum FTGStaking.StakeType"
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 260,
                      "name": "_stakeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "3400:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeType_$37",
                        "typeString": "enum FTGStaking.StakeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 261,
                        "name": "StakeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "3414:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeType_$37_$",
                          "typeString": "type(enum FTGStaking.StakeType)"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3424:4:8",
                      "memberName": "FLEX",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "3414:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeType_$37",
                        "typeString": "enum FTGStaking.StakeType"
                      }
                    },
                    "src": "3400:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 371,
                  "nodeType": "IfStatement",
                  "src": "3396:1721:8",
                  "trueBody": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "3430:1687:8",
                    "statements": [
                      {
                        "assignments": [
                          265
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 265,
                            "mutability": "mutable",
                            "name": "startIndex",
                            "nameLocation": "3452:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 370,
                            "src": "3444:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 264,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3444:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 272,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 267,
                                  "name": "stakeholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "3509:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                    "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                  }
                                },
                                "id": 269,
                                "indexExpression": {
                                  "id": 268,
                                  "name": "_stakeholderAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "3522:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3509:33:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                  "typeString": "struct FTGStaking.Stakeholder storage ref"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3543:16:8",
                              "memberName": "lastRewardUpdate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "3509:50:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 266,
                            "name": "_getfirstRewardsIndexToAdd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "3465:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3465:108:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3444:129:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "7374617274496e6465783d",
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3596:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_79bcc9b641449b72cbd17b41bd5a58f101bbdd7fc72b98841ba6790856d788ee",
                                "typeString": "literal_string \"startIndex=\""
                              },
                              "value": "startIndex="
                            },
                            {
                              "id": 275,
                              "name": "startIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "3611:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_79bcc9b641449b72cbd17b41bd5a58f101bbdd7fc72b98841ba6790856d788ee",
                                "typeString": "literal_string \"startIndex=\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 273,
                            "name": "Log",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "3592:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3592:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 277,
                        "nodeType": "EmitStatement",
                        "src": "3587:35:8"
                      },
                      {
                        "assignments": [
                          279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 279,
                            "mutability": "mutable",
                            "name": "rewardsSum",
                            "nameLocation": "3644:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 370,
                            "src": "3636:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 278,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3636:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 281,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3657:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3636:22:8"
                      },
                      {
                        "body": {
                          "id": 348,
                          "nodeType": "Block",
                          "src": "3730:1150:8",
                          "statements": [
                            {
                              "assignments": [
                                294
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 294,
                                  "mutability": "mutable",
                                  "name": "stakeholderStakeIndexAtRewardTime",
                                  "nameLocation": "3756:33:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 348,
                                  "src": "3748:41:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 293,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3748:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 302,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 296,
                                    "name": "_stakeholderAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 254,
                                    "src": "3855:19:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 297,
                                        "name": "rewardsList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 41,
                                        "src": "3900:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                                          "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                                        }
                                      },
                                      "id": 299,
                                      "indexExpression": {
                                        "id": 298,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 283,
                                        "src": "3912:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3900:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reward_$32_storage",
                                        "typeString": "struct FTGStaking.Reward storage ref"
                                      }
                                    },
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3915:9:8",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "3900:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 295,
                                  "name": "_getStakeHolderStakeIndexAtRewardTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 252,
                                  "src": "3792:37:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3792:154:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3748:198:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "7374616b65686f6c6465725374616b65496e646578417452657761726454696d653d",
                                    "id": 304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3994:36:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8439a18a7ec71c7769a19b50158b557a4f6fa710b999226f25c44da9f864472d",
                                      "typeString": "literal_string \"stakeholderStakeIndexAtRewardTime=\""
                                    },
                                    "value": "stakeholderStakeIndexAtRewardTime="
                                  },
                                  {
                                    "id": 305,
                                    "name": "stakeholderStakeIndexAtRewardTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 294,
                                    "src": "4052:33:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8439a18a7ec71c7769a19b50158b557a4f6fa710b999226f25c44da9f864472d",
                                      "typeString": "literal_string \"stakeholderStakeIndexAtRewardTime=\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 303,
                                  "name": "Log",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "3969:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3969:134:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 307,
                              "nodeType": "EmitStatement",
                              "src": "3964:139:8"
                            },
                            {
                              "assignments": [
                                309
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 309,
                                  "mutability": "mutable",
                                  "name": "stakeholderStakeAtRewardtime",
                                  "nameLocation": "4129:28:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 348,
                                  "src": "4121:36:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 308,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4121:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 317,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 310,
                                        "name": "stakeholders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "4160:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                          "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                        }
                                      },
                                      "id": 312,
                                      "indexExpression": {
                                        "id": 311,
                                        "name": "_stakeholderAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 254,
                                        "src": "4194:19:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4160:71:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                        "typeString": "struct FTGStaking.Stakeholder storage ref"
                                      }
                                    },
                                    "id": 313,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4232:10:8",
                                    "memberName": "flexStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24,
                                    "src": "4160:82:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                                      "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                                    }
                                  },
                                  "id": 315,
                                  "indexExpression": {
                                    "id": 314,
                                    "name": "stakeholderStakeIndexAtRewardTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 294,
                                    "src": "4243:33:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4160:117:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staking_$14_storage",
                                    "typeString": "struct FTGStaking.Staking storage ref"
                                  }
                                },
                                "id": 316,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4278:11:8",
                                "memberName": "totalStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "4160:129:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4121:168:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "7374616b65686f6c6465725374616b65417452657761726474696d653d",
                                    "id": 319,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4337:31:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_320cabe4f62c9da81b10d375d182ddb007a649774c3fdb9cc7439ac388226d77",
                                      "typeString": "literal_string \"stakeholderStakeAtRewardtime=\""
                                    },
                                    "value": "stakeholderStakeAtRewardtime="
                                  },
                                  {
                                    "id": 320,
                                    "name": "stakeholderStakeAtRewardtime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 309,
                                    "src": "4390:28:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_320cabe4f62c9da81b10d375d182ddb007a649774c3fdb9cc7439ac388226d77",
                                      "typeString": "literal_string \"stakeholderStakeAtRewardtime=\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 318,
                                  "name": "Log",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "4312:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4312:124:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 322,
                              "nodeType": "EmitStatement",
                              "src": "4307:129:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "726577617264734c6973745b695d2e72657761726450657231424654473d",
                                    "id": 324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4484:32:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0ce7ec37ede581572a4a9e1d4538952fbaa6731530d7ebf752580c2f7ddab8dc",
                                      "typeString": "literal_string \"rewardsList[i].rewardPer1BFTG=\""
                                    },
                                    "value": "rewardsList[i].rewardPer1BFTG="
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 325,
                                        "name": "rewardsList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 41,
                                        "src": "4538:11:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                                          "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                                        }
                                      },
                                      "id": 327,
                                      "indexExpression": {
                                        "id": 326,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 283,
                                        "src": "4550:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4538:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Reward_$32_storage",
                                        "typeString": "struct FTGStaking.Reward storage ref"
                                      }
                                    },
                                    "id": 328,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4553:14:8",
                                    "memberName": "rewardPer1BFTG",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29,
                                    "src": "4538:29:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_0ce7ec37ede581572a4a9e1d4538952fbaa6731530d7ebf752580c2f7ddab8dc",
                                      "typeString": "literal_string \"rewardsList[i].rewardPer1BFTG=\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 323,
                                  "name": "Log",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "4459:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4459:126:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 330,
                              "nodeType": "EmitStatement",
                              "src": "4454:131:8"
                            },
                            {
                              "expression": {
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 331,
                                  "name": "rewardsSum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "4603:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 334,
                                          "name": "rewardsList",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 41,
                                          "src": "4653:11:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                                            "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                                          }
                                        },
                                        "id": 336,
                                        "indexExpression": {
                                          "id": 335,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 283,
                                          "src": "4665:1:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4653:14:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Reward_$32_storage",
                                          "typeString": "struct FTGStaking.Reward storage ref"
                                        }
                                      },
                                      "id": 337,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4668:14:8",
                                      "memberName": "rewardPer1BFTG",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29,
                                      "src": "4653:29:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 338,
                                      "name": "stakeholderStakeAtRewardtime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 309,
                                      "src": "4704:28:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "315f3030305f3030305f303030",
                                      "id": 339,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4754:13:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000_by_1",
                                        "typeString": "int_const 1000000000"
                                      },
                                      "value": "1_000_000_000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_1000000000_by_1",
                                        "typeString": "int_const 1000000000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 332,
                                      "name": "PRBMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2908,
                                      "src": "4617:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_PRBMath_$2908_$",
                                        "typeString": "type(library PRBMath)"
                                      }
                                    },
                                    "id": 333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4625:6:8",
                                    "memberName": "mulDiv",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2497,
                                    "src": "4617:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4617:195:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4603:209:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 342,
                              "nodeType": "ExpressionStatement",
                              "src": "4603:209:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "7265776172647353756d3d",
                                    "id": 344,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4839:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c19ed94bc2ccf31d8e3716163cb35719915214bbf4723eaf92265a287f565de5",
                                      "typeString": "literal_string \"rewardsSum=\""
                                    },
                                    "value": "rewardsSum="
                                  },
                                  {
                                    "id": 345,
                                    "name": "rewardsSum",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 279,
                                    "src": "4854:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c19ed94bc2ccf31d8e3716163cb35719915214bbf4723eaf92265a287f565de5",
                                      "typeString": "literal_string \"rewardsSum=\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 343,
                                  "name": "Log",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "4835:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4835:30:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 347,
                              "nodeType": "EmitStatement",
                              "src": "4830:35:8"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 286,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 283,
                            "src": "3701:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 287,
                              "name": "rewardsList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "3705:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                                "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3717:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3705:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3701:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 349,
                        "initializationExpression": {
                          "assignments": [
                            283
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 283,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3685:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 349,
                              "src": "3677:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 282,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3677:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 285,
                          "initialValue": {
                            "id": 284,
                            "name": "startIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "3689:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3677:22:8"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3725:3:8",
                            "subExpression": {
                              "id": 290,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "3725:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 292,
                          "nodeType": "ExpressionStatement",
                          "src": "3725:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "3672:1208:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "66696e616c207265776172647353756d3d",
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4902:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a72157a74d91b09fa9b16787f57bab399db2d1eceebe92de106612a4e0ef73cf",
                                "typeString": "literal_string \"final rewardsSum=\""
                              },
                              "value": "final rewardsSum="
                            },
                            {
                              "id": 352,
                              "name": "rewardsSum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "4923:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a72157a74d91b09fa9b16787f57bab399db2d1eceebe92de106612a4e0ef73cf",
                                "typeString": "literal_string \"final rewardsSum=\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 350,
                            "name": "Log",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "4898:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4898:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 354,
                        "nodeType": "EmitStatement",
                        "src": "4893:41:8"
                      },
                      {
                        "expression": {
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 355,
                                "name": "stakeholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "4948:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                  "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                }
                              },
                              "id": 357,
                              "indexExpression": {
                                "id": 356,
                                "name": "_stakeholderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "4961:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4948:33:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                "typeString": "struct FTGStaking.Stakeholder storage ref"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4982:11:8",
                            "memberName": "totalReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "4948:45:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 359,
                            "name": "rewardsSum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "4997:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4948:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "4948:59:8"
                      },
                      {
                        "expression": {
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 362,
                                "name": "stakeholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5021:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                  "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                }
                              },
                              "id": 364,
                              "indexExpression": {
                                "id": 363,
                                "name": "_stakeholderAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "5034:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5021:33:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                "typeString": "struct FTGStaking.Stakeholder storage ref"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5055:16:8",
                            "memberName": "lastRewardUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5021:50:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 366,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5074:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5097:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5074:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5021:85:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "5021:85:8"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateStakeholderReward",
            "nameLocation": "3280:24:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_stakeholderAddress",
                  "nameLocation": "3322:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "3314:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3314:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_stakeType",
                  "nameLocation": "3361:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 373,
                  "src": "3351:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeType_$37",
                    "typeString": "enum FTGStaking.StakeType"
                  },
                  "typeName": {
                    "id": 256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 255,
                      "name": "StakeType",
                      "nameLocations": [
                        "3351:9:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37,
                      "src": "3351:9:8"
                    },
                    "referencedDeclaration": 37,
                    "src": "3351:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeType_$37",
                      "typeString": "enum FTGStaking.StakeType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:73:8"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:0:8"
            },
            "scope": 804,
            "src": "3271:1852:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5214:1368:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 382,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5276:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5286:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5276:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5289:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
                          "typeString": "literal_string \"Cannot stake nothing\""
                        },
                        "value": "Cannot stake nothing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
                          "typeString": "literal_string \"Cannot stake nothing\""
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5268:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5268:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "5268:44:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 389,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "5387:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 392,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5416:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5420:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5416:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 390,
                              "name": "ftgToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "5397:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1014",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5406:9:8",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "5397:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5397:30:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5387:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74204654472042616c616e6365",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5441:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e301988b763e7e8c957408250914500de36a183a66187354ad895ed32c89e837",
                          "typeString": "literal_string \"Insufficient FTG Balance\""
                        },
                        "value": "Insufficient FTG Balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e301988b763e7e8c957408250914500de36a183a66187354ad895ed32c89e837",
                          "typeString": "literal_string \"Insufficient FTG Balance\""
                        }
                      ],
                      "id": 388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5366:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5366:111:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "5366:111:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5604:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5608:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5604:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 406,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5624:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FTGStaking_$804",
                              "typeString": "contract FTGStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FTGStaking_$804",
                              "typeString": "contract FTGStaking"
                            }
                          ],
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5616:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 404,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5616:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5616:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 408,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "5631:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 399,
                        "name": "ftgToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5582:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1014",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5591:12:8",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 995,
                      "src": "5582:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5582:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:57:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeType_$37",
                      "typeString": "enum FTGStaking.StakeType"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 411,
                      "name": "_stakeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "5654:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeType_$37",
                        "typeString": "enum FTGStaking.StakeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 412,
                        "name": "StakeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "5668:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeType_$37_$",
                          "typeString": "type(enum FTGStaking.StakeType)"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5678:4:8",
                      "memberName": "FLEX",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "5668:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeType_$37",
                        "typeString": "enum FTGStaking.StakeType"
                      }
                    },
                    "src": "5654:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 490,
                  "nodeType": "IfStatement",
                  "src": "5650:915:8",
                  "trueBody": {
                    "id": 489,
                    "nodeType": "Block",
                    "src": "5684:881:8",
                    "statements": [
                      {
                        "assignments": [
                          416
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 416,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "5737:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 489,
                            "src": "5729:11:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 415,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5729:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 417,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5729:11:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 418,
                                  "name": "stakeholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "5758:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                    "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                  }
                                },
                                "id": 421,
                                "indexExpression": {
                                  "expression": {
                                    "id": 419,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5771:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5775:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5771:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5758:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                  "typeString": "struct FTGStaking.Stakeholder storage ref"
                                }
                              },
                              "id": 422,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5783:10:8",
                              "memberName": "flexStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24,
                              "src": "5758:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                                "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5794:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5758:42:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5804:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5758:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 440,
                        "nodeType": "IfStatement",
                        "src": "5754:200:8",
                        "trueBody": {
                          "id": 439,
                          "nodeType": "Block",
                          "src": "5807:147:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 426,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 416,
                                  "src": "5866:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "35",
                                      "id": 429,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5887:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      },
                                      "value": "5"
                                    },
                                    {
                                      "id": 430,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "5890:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "313030",
                                      "id": 431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5899:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 427,
                                      "name": "PRBMath",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2908,
                                      "src": "5872:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_PRBMath_$2908_$",
                                        "typeString": "type(library PRBMath)"
                                      }
                                    },
                                    "id": 428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5880:6:8",
                                    "memberName": "mulDiv",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2497,
                                    "src": "5872:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5872:31:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5866:37:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 434,
                              "nodeType": "ExpressionStatement",
                              "src": "5866:37:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 436,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 416,
                                    "src": "5935:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 435,
                                  "name": "_addNewReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151,
                                  "src": "5921:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5921:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 438,
                              "nodeType": "ExpressionStatement",
                              "src": "5921:18:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          442
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 442,
                            "mutability": "mutable",
                            "name": "amountStaked",
                            "nameLocation": "5975:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 489,
                            "src": "5967:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 441,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5967:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 446,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 443,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "5990:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 444,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "6000:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5990:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5967:36:8"
                      },
                      {
                        "expression": {
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 447,
                                "name": "stakeholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "6080:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                  "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                }
                              },
                              "id": 450,
                              "indexExpression": {
                                "expression": {
                                  "id": 448,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6093:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6097:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6093:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6080:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                "typeString": "struct FTGStaking.Stakeholder storage ref"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6105:11:8",
                            "memberName": "totalStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "6080:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 452,
                            "name": "amountStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6120:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6080:52:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "6080:52:8"
                      },
                      {
                        "expression": {
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 455,
                            "name": "totalFTGStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "6146:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 456,
                            "name": "amountStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6164:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6146:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 458,
                        "nodeType": "ExpressionStatement",
                        "src": "6146:30:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "746f74616c4654475374616b6564",
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6199:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b2c2929b365b227e5c9627e6805de17238ed67cca7ec46bd70820ee5abdd98ab",
                                "typeString": "literal_string \"totalFTGStaked\""
                              },
                              "value": "totalFTGStaked"
                            },
                            {
                              "id": 461,
                              "name": "totalFTGStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "6217:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_b2c2929b365b227e5c9627e6805de17238ed67cca7ec46bd70820ee5abdd98ab",
                                "typeString": "literal_string \"totalFTGStaked\""
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 459,
                            "name": "Log",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "6195:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,uint256)"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 463,
                        "nodeType": "EmitStatement",
                        "src": "6190:42:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 471,
                                      "name": "stakeholders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "6378:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                        "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                      }
                                    },
                                    "id": 474,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 472,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "6391:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 473,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6395:6:8",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "6391:10:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6378:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                      "typeString": "struct FTGStaking.Stakeholder storage ref"
                                    }
                                  },
                                  "id": 475,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6403:11:8",
                                  "memberName": "totalStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "6378:36:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 476,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6416:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6422:9:8",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6416:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 470,
                                "name": "Staking",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "6370:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Staking_$14_storage_ptr_$",
                                  "typeString": "type(struct FTGStaking.Staking storage pointer)"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6370:62:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                                "typeString": "struct FTGStaking.Staking memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                                "typeString": "struct FTGStaking.Staking memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 464,
                                  "name": "stakeholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "6312:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                    "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                  }
                                },
                                "id": 467,
                                "indexExpression": {
                                  "expression": {
                                    "id": 465,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6325:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6329:6:8",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6325:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6312:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                  "typeString": "struct FTGStaking.Stakeholder storage ref"
                                }
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6337:10:8",
                              "memberName": "flexStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24,
                              "src": "6312:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                                "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                              }
                            },
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6348:4:8",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6312:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$_t_struct$_Staking_$14_storage_$returns$__$bound_to$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct FTGStaking.Staking storage ref[] storage pointer,struct FTGStaking.Staking storage ref)"
                            }
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6312:134:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "6312:134:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 482,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6512:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6516:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6512:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 484,
                              "name": "amountStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "6524:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 485,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6538:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6544:9:8",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6538:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 481,
                            "name": "NewStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "6503:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6503:51:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 488,
                        "nodeType": "EmitStatement",
                        "src": "6498:56:8"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "10087fb1",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "5162:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5176:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5168:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_stakeType",
                  "nameLocation": "5195:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5185:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeType_$37",
                    "typeString": "enum FTGStaking.StakeType"
                  },
                  "typeName": {
                    "id": 377,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 376,
                      "name": "StakeType",
                      "nameLocations": [
                        "5185:9:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37,
                      "src": "5185:9:8"
                    },
                    "referencedDeclaration": 37,
                    "src": "5185:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeType_$37",
                      "typeString": "enum FTGStaking.StakeType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5167:39:8"
            },
            "returnParameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5214:0:8"
            },
            "scope": 804,
            "src": "5153:1429:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "6670:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 498,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "6694:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 497,
                      "name": "_addNewReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "6680:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6680:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "6680:22:8"
                }
              ]
            },
            "functionSelector": "1e2720ff",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositReward",
            "nameLocation": "6630:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6652:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "6644:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6644:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6643:17:8"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6670:0:8"
            },
            "scope": 804,
            "src": "6621:88:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "6786:69:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 506,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6821:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6825:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6821:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 508,
                          "name": "StakeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "6833:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StakeType_$37_$",
                            "typeString": "type(enum FTGStaking.StakeType)"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6843:4:8",
                        "memberName": "FLEX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "6833:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StakeType_$37",
                          "typeString": "enum FTGStaking.StakeType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_StakeType_$37",
                          "typeString": "enum FTGStaking.StakeType"
                        }
                      ],
                      "id": 505,
                      "name": "_updateStakeholderReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "6796:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_StakeType_$37_$returns$__$",
                        "typeString": "function (address,enum FTGStaking.StakeType)"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6796:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6796:52:8"
                }
              ]
            },
            "functionSelector": "f36c0a72",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "6764:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6776:2:8"
            },
            "returnParameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6786:0:8"
            },
            "scope": 804,
            "src": "6755:100:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "6977:1834:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_StakeType_$37",
                      "typeString": "enum FTGStaking.StakeType"
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 521,
                      "name": "_stakeType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "6991:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeType_$37",
                        "typeString": "enum FTGStaking.StakeType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 522,
                        "name": "StakeType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "7005:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StakeType_$37_$",
                          "typeString": "type(enum FTGStaking.StakeType)"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7015:4:8",
                      "memberName": "FLEX",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "7005:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StakeType_$37",
                        "typeString": "enum FTGStaking.StakeType"
                      }
                    },
                    "src": "6991:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 675,
                  "nodeType": "IfStatement",
                  "src": "6987:1818:8",
                  "trueBody": {
                    "id": 674,
                    "nodeType": "Block",
                    "src": "7021:1784:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 526,
                                    "name": "stakeholders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "7093:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                      "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                    }
                                  },
                                  "id": 529,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 527,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7106:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 528,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7110:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7106:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7093:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                    "typeString": "struct FTGStaking.Stakeholder storage ref"
                                  }
                                },
                                "id": 530,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7118:11:8",
                                "memberName": "totalStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "7093:36:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7133:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7093:41:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20465447207374616b6564",
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7136:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335d4dc0c2e1ff83d5bc9c2933e3e4af85d73a1c8cf78f812a6ec34240d0fa4e",
                                "typeString": "literal_string \"No FTG staked\""
                              },
                              "value": "No FTG staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335d4dc0c2e1ff83d5bc9c2933e3e4af85d73a1c8cf78f812a6ec34240d0fa4e",
                                "typeString": "literal_string \"No FTG staked\""
                              }
                            ],
                            "id": 525,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7085:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7085:67:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 535,
                        "nodeType": "ExpressionStatement",
                        "src": "7085:67:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 536,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 515,
                            "src": "7239:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 537,
                                "name": "stakeholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "7250:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                  "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                }
                              },
                              "id": 540,
                              "indexExpression": {
                                "expression": {
                                  "id": 538,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7263:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7267:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7263:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7250:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                "typeString": "struct FTGStaking.Stakeholder storage ref"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7275:11:8",
                            "memberName": "totalStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "7250:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7239:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 672,
                          "nodeType": "Block",
                          "src": "8094:701:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 612,
                                      "name": "stakeholders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "8189:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                        "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                      }
                                    },
                                    "id": 615,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 613,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "8202:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 614,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8206:6:8",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8202:10:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8189:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                      "typeString": "struct FTGStaking.Stakeholder storage ref"
                                    }
                                  },
                                  "id": 616,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8214:11:8",
                                  "memberName": "totalStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "8189:36:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 617,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 515,
                                  "src": "8229:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8189:47:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 619,
                              "nodeType": "ExpressionStatement",
                              "src": "8189:47:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 627,
                                            "name": "stakeholders",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46,
                                            "src": "8349:12:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                              "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                            }
                                          },
                                          "id": 630,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 628,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "8362:3:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 629,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "8366:6:8",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "8362:10:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "8349:24:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                            "typeString": "struct FTGStaking.Stakeholder storage ref"
                                          }
                                        },
                                        "id": 631,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8374:11:8",
                                        "memberName": "totalStaked",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 16,
                                        "src": "8349:36:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 632,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "8411:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 633,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8417:9:8",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "8411:15:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 626,
                                      "name": "Staking",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "8316:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_Staking_$14_storage_ptr_$",
                                        "typeString": "type(struct FTGStaking.Staking storage pointer)"
                                      }
                                    },
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8316:132:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                                      "typeString": "struct FTGStaking.Staking memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                                      "typeString": "struct FTGStaking.Staking memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 620,
                                        "name": "stakeholders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "8254:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                          "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                        }
                                      },
                                      "id": 623,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 621,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "8267:3:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 622,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8271:6:8",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "8267:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8254:24:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                        "typeString": "struct FTGStaking.Stakeholder storage ref"
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8279:10:8",
                                    "memberName": "flexStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24,
                                    "src": "8254:35:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                                      "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                                    }
                                  },
                                  "id": 625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8290:4:8",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "8254:40:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$_t_struct$_Staking_$14_storage_$returns$__$bound_to$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct FTGStaking.Staking storage ref[] storage pointer,struct FTGStaking.Staking storage ref)"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8254:212:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 636,
                              "nodeType": "ExpressionStatement",
                              "src": "8254:212:8"
                            },
                            {
                              "expression": {
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 637,
                                  "name": "totalFTGStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "8484:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 638,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 515,
                                  "src": "8502:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8484:25:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 640,
                              "nodeType": "ExpressionStatement",
                              "src": "8484:25:8"
                            },
                            {
                              "assignments": [
                                642
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 642,
                                  "mutability": "mutable",
                                  "name": "fee",
                                  "nameLocation": "8574:3:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 672,
                                  "src": "8566:11:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 641,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8566:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 649,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8595:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  {
                                    "id": 646,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 515,
                                    "src": "8598:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "313030",
                                    "id": 647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8607:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "id": 643,
                                    "name": "PRBMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2908,
                                    "src": "8580:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PRBMath_$2908_$",
                                      "typeString": "type(library PRBMath)"
                                    }
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8588:6:8",
                                  "memberName": "mulDiv",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2497,
                                  "src": "8580:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8580:31:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8566:45:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 651,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 642,
                                    "src": "8643:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 650,
                                  "name": "_addNewReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151,
                                  "src": "8629:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8629:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 653,
                              "nodeType": "ExpressionStatement",
                              "src": "8629:18:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 657,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8683:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 658,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8687:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8683:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 659,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 515,
                                      "src": "8695:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 660,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 642,
                                      "src": "8705:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8695:13:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 654,
                                    "name": "ftgToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9,
                                    "src": "8665:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1014",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8674:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 963,
                                  "src": "8665:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8665:44:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 663,
                              "nodeType": "ExpressionStatement",
                              "src": "8665:44:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 665,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8743:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 666,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8747:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8743:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 667,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 515,
                                    "src": "8755:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 668,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "8764:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 669,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8770:9:8",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "8764:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 664,
                                  "name": "NewUnstake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "8732:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8732:48:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 671,
                              "nodeType": "EmitStatement",
                              "src": "8727:53:8"
                            }
                          ]
                        },
                        "id": 673,
                        "nodeType": "IfStatement",
                        "src": "7235:1560:8",
                        "trueBody": {
                          "id": 611,
                          "nodeType": "Block",
                          "src": "7288:800:8",
                          "statements": [
                            {
                              "assignments": [
                                544
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 544,
                                  "mutability": "mutable",
                                  "name": "amountToUnstake",
                                  "nameLocation": "7391:15:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 611,
                                  "src": "7383:23:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 543,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7383:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 550,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 545,
                                    "name": "stakeholders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "7409:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                      "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                    }
                                  },
                                  "id": 548,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 546,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7422:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 547,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7426:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7422:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7409:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                    "typeString": "struct FTGStaking.Stakeholder storage ref"
                                  }
                                },
                                "id": 549,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7434:11:8",
                                "memberName": "totalStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "7409:36:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7383:62:8"
                            },
                            {
                              "expression": {
                                "id": 553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 551,
                                  "name": "totalFTGStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "7463:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 552,
                                  "name": "amountToUnstake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 544,
                                  "src": "7481:15:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7463:33:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 554,
                              "nodeType": "ExpressionStatement",
                              "src": "7463:33:8"
                            },
                            {
                              "expression": {
                                "id": 561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 555,
                                      "name": "stakeholders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "7514:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                        "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                      }
                                    },
                                    "id": 558,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 556,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "7527:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 557,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7531:6:8",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "7527:10:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7514:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                      "typeString": "struct FTGStaking.Stakeholder storage ref"
                                    }
                                  },
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7539:11:8",
                                  "memberName": "totalStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 16,
                                  "src": "7514:36:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7553:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7514:40:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 562,
                              "nodeType": "ExpressionStatement",
                              "src": "7514:40:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 570,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7642:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      {
                                        "expression": {
                                          "id": 571,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "7645:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 572,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7651:9:8",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "7645:15:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 569,
                                      "name": "Staking",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "7634:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_Staking_$14_storage_ptr_$",
                                        "typeString": "type(struct FTGStaking.Staking storage pointer)"
                                      }
                                    },
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7634:27:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                                      "typeString": "struct FTGStaking.Staking memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                                      "typeString": "struct FTGStaking.Staking memory"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 563,
                                        "name": "stakeholders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "7572:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                          "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                        }
                                      },
                                      "id": 566,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 564,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7585:3:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7589:6:8",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7585:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7572:24:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                        "typeString": "struct FTGStaking.Stakeholder storage ref"
                                      }
                                    },
                                    "id": 567,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7597:10:8",
                                    "memberName": "flexStakes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24,
                                    "src": "7572:35:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                                      "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                                    }
                                  },
                                  "id": 568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7608:4:8",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "7572:40:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$_t_struct$_Staking_$14_storage_$returns$__$bound_to$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct FTGStaking.Staking storage ref[] storage pointer,struct FTGStaking.Staking storage ref)"
                                  }
                                },
                                "id": 574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7572:107:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 575,
                              "nodeType": "ExpressionStatement",
                              "src": "7572:107:8"
                            },
                            {
                              "assignments": [
                                577
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 577,
                                  "mutability": "mutable",
                                  "name": "fee",
                                  "nameLocation": "7744:3:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 611,
                                  "src": "7736:11:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 576,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7736:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 584,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "32",
                                    "id": 580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7765:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  {
                                    "id": 581,
                                    "name": "amountToUnstake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 544,
                                    "src": "7768:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "313030",
                                    "id": 582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7785:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "id": 578,
                                    "name": "PRBMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2908,
                                    "src": "7750:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PRBMath_$2908_$",
                                      "typeString": "type(library PRBMath)"
                                    }
                                  },
                                  "id": 579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7758:6:8",
                                  "memberName": "mulDiv",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2497,
                                  "src": "7750:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7750:39:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7736:53:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 586,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 577,
                                    "src": "7821:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 585,
                                  "name": "_addNewReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151,
                                  "src": "7807:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7807:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 588,
                              "nodeType": "ExpressionStatement",
                              "src": "7807:18:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 592,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7861:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 593,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7865:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7861:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 594,
                                      "name": "amountToUnstake",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 544,
                                      "src": "7873:15:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 595,
                                      "name": "fee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 577,
                                      "src": "7891:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7873:21:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 589,
                                    "name": "ftgToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9,
                                    "src": "7843:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1014",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7852:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 963,
                                  "src": "7843:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7843:52:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 598,
                              "nodeType": "ExpressionStatement",
                              "src": "7843:52:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 600,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7950:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 601,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7954:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7950:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 602,
                                        "name": "stakeholders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 46,
                                        "src": "7982:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                          "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                        }
                                      },
                                      "id": 605,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 603,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "7995:3:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 604,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7999:6:8",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "7995:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7982:24:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                        "typeString": "struct FTGStaking.Stakeholder storage ref"
                                      }
                                    },
                                    "id": 606,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8007:11:8",
                                    "memberName": "totalStaked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "7982:36:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 607,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "8040:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8046:9:8",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "8040:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 599,
                                  "name": "NewUnstake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "7918:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7918:155:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 610,
                              "nodeType": "EmitStatement",
                              "src": "7913:160:8"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "bc9699f1",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "6923:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6939:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "6931:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6931:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "_stakeType",
                  "nameLocation": "6958:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "6948:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_StakeType_$37",
                    "typeString": "enum FTGStaking.StakeType"
                  },
                  "typeName": {
                    "id": 517,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 516,
                      "name": "StakeType",
                      "nameLocations": [
                        "6948:9:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37,
                      "src": "6948:9:8"
                    },
                    "referencedDeclaration": 37,
                    "src": "6948:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StakeType_$37",
                      "typeString": "enum FTGStaking.StakeType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6930:39:8"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6977:0:8"
            },
            "scope": 804,
            "src": "6914:1897:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "8922:343:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 681,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8998:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9002:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8998:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 683,
                          "name": "StakeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "9010:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StakeType_$37_$",
                            "typeString": "type(enum FTGStaking.StakeType)"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9020:4:8",
                        "memberName": "FLEX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "9010:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StakeType_$37",
                          "typeString": "enum FTGStaking.StakeType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_StakeType_$37",
                          "typeString": "enum FTGStaking.StakeType"
                        }
                      ],
                      "id": 680,
                      "name": "_updateStakeholderReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "8973:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_StakeType_$37_$returns$__$",
                        "typeString": "function (address,enum FTGStaking.StakeType)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8973:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "8973:52:8"
                },
                {
                  "assignments": [
                    688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 688,
                      "mutability": "mutable",
                      "name": "rewardToWithdraw",
                      "nameLocation": "9096:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "9088:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 687,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9088:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 694,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 689,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "9115:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                          "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                        }
                      },
                      "id": 692,
                      "indexExpression": {
                        "expression": {
                          "id": 690,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9128:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9132:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9128:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9115:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                        "typeString": "struct FTGStaking.Stakeholder storage ref"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9140:11:8",
                    "memberName": "totalReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18,
                    "src": "9115:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9088:63:8"
                },
                {
                  "expression": {
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 695,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "9161:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                            "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                          }
                        },
                        "id": 698,
                        "indexExpression": {
                          "expression": {
                            "id": 696,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9174:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9178:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9174:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9161:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                          "typeString": "struct FTGStaking.Stakeholder storage ref"
                        }
                      },
                      "id": 699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9186:11:8",
                      "memberName": "totalReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "9161:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9200:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9161:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "9161:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 706,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9229:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9233:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9229:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 708,
                        "name": "rewardToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "9241:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 703,
                        "name": "ftgToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "9211:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1014",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9220:8:8",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 963,
                      "src": "9211:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9211:47:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "9211:47:8"
                }
              ]
            },
            "functionSelector": "c885bc58",
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawReward",
            "nameLocation": "8898:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8912:2:8"
            },
            "returnParameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8922:0:8"
            },
            "scope": 804,
            "src": "8889:376:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "9385:418:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 718,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9461:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9465:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9461:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 720,
                          "name": "StakeType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "9473:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StakeType_$37_$",
                            "typeString": "type(enum FTGStaking.StakeType)"
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9483:4:8",
                        "memberName": "FLEX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "9473:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StakeType_$37",
                          "typeString": "enum FTGStaking.StakeType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_StakeType_$37",
                          "typeString": "enum FTGStaking.StakeType"
                        }
                      ],
                      "id": 717,
                      "name": "_updateStakeholderReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "9436:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_StakeType_$37_$returns$__$",
                        "typeString": "function (address,enum FTGStaking.StakeType)"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9436:52:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "9436:52:8"
                },
                {
                  "expression": {
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 724,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "9556:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                            "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                          }
                        },
                        "id": 727,
                        "indexExpression": {
                          "expression": {
                            "id": 725,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9569:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9573:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9569:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9556:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                          "typeString": "struct FTGStaking.Stakeholder storage ref"
                        }
                      },
                      "id": 728,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9581:11:8",
                      "memberName": "totalReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "9556:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 729,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "9596:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9556:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "9556:47:8"
                },
                {
                  "expression": {
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 732,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "9613:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                            "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                          }
                        },
                        "id": 735,
                        "indexExpression": {
                          "expression": {
                            "id": 733,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9626:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9630:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9626:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9613:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                          "typeString": "struct FTGStaking.Stakeholder storage ref"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9638:11:8",
                      "memberName": "totalStaked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "9613:36:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 737,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 714,
                      "src": "9653:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9613:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "9613:47:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 747,
                                "name": "stakeholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "9732:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                                  "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                                }
                              },
                              "id": 750,
                              "indexExpression": {
                                "expression": {
                                  "id": 748,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9745:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9749:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9745:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9732:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                                "typeString": "struct FTGStaking.Stakeholder storage ref"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9757:11:8",
                            "memberName": "totalStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "9732:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 752,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9770:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9776:9:8",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9770:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 746,
                          "name": "Staking",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "9724:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Staking_$14_storage_ptr_$",
                            "typeString": "type(struct FTGStaking.Staking storage pointer)"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9724:62:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                          "typeString": "struct FTGStaking.Staking memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Staking_$14_memory_ptr",
                          "typeString": "struct FTGStaking.Staking memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 740,
                            "name": "stakeholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "9670:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                              "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                            }
                          },
                          "id": 743,
                          "indexExpression": {
                            "expression": {
                              "id": 741,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9683:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9687:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9683:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9670:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                            "typeString": "struct FTGStaking.Stakeholder storage ref"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9695:10:8",
                        "memberName": "flexStakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "9670:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                          "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                        }
                      },
                      "id": 745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9706:4:8",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "9670:40:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$_t_struct$_Staking_$14_storage_$returns$__$bound_to$_t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct FTGStaking.Staking storage ref[] storage pointer,struct FTGStaking.Staking storage ref)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9670:126:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "9670:126:8"
                }
              ]
            },
            "functionSelector": "dc72bb97",
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeReward",
            "nameLocation": "9349:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9369:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "9361:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9361:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9360:17:8"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9385:0:8"
            },
            "scope": 804,
            "src": "9340:463:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "9911:35:8",
              "statements": [
                {
                  "expression": {
                    "id": 765,
                    "name": "rewardsList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "9928:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage",
                      "typeString": "struct FTGStaking.Reward storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 764,
                  "id": 766,
                  "nodeType": "Return",
                  "src": "9921:18:8"
                }
              ]
            },
            "functionSelector": "bd909870",
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewRewardsList",
            "nameLocation": "9855:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9870:2:8"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "9894:15:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Reward_$32_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct FTGStaking.Reward[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 761,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 760,
                        "name": "Reward",
                        "nameLocations": [
                          "9894:6:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 32,
                        "src": "9894:6:8"
                      },
                      "referencedDeclaration": 32,
                      "src": "9894:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reward_$32_storage_ptr",
                        "typeString": "struct FTGStaking.Reward"
                      }
                    },
                    "id": 762,
                    "nodeType": "ArrayTypeName",
                    "src": "9894:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Reward_$32_storage_$dyn_storage_ptr",
                      "typeString": "struct FTGStaking.Reward[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9893:17:8"
            },
            "scope": 804,
            "src": "9846:100:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "10117:68:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 777,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "10134:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                          "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                        }
                      },
                      "id": 779,
                      "indexExpression": {
                        "id": 778,
                        "name": "_stakeholderAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 770,
                        "src": "10147:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10134:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                        "typeString": "struct FTGStaking.Stakeholder storage ref"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10168:10:8",
                    "memberName": "flexStakes",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 24,
                    "src": "10134:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage",
                      "typeString": "struct FTGStaking.Staking storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 776,
                  "id": 781,
                  "nodeType": "Return",
                  "src": "10127:51:8"
                }
              ]
            },
            "functionSelector": "7ba6f458",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakes",
            "nameLocation": "10011:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "_stakeholderAddress",
                  "nameLocation": "10029:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "10021:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10021:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10020:29:8"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "10095:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Staking_$14_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct FTGStaking.Staking[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 773,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 772,
                        "name": "Staking",
                        "nameLocations": [
                          "10095:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 14,
                        "src": "10095:7:8"
                      },
                      "referencedDeclaration": 14,
                      "src": "10095:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staking_$14_storage_ptr",
                        "typeString": "struct FTGStaking.Staking"
                      }
                    },
                    "id": 774,
                    "nodeType": "ArrayTypeName",
                    "src": "10095:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Staking_$14_storage_$dyn_storage_ptr",
                      "typeString": "struct FTGStaking.Staking[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10094:18:8"
            },
            "scope": 804,
            "src": "10002:183:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "10370:157:8",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 792,
                            "name": "stakeholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "10401:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                              "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                            }
                          },
                          "id": 794,
                          "indexExpression": {
                            "id": 793,
                            "name": "_stakeholderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "10414:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10401:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                            "typeString": "struct FTGStaking.Stakeholder storage ref"
                          }
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10435:11:8",
                        "memberName": "totalReward",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "10401:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 796,
                            "name": "stakeholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "10460:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stakeholder_$25_storage_$",
                              "typeString": "mapping(address => struct FTGStaking.Stakeholder storage ref)"
                            }
                          },
                          "id": 798,
                          "indexExpression": {
                            "id": 797,
                            "name": "_stakeholderAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "10473:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10460:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stakeholder_$25_storage",
                            "typeString": "struct FTGStaking.Stakeholder storage ref"
                          }
                        },
                        "id": 799,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10494:16:8",
                        "memberName": "lastRewardUpdate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20,
                        "src": "10460:50:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 800,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10387:133:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 791,
                  "id": 801,
                  "nodeType": "Return",
                  "src": "10380:140:8"
                }
              ]
            },
            "functionSelector": "0b3c215e",
            "id": 803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountRewardInfo",
            "nameLocation": "10253:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_stakeholderAddress",
                  "nameLocation": "10282:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10274:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10274:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10273:29:8"
            },
            "returnParameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10348:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10348:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10357:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10357:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10347:18:8"
            },
            "scope": 804,
            "src": "10244:283:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 805,
        "src": "282:10248:8",
        "usedErrors": [
          1028
        ]
      }
    ],
    "src": "32:10499:8"
  },
  "bytecode": "",
  "bytecodeSha1": "f2639aec6f995cd8e47a2dd6f3e701734bbb26d0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "FTGStaking",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "84": [
            2082,
            2104,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "7": {
        "PRBMath.mulDiv": {
          "85": [
            15860,
            15870,
            false
          ],
          "86": [
            16092,
            16112,
            false
          ]
        }
      },
      "8": {
        "FTGStaking._addNewReward": {
          "80": [
            1421,
            1440,
            false
          ]
        },
        "FTGStaking._getStakeHolderStakeIndexAtRewardTime": {
          "83": [
            3192,
            3197,
            true
          ]
        },
        "FTGStaking._getfirstRewardsIndexToAdd": {
          "82": [
            2573,
            2578,
            true
          ]
        },
        "FTGStaking._updateStakeholderReward": {
          "81": [
            3400,
            3428,
            false
          ]
        },
        "FTGStaking.stake": {
          "73": [
            5276,
            5287,
            true
          ],
          "74": [
            5387,
            5427,
            true
          ],
          "75": [
            5654,
            5682,
            false
          ],
          "76": [
            5758,
            5805,
            false
          ]
        },
        "FTGStaking.unstake": {
          "77": [
            6991,
            7019,
            false
          ],
          "78": [
            7093,
            7134,
            true
          ],
          "79": [
            7239,
            7286,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "1": [
            1133,
            1146
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1764,
            1809
          ],
          "15": [
            1819,
            1838
          ]
        },
        "Ownable.transferOwnership": {
          "38": [
            2074,
            2147
          ],
          "39": [
            2157,
            2200
          ],
          "40": [
            2210,
            2227
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "13": [
            658,
            675
          ]
        }
      },
      "7": {
        "PRBMath.mulDiv": {
          "42": [
            15914,
            15942
          ],
          "43": [
            15970,
            15983
          ],
          "44": [
            16088,
            16189
          ],
          "45": [
            17576,
            17600
          ],
          "46": [
            18174,
            18210
          ],
          "47": [
            18243,
            18279
          ],
          "48": [
            18313,
            18349
          ],
          "49": [
            18383,
            18419
          ],
          "50": [
            18453,
            18489
          ],
          "51": [
            18524,
            18560
          ],
          "52": [
            18994,
            19018
          ]
        }
      },
      "8": {
        "FTGStaking._addNewReward": {
          "53": [
            1456,
            1484
          ],
          "54": [
            1679,
            1721
          ],
          "55": [
            1735,
            1801
          ],
          "56": [
            1815,
            1855
          ],
          "57": [
            1886,
            1939
          ],
          "58": [
            1953,
            1993
          ]
        },
        "FTGStaking._getStakeHolderStakeIndexAtRewardTime": {
          "71": [
            3148,
            3151
          ],
          "72": [
            3185,
            3205
          ]
        },
        "FTGStaking._getfirstRewardsIndexToAdd": {
          "69": [
            2496,
            2499
          ],
          "70": [
            2566,
            2590
          ]
        },
        "FTGStaking._updateStakeholderReward": {
          "59": [
            3587,
            3622
          ],
          "60": [
            3964,
            4103
          ],
          "61": [
            4307,
            4436
          ],
          "62": [
            4454,
            4585
          ],
          "63": [
            4603,
            4812
          ],
          "64": [
            4830,
            4865
          ],
          "65": [
            3725,
            3728
          ],
          "66": [
            4893,
            4934
          ],
          "67": [
            4948,
            5007
          ],
          "68": [
            5021,
            5106
          ]
        },
        "FTGStaking.depositReward": {
          "12": [
            6680,
            6702
          ]
        },
        "FTGStaking.getAccountRewardInfo": {
          "0": [
            10380,
            10520
          ]
        },
        "FTGStaking.getStakes": {
          "16": [
            10127,
            10178
          ]
        },
        "FTGStaking.stake": {
          "2": [
            5268,
            5312
          ],
          "3": [
            5366,
            5477
          ],
          "4": [
            5582,
            5639
          ],
          "5": [
            5866,
            5903
          ],
          "6": [
            5921,
            5939
          ],
          "7": [
            6080,
            6132
          ],
          "8": [
            6146,
            6176
          ],
          "9": [
            6190,
            6232
          ],
          "10": [
            6312,
            6446
          ],
          "11": [
            6498,
            6554
          ]
        },
        "FTGStaking.stakeReward": {
          "34": [
            9436,
            9488
          ],
          "35": [
            9556,
            9603
          ],
          "36": [
            9613,
            9660
          ],
          "37": [
            9670,
            9796
          ]
        },
        "FTGStaking.unstake": {
          "17": [
            7085,
            7152
          ],
          "18": [
            7463,
            7496
          ],
          "19": [
            7514,
            7554
          ],
          "20": [
            7572,
            7679
          ],
          "21": [
            7807,
            7825
          ],
          "22": [
            7843,
            7895
          ],
          "23": [
            7913,
            8073
          ],
          "24": [
            8189,
            8236
          ],
          "25": [
            8254,
            8466
          ],
          "26": [
            8484,
            8509
          ],
          "27": [
            8629,
            8647
          ],
          "28": [
            8665,
            8709
          ],
          "29": [
            8727,
            8780
          ]
        },
        "FTGStaking.updateReward": {
          "41": [
            6796,
            6848
          ]
        },
        "FTGStaking.viewRewardsList": {
          "30": [
            9921,
            9939
          ]
        },
        "FTGStaking.withdrawReward": {
          "31": [
            8973,
            9025
          ],
          "32": [
            9161,
            9201
          ],
          "33": [
            9211,
            9258
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.1.0/Ownable",
    "paulrberg/prb-math@2.5.0/PRBMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "282:10248:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:29;;;;;;;;;160:25:10;;;148:2;133:18;741:29:8;;;;;;;;10244:283;;;;;;:::i;:::-;-1:-1:-1;;;;;10401:33:8;10348:7;10401:33;;;:12;:33;;;;;:45;;;;10460:50;;;;;10401:45;;10244:283;;;;;661:25:10;;;717:2;702:18;;695:34;;;;634:18;10244:283:8;487:248:10;5153:1429:8;;;;;;:::i;:::-;;:::i;:::-;;319:32;;;;;;;;-1:-1:-1;;;;;1260:32:10;;;1242:51;;1230:2;1215:18;319:32:8;1081:218:10;6621:88:8;;;;;;:::i;:::-;;:::i;1700:145:0:-;;;:::i;10002:183:8:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1068:85:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;;6914:1897:8;;;;;;:::i;:::-;;:::i;838:27::-;;;;;;:::i;:::-;;:::i;:::-;;;;2688:25:10;;;2744:2;2729:18;;2722:34;;;;2772:18;;;2765:34;2676:2;2661:18;838:27:8;2486:319:10;9846:100:8;;;:::i;:::-;;;;;;;:::i;872:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;8889:376;;;:::i;9340:463::-;;;;;;:::i;:::-;;:::i;1994:240:0:-;;;;;;:::i;:::-;;:::i;6755:100:8:-;;;:::i;5153:1429::-;5286:1;5276:7;:11;5268:44;;;;-1:-1:-1;;;5268:44:8;;3854:2:10;5268:44:8;;;3836:21:10;3893:2;3873:18;;;3866:30;-1:-1:-1;;;3912:18:10;;;3905:50;3972:18;;5268:44:8;;;;;;;;;5397:30;;-1:-1:-1;;;5397:30:8;;5416:10;5397:30;;;1242:51:10;5397:8:8;-1:-1:-1;;;;;5397:18:8;;;;1215::10;;5397:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5387:7;:40;5366:111;;;;-1:-1:-1;;;5366:111:8;;4392:2:10;5366:111:8;;;4374:21:10;4431:2;4411:18;;;4404:30;4470:26;4450:18;;;4443:54;4514:18;;5366:111:8;4190:348:10;5366:111:8;5582:57;;-1:-1:-1;;;5582:57:8;;5604:10;5582:57;;;4783:34:10;5624:4:8;4833:18:10;;;4826:43;4885:18;;;4878:34;;;5582:8:8;-1:-1:-1;;;;;5582:21:8;;;;4718:18:10;;5582:57:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5668:14:8;5654:10;:28;;;;;;;;:::i;:::-;;5650:915;;5771:10;5729:11;5758:24;;;:12;:24;;;;;;;:35;:42;:47;;5754:200;;5872:31;5887:1;5890:7;5899:3;5872:14;:31::i;:::-;5866:37;;5921:18;5935:3;5921:13;:18::i;:::-;5967:20;5990:13;6000:3;5990:7;:13;:::i;:::-;6093:10;6080:24;;;;:12;:24;;;;;:52;;5967:36;;-1:-1:-1;5967:36:8;;6080:24;;;:52;;5967:36;;6080:52;:::i;:::-;;;;;;;;6164:12;6146:14;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6217:14:8;;6195:37;;-1:-1:-1;;;;;;;;;;;6195:37:8;;;5962:2:10;5944:21;;;6001:2;5981:18;;;5974:30;-1:-1:-1;;;6035:2:10;6020:18;;6013:44;6124:4;6109:20;;6102:36;;;;6089:3;6074:19;;5732:412;6195:37:8;;;;;;;;6325:10;6312:24;;;;:12;:24;;;;;;;;6370:62;;;;;;;6378:36;;6370:62;;6416:15;6370:62;;;;;;6312:35;;;;:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6503:51;;;;;;6524:12;;6416:15;661:25:10;;;717:2;702:18;;695:34;649:2;634:18;;487:248;6503:51:8;;;;;;;;5684:881;;5650:915;5153:1429;;:::o;6621:88::-;6680:22;6694:7;6680:13;:22::i;:::-;6621:88;:::o;1700:145:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;6351:2:10;1272:68:0;;;6333:21:10;;;6370:18;;;6363:30;6429:34;6409:18;;;6402:62;6481:18;;1272:68:0;6149:356:10;1272:68:0;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;10002:183:8:-;-1:-1:-1;;;;;10134:33:8;;;;;;:12;:33;;;;;;;;:44;;;10127:51;;;;;;;;;;;;;;;;;10095:16;;10134:44;;10127:51;;10134:33;10127:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10002:183;;;:::o;6914:1897::-;7005:14;6991:10;:28;;;;;;;;:::i;:::-;;6987:1818;;7106:10;7093:24;;;;:12;:24;;;;;:36;:41;;7085:67;;;;-1:-1:-1;;;7085:67:8;;6712:2:10;7085:67:8;;;6694:21:10;6751:2;6731:18;;;6724:30;-1:-1:-1;;;6770:18:10;;;6763:43;6823:18;;7085:67:8;6510:337:10;7085:67:8;7263:10;7250:24;;;;:12;:24;;;;;:36;7239:47;;7235:1560;;7422:10;7383:23;7409:24;;;:12;:24;;;;;:36;7463:14;:33;;7409:36;;;;7463:33;;7409:36;;7463:33;:::i;:::-;;;;-1:-1:-1;;7527:10:8;7553:1;7514:24;;;:12;:24;;;;;;;;:40;;;7634:27;;;;;;;;;;;7645:15;7634:27;;;;;;7572:35;;:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7750:39;;7768:15;7785:3;7750:14;:39::i;:::-;7736:53;;7807:18;7821:3;7807:13;:18::i;:::-;-1:-1:-1;;;;;7843:8:8;:17;;7861:10;7873:21;7891:3;7873:15;:21;:::i;:::-;7843:52;;-1:-1:-1;;;;;;7843:52:8;;;;;;;-1:-1:-1;;;;;7044:32:10;;;7843:52:8;;;7026:51:10;7093:18;;;7086:34;6999:18;;7843:52:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7950:10:8;7982:24;;;;:12;:24;;;;;;;:36;7918:155;;;;;;8040:15;;661:25:10;;;717:2;702:18;;695:34;649:2;634:18;;487:248;7235:1560:8;8202:10;8189:24;;;;:12;:24;;;;;:47;;8229:7;;8189:24;:47;;8229:7;;8189:47;:::i;:::-;;;;-1:-1:-1;;8267:10:8;8254:24;;;;:12;:24;;;;;;;;8316:132;;;;;;;;8349:36;;8316:132;;8411:15;8316:132;;;;;;8254:35;;:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8484:25;;8502:7;;8254:24;8484:25;;8502:7;;8484:25;:::i;:::-;;;;-1:-1:-1;8566:11:8;;-1:-1:-1;8580:31:8;8595:1;8598:7;8607:3;8580:14;:31::i;:::-;8566:45;;8629:18;8643:3;8629:13;:18::i;:::-;-1:-1:-1;;;;;8665:8:8;:17;;8683:10;8695:13;8705:3;8695:7;:13;:::i;:::-;8665:44;;-1:-1:-1;;;;;;8665:44:8;;;;;;;-1:-1:-1;;;;;7044:32:10;;;8665:44:8;;;7026:51:10;7093:18;;;7086:34;6999:18;;8665:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8732:48:8;;;661:25:10;;;8764:15:8;717:2:10;702:18;;695:34;8743:10:8;;8732:48;;634:18:10;8732:48:8;;;;;;;8094:701;6914:1897;;:::o;838:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;838:27:8;:::o;9846:100::-;9894:15;9928:11;9921:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9846:100;:::o;8889:376::-;8973:52;8998:10;9010:14;8973:24;:52::i;:::-;9128:10;9088:24;9115;;;:12;:24;;;;;;:36;;;;9161:40;;;9211:47;-1:-1:-1;;;9211:47:8;;;;;7026:51:10;;;;7093:18;;;7086:34;;;9115:36:8;-1:-1:-1;;;;;9211:8:8;:17;;;;6999:18:10;;9211:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9340:463::-;9436:52;9461:10;9473:14;9436:24;:52::i;:::-;9569:10;9556:24;;;;:12;:24;;;;;:36;;:47;;9596:7;;9556:24;:47;;9596:7;;9556:47;:::i;:::-;;;;-1:-1:-1;;9626:10:8;9613:24;;;;:12;:24;;;;;:47;;9653:7;;9613:24;:47;;9653:7;;9613:47;:::i;:::-;;;;-1:-1:-1;;9683:10:8;9670:24;;;;:12;:24;;;;;;;;9724:62;;;;;;;;9732:36;;9724:62;;9770:15;9724:62;;;;;;9670:35;;:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9340:463:8:o;1994:240:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;6351:2:10;1272:68:0;;;6333:21:10;;;6370:18;;;6363:30;6429:34;6409:18;;;6402:62;6481:18;;1272:68:0;6149:356:10;1272:68:0;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;7333:2:10;2074:73:0::1;::::0;::::1;7315:21:10::0;7372:2;7352:18;;;7345:30;7411:34;7391:18;;;7384:62;-1:-1:-1;;;7462:18:10;;;7455:36;7508:19;;2074:73:0::1;7131:402:10::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;6755:100:8:-;6796:52;6821:10;6833:14;6796:24;:52::i;:::-;6755:100::o;15079:3983:7:-;15191:14;;;-1:-1:-1;;15680:1:7;15677;15670:20;15719:1;15716;15712:9;15703:18;;15770:5;15766:2;15763:13;15755:5;15751:2;15747:14;15743:34;15734:43;;;15860:5;15869:1;15860:10;15856:138;;15931:11;15923:5;:19;;;;;:::i;:::-;;15914:28;;15970:13;;;;15856:138;16101:11;16092:5;:20;16088:101;;16135:43;;-1:-1:-1;;;16135:43:7;;;;;661:25:10;;;702:18;;;695:34;;;634:18;;16135:43:7;487:248:10;16088:101:7;16424:17;16547:11;16544:1;16541;16534:25;17078:12;;17093:1;17078:16;;;17063:32;;17201:25;;;;;16696:21;;;17305:19;;;16653:20;;;;16642:32;;;17045:15;17467;;;17463:29;;;;17459:37;;;17585:15;;;;17576:24;;;;17937:1;:15;;17956:1;17936:21;;;18189;;;18185:25;;18174:36;18258:21;;;18254:25;;18243:36;18328:21;;;18324:25;;18313:36;18398:21;;;18394:25;;18383:36;18468:21;;;18464:25;;18453:36;18539:21;;;18535:25;;;18524:36;19003:15;;-1:-1:-1;;15079:3983:7;;;;;;:::o;1359:651:8:-;1421:14;;:19;1417:587;;1461:23;;;7882:21:10;;;7939:1;7919:18;;;7912:29;-1:-1:-1;;;7972:2:10;7957:18;;7950:37;8054:4;8039:20;;8032:36;;;1461:23:8;;-1:-1:-1;;;;;;;;;;;1461:23:8;;;;8019:3:10;1461:23:8;;;1498:22;1523:142;1555:13;1612:7;1637:14;;1523;:142::i;:::-;1498:167;;-1:-1:-1;;;;;;;;;;;1706:14:8;1684:37;;;;;8309:2:10;8291:21;;;8348:2;8328:18;;;8321:30;-1:-1:-1;;;8382:2:10;8367:18;;8360:44;8471:4;8456:20;;8449:36;;;;8436:3;8421:19;;8079:412;1684:37:8;;;;;;;;1752:48;;;;;;;;;;;;;;;;;;1784:15;1752:48;;;;;;1735:11;:66;;;;;;;-1:-1:-1;1735:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1820:35;;160:25:10;;;1752:48:8;;1820:35;;133:18:10;1820:35:8;;;;;;;1442:424;6621:88;:::o;1417:587::-;1903:35;;;;;;;;;;;-1:-1:-1;1903:35:8;;;;;;1922:15;1903:35;;;;;;1886:11;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1958:35;;1910:7;;1958:35;;;;160:25:10;;148:2;133:18;;14:177;1958:35:8;;;;;;;;1359:651;:::o;3271:1852::-;3414:14;3400:10;:28;;;;;;;;:::i;:::-;;3396:1721;;-1:-1:-1;;;;;3509:33:8;;3444:18;3509:33;;;:12;:33;;;;;:50;;;3465:108;;:26;:108::i;:::-;3444:129;;-1:-1:-1;;;;;;;;;;;3611:10:8;3592:30;;;;;8726:2:10;8708:21;;;8765:2;8745:18;;;8738:30;-1:-1:-1;;;8799:2:10;8784:18;;8777:41;8885:4;8870:20;;8863:36;;;;8850:3;8835:19;;8496:409;3592:30:8;;;;;;;;3636:18;3689:10;3672:1208;3705:11;:18;3701:22;;3672:1208;;;3748:41;3792:154;3855:19;3900:11;3912:1;3900:14;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;3792:37;:154::i;:::-;3748:198;;-1:-1:-1;;;;;;;;;;;4052:33:8;3969:134;;;;;9272:2:10;9254:21;;;9311:2;9291:18;;;9284:30;9350:34;9345:2;9330:18;;9323:62;-1:-1:-1;;;9416:3:10;9401:19;;9394:33;9494:4;9479:20;;9472:36;;;;9459:3;9444:19;;9042:472;3969:134:8;;;;;;;;-1:-1:-1;;;;;4160:71:8;;4121:36;4160:71;;;:12;:71;;;;;;;:82;:117;;4243:33;;4160:117;;;;;;:::i;:::-;;;;;;;;;;;:129;;;4121:168;;-1:-1:-1;;;;;;;;;;;4390:28:8;4312:124;;;;;9749:2:10;9731:21;;;9788:2;9768:18;;;9761:30;9827:31;9822:2;9807:18;;9800:59;9926:4;9911:20;;9904:36;;;;9891:3;9876:19;;9519:427;4312:124:8;;;;;;;;-1:-1:-1;;;;;;;;;;;4538:11:8;4550:1;4538:14;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;4459:126;;;;;10181:2:10;10163:21;;;10220:2;10200:18;;;10193:30;10259:32;10254:2;10239:18;;10232:60;10359:4;10344:20;;10337:36;;;;10324:3;10309:19;;9951:428;4459:126:8;;;;;;;;4617:195;4653:11;4665:1;4653:14;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;4704:28;4754:13;4617:14;:195::i;:::-;4603:209;;;;:::i;:::-;;;-1:-1:-1;;;;;;;;;;;4854:10:8;4835:30;;;;;10614:2:10;10596:21;;;10653:2;10633:18;;;10626:30;-1:-1:-1;;;10687:2:10;10672:18;;10665:41;10773:4;10758:20;;10751:36;;;;10738:3;10723:19;;10384:409;4835:30:8;;;;;;;;3730:1150;;3725:3;;;;;:::i;:::-;;;;3672:1208;;;-1:-1:-1;4898:36:8;;;11150:21:10;;;11207:2;11187:18;;;11180:30;-1:-1:-1;;;11241:2:10;11226:18;;11219:47;11333:4;11318:20;;11311:36;;;4898::8;;-1:-1:-1;;;;;;;;;;;4898:36:8;;;;11298:3:10;4898:36:8;;;-1:-1:-1;;;;;4948:33:8;;;;;;:12;:33;;;;;:45;;:59;;4997:10;;4948:33;:59;;4997:10;;4948:59;:::i;:::-;;;;-1:-1:-1;;;;;;;;5021:33:8;;;;;;:12;:33;;;;;5074:32;5021:50;;;;:85;-1:-1:-1;3271:1852:8;;:::o;2088:509::-;2229:11;:18;2194:7;;;;2229:51;;2279:1;2229:51;;;2254:11;:18;:22;;2275:1;;2254:22;:::i;:::-;2217:63;;2393:164;2428:14;2400:11;2412:1;2400:14;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;;:52;;;;-1:-1:-1;2446:6:8;;;2400:52;2393:164;;;-1:-1:-1;;2496:3:8;2393:164;;;2577:1;2573;:5;:17;;2589:1;2573:17;;;2581:5;:1;2585;2581:5;:::i;2671:541::-;-1:-1:-1;;;;;2837:33:8;;2806:7;2837:33;;;:12;:33;;;;;;;:44;:51;2806:7;;2837:141;;2977:1;2837:141;;;-1:-1:-1;;;;;2907:33:8;;;;;;:12;:33;;;;;;;;:44;:51;:55;;2961:1;;2907:55;:::i;:::-;2825:153;;2988:188;3068:5;3008:12;:33;3021:19;-1:-1:-1;;;;;3008:33:8;-1:-1:-1;;;;;3008:33:8;;;;;;;;;;;;:44;;3053:1;3008:47;;;;;;;;:::i;:::-;;;;;;;;;;;:57;;;:65;:87;;;;-1:-1:-1;3089:6:8;;;3008:87;2988:188;;;-1:-1:-1;;3148:3:8;2988:188;;;3196:1;3192;:5;:13;;3204:1;3192:13;;;3200:1;3192:13;3185:20;;;2671:541;;;;;:::o;196:286:10:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:10;;392:42;;382:70;;448:1;445;438:12;740:336;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;933:9;920:23;910:33;;993:2;982:9;978:18;965:32;1026:1;1019:5;1016:12;1006:40;;1042:1;1039;1032:12;1006:40;1065:5;1055:15;;;740:336;;;;;:::o;1304:180::-;1363:6;1416:2;1404:9;1395:7;1391:23;1387:32;1384:52;;;1432:1;1429;1422:12;1384:52;-1:-1:-1;1455:23:10;;1304:180;-1:-1:-1;1304:180:10:o;1489:784::-;1706:2;1758:21;;;1828:13;;1731:18;;;1850:22;;;1677:4;;1706:2;1891;;1909:18;;;;1950:15;;;1677:4;1993:254;2007:6;2004:1;2001:13;1993:254;;;2066:13;;2104:9;;2092:22;;2154:11;;2148:18;2134:12;;;2127:40;2187:12;;;;2222:15;;;;2029:1;2022:9;1993:254;;;-1:-1:-1;2264:3:10;;1489:784;-1:-1:-1;;;;;;;1489:784:10:o;2810:837::-;3025:2;3077:21;;;3147:13;;3050:18;;;3169:22;;;2996:4;;3025:2;3210;;3228:18;;;;3269:15;;;2996:4;3312:309;3326:6;3323:1;3320:13;3312:309;;;3385:13;;3423:9;;3411:22;;3473:11;;;3467:18;3453:12;;;3446:40;3526:11;;3520:18;3506:12;;;3499:40;3568:4;3559:14;;;;3596:15;;;;3348:1;3341:9;3312:309;;4001:184;4071:6;4124:2;4112:9;4103:7;4099:23;4095:32;4092:52;;;4140:1;4137;4130:12;4092:52;-1:-1:-1;4163:16:10;;4001:184;-1:-1:-1;4001:184:10:o;4923:277::-;4990:6;5043:2;5031:9;5022:7;5018:23;5014:32;5011:52;;;5059:1;5056;5049:12;5011:52;5091:9;5085:16;5144:5;5137:13;5130:21;5123:5;5120:32;5110:60;;5166:1;5163;5156:12;5205:127;5266:10;5261:3;5257:20;5254:1;5247:31;5297:4;5294:1;5287:15;5321:4;5318:1;5311:15;5337:127;5398:10;5393:3;5389:20;5386:1;5379:31;5429:4;5426:1;5419:15;5453:4;5450:1;5443:15;5469:128;5536:9;;;5557:11;;;5554:37;;;5571:18;;:::i;5602:125::-;5667:9;;;5688:10;;;5685:36;;;5701:18;;:::i;7538:127::-;7599:10;7594:3;7590:20;7587:1;7580:31;7630:4;7627:1;7620:15;7654:4;7651:1;7644:15;8910:127;8971:10;8966:3;8962:20;8959:1;8952:31;9002:4;8999:1;8992:15;9026:4;9023:1;9016:15;10798:135;10837:3;10858:17;;;10855:43;;10878:18;;:::i;:::-;-1:-1:-1;10925:1:10;10914:13;;10798:135::o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "PRBMath__MulDivOverflow(uint256,uint256)": [
        {
          "notice": "Emitted when the result overflows uint256."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    282,
    10530
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC9699F1 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC885BC58 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC885BC58 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDC72BB97 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF36C0A72 EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC9699F1 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xBD39E015 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xBD909870 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xC07CFCA9 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E2720FF GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1E2720FF EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x7BA6F458 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E3ABA9 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xB3C215E EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x10087FB1 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x1DBF3EB5 EQ PUSH2 0x17F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x2C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x166D JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x17D PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x166D JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x253 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1610 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x17D PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x166D JUMP JUMPDEST PUSH2 0xC1D JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1610 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST PUSH2 0x17D PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x311 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x43616E6E6F74207374616B65206E6F7468696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST DUP3 LT PUSH2 0x3E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204654472042616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x45A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x493 JUMPI PUSH2 0x493 PUSH2 0x175C JUMP JUMPDEST SUB PUSH2 0x5F6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD DUP2 SUB PUSH2 0x4C9 JUMPI PUSH2 0x4BE PUSH1 0x5 DUP5 PUSH1 0x64 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C9 DUP2 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D5 DUP3 DUP6 PUSH2 0x1788 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x4F9 SWAP1 DUP5 SWAP1 PUSH2 0x179B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x561 SWAP2 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x1D1BDD185B119511D4DD185AD959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE TIMESTAMP DUP2 DUP6 ADD DUP2 DUP2 MSTORE SWAP3 SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE SWAP5 SWAP1 SWAP7 KECCAK256 SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD SWAP3 DUP4 SSTORE MLOAD SWAP2 SWAP1 SWAP4 ADD SSTORE SWAP1 MLOAD PUSH32 0x55595F34FD936311E65ECA0A752EE70068B8992FDF64918AFF1B6345689C84E4 SWAP2 PUSH2 0x5EB SWAP2 DUP6 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x603 DUP2 PUSH2 0xEB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP5 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x72A JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6E4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x749 JUMPI PUSH2 0x749 PUSH2 0x175C JUMP JUMPDEST SUB PUSH2 0x5F6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x139BC8119511C81CDD185AD959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x932 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x7D5 SWAP1 DUP5 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP2 SSTORE DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP5 DUP3 MSTORE TIMESTAMP DUP3 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP7 MSTORE SWAP3 DUP6 KECCAK256 SWAP2 MLOAD PUSH1 0x2 SWAP4 DUP5 MUL SWAP1 SWAP3 ADD SWAP2 DUP3 SSTORE SWAP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x833 SWAP1 DUP4 PUSH1 0x64 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x83E DUP2 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xA9059CBB CALLER PUSH2 0x878 DUP5 DUP7 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E7 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH32 0xD6954C073268A41234627942B1C88CBF53C8BDC07009B12907400074E65D3E9B SWAP2 PUSH2 0x5EB SWAP2 TIMESTAMP SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x951 SWAP1 DUP5 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE TIMESTAMP DUP3 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP7 MSTORE SWAP3 DUP6 KECCAK256 SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9AF SWAP1 DUP5 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x9C4 PUSH1 0x2 DUP5 PUSH1 0x64 PUSH2 0xDE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF DUP2 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0xA9059CBB CALLER PUSH2 0xA09 DUP5 DUP8 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA78 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xD6954C073268A41234627942B1C88CBF53C8BDC07009B12907400074E65D3E9B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB5F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB0F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB73 CALLER PUSH1 0x0 PUSH2 0x1121 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP1 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH2 0xC28 CALLER PUSH1 0x0 PUSH2 0x1121 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC4A SWAP1 DUP5 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC6E SWAP1 DUP5 SWAP1 PUSH2 0x179B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 MSTORE TIMESTAMP DUP3 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP7 MSTORE SWAP3 SWAP1 SWAP5 KECCAK256 SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 MLOAD SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDE2 CALLER PUSH1 0x0 PUSH2 0x1121 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0xE1E JUMPI DUP4 DUP3 DUP2 PUSH2 0xE14 JUMPI PUSH2 0xE14 PUSH2 0x17AE JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0xEB0 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DCF3063 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x308 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP6 NOT PUSH1 0x1 SWAP1 DUP2 ADD DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 DUP3 DUP7 SUB DUP2 SWAP1 DIV SWAP6 SWAP1 SWAP3 GT SWAP1 SWAP4 SUB PUSH1 0x0 DUP3 SWAP1 SUB SWAP2 SWAP1 SWAP2 DIV SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x3 DUP5 MUL PUSH1 0x2 SWAP1 DUP2 XOR DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL SWAP1 SWAP2 SUB MUL MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x1040 JUMPI PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x7 DUP2 DUP4 ADD MSTORE PUSH7 0x17DC995DD85C99 PUSH1 0xCA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x0 PUSH2 0xF10 PUSH4 0x3B9ACA00 DUP4 PUSH1 0x1 SLOAD PUSH2 0xDE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0xF5A SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7265776172645065723142465447 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE SWAP5 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x3 SWAP1 SWAP7 MUL SWAP6 DUP7 ADD SSTORE SWAP2 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP6 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP1 DUP2 MSTORE DUP4 SWAP2 PUSH32 0xE5F54735F9CE2571EEFFC4CE867A47D7CD77AB6CA4D979F9FC33E445A39EBF3E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP5 MSTORE SWAP4 MLOAD PUSH1 0x3 SWAP1 SWAP4 MUL PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP4 ADD SSTORE SWAP2 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 SWAP1 SWAP2 ADD SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xE5F54735F9CE2571EEFFC4CE867A47D7CD77AB6CA4D979F9FC33E445A39EBF3E SWAP2 PUSH2 0x1116 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1135 PUSH2 0x175C JUMP JUMPDEST SUB PUSH2 0x5F6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x115F SWAP1 PUSH2 0x14BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x11A6 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x7374617274496E6465783D PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP2 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x141C JUMPI PUSH1 0x0 PUSH2 0x11EC DUP7 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11D5 JUMPI PUSH2 0x11D5 PUSH2 0x17C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x153A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x7374616B65686F6C6465725374616B65496E646578417452657761726454696D PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x653D PUSH1 0xF0 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1285 JUMPI PUSH2 0x1285 PUSH2 0x17C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x40 MLOAD PUSH2 0x12F0 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x7374616B65686F6C6465725374616B65417452657761726474696D653D000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x131A JUMPI PUSH2 0x131A PUSH2 0x17C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1373 SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x726577617264734C6973745B695D2E72657761726450657231424654473D0000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x13AE PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1391 JUMPI PUSH2 0x1391 PUSH2 0x17C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH4 0x3B9ACA00 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x13B8 SWAP1 DUP6 PUSH2 0x179B JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x13FF SWAP2 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x7265776172647353756D3D PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP DUP1 DUP1 PUSH2 0x1414 SWAP1 PUSH2 0x17DA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11B2 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x11 DUP2 DUP4 ADD MSTORE PUSH17 0x66696E616C207265776172647353756D3D PUSH1 0x78 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x17F4 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1490 SWAP1 DUP5 SWAP1 PUSH2 0x179B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x14CD JUMPI PUSH1 0x0 PUSH2 0x14DC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x14DC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14F3 JUMPI PUSH2 0x14F3 PUSH2 0x17C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x1512 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1520 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x152F JUMPI PUSH1 0x1 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0xEB0 DUP2 PUSH1 0x1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH2 0x1563 JUMPI PUSH1 0x0 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x158C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15C9 JUMPI PUSH2 0x15C9 PUSH2 0x17C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x15E7 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x158F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1604 JUMPI PUSH1 0x0 PUSH2 0x1606 JUMP JUMPDEST DUP1 JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x1662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x16A3 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x160A JUMPI PUSH2 0x160A PUSH2 0x1772 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x160A JUMPI PUSH2 0x160A PUSH2 0x1772 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x17EC JUMPI PUSH2 0x17EC PUSH2 0x1772 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xDD SWAP8 0xD 0xD9 0xB5 0xBF 0xE7 SMOD SWAP3 0x21 SSTORE 0xB0 PC LOG4 SMOD PUSH6 0x5CB18288B807 0xE2 0x21 PUSH5 0x42BCA8AD83 0xD6 0xB5 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH9 0xD79602287353E6A524 SELFDESTRUCT INVALID PUSH30 0xCAC829ED598F43F125D2A5685D704E9DAFC564736F6C6343000811003300 ",
  "pcMap": {
    "0": {
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xBC9699F1"
    },
    "38": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC885BC58"
    },
    "49": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "GT",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC885BC58"
    },
    "60": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x28F"
    },
    "64": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDC72BB97"
    },
    "71": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x297"
    },
    "75": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2AA"
    },
    "86": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF36C0A72"
    },
    "93": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BD"
    },
    "97": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "98": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "101": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "REVERT",
      "path": "8"
    },
    "102": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "104": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xBC9699F1"
    },
    "109": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x20A"
    },
    "113": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xBD39E015"
    },
    "120": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21D"
    },
    "124": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xBD909870"
    },
    "131": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24B"
    },
    "135": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "137": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xC07CFCA9"
    },
    "142": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "143": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x260"
    },
    "146": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "147": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "150": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "REVERT",
      "path": "8"
    },
    "151": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "152": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "153": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1E2720FF"
    },
    "158": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "GT",
      "path": "8"
    },
    "159": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "163": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "164": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1E2720FF"
    },
    "169": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "170": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BE"
    },
    "173": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "174": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "175": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "180": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "181": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D1"
    },
    "184": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "185": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "186": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x7BA6F458"
    },
    "191": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "192": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1D9"
    },
    "195": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "196": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "197": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "202": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "203": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F9"
    },
    "206": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "207": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "210": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "REVERT",
      "path": "8"
    },
    "211": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "212": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "213": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5E3ABA9"
    },
    "218": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "219": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "223": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "224": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xB3C215E"
    },
    "229": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "230": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x121"
    },
    "233": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "234": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "235": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x10087FB1"
    },
    "240": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "241": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16A"
    },
    "244": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "245": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "246": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x1DBF3EB5"
    },
    "251": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "EQ",
      "path": "8"
    },
    "252": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17F"
    },
    "255": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "256": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "257": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "DUP1",
      "path": "8"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        282,
        10530
      ],
      "op": "REVERT",
      "path": "8"
    },
    "261": {
      "offset": [
        741,
        770
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "262": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10E"
    },
    "265": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "267": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "268": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "DUP2",
      "path": "8"
    },
    "269": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "JUMP",
      "path": "8"
    },
    "270": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "271": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "273": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "274": {
      "op": "SWAP1"
    },
    "275": {
      "op": "DUP2"
    },
    "276": {
      "op": "MSTORE"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "279": {
      "op": "ADD"
    },
    "280": {
      "offset": [
        741,
        770
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "281": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "283": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "284": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "DUP1",
      "path": "8"
    },
    "285": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "286": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "SUB",
      "path": "8"
    },
    "287": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "288": {
      "fn": null,
      "offset": [
        741,
        770
      ],
      "op": "RETURN",
      "path": "8"
    },
    "289": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "290": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x155"
    },
    "293": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12F"
    },
    "296": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "297": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "299": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1610"
    },
    "302": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "jump": "i",
      "offset": [
        10244,
        10527
      ],
      "op": "JUMP",
      "path": "8"
    },
    "303": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "AND",
      "path": "8",
      "statement": 0
    },
    "313": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10348,
        10355
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "315": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "316": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "DUP2",
      "path": "8"
    },
    "317": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "318": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10413
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "320": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "322": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "323": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "325": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "326": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10434
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "327": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10446
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "329": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10446
      ],
      "op": "DUP2",
      "path": "8"
    },
    "330": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10446
      ],
      "op": "ADD",
      "path": "8"
    },
    "331": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10446
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "332": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10460,
        10510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "334": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10460,
        10510
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "335": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10460,
        10510
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "336": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10460,
        10510
      ],
      "op": "ADD",
      "path": "8"
    },
    "337": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10460,
        10510
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "338": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10446
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "339": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10401,
        10446
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "340": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "JUMP",
      "path": "8"
    },
    "341": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "342": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "344": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "DUP1",
      "path": "8"
    },
    "345": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "346": {
      "op": "SWAP3"
    },
    "347": {
      "op": "DUP4"
    },
    "348": {
      "op": "MSTORE"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "351": {
      "op": "DUP4"
    },
    "352": {
      "op": "ADD"
    },
    "353": {
      "op": "SWAP2"
    },
    "354": {
      "op": "SWAP1"
    },
    "355": {
      "op": "SWAP2"
    },
    "356": {
      "op": "MSTORE"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "fn": "FTGStaking.getAccountRewardInfo",
      "offset": [
        10244,
        10527
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x118"
    },
    "361": {
      "op": "JUMP"
    },
    "362": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "363": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "366": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x178"
    },
    "369": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "370": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "372": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1639"
    },
    "375": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMP",
      "path": "8"
    },
    "376": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "377": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2C5"
    },
    "380": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMP",
      "path": "8"
    },
    "381": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "382": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "STOP",
      "path": "8"
    },
    "383": {
      "offset": [
        319,
        351
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "384": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A6"
    },
    "387": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "420": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "DUP2",
      "path": "8"
    },
    "421": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "JUMP",
      "path": "8"
    },
    "422": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "423": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "425": {
      "fn": "FTGStaking.stake",
      "offset": [
        319,
        351
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "432": {
      "op": "SHL"
    },
    "433": {
      "op": "SUB"
    },
    "434": {
      "op": "SWAP1"
    },
    "435": {
      "op": "SWAP2"
    },
    "436": {
      "op": "AND"
    },
    "437": {
      "op": "DUP2"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "441": {
      "op": "ADD"
    },
    "442": {
      "offset": [
        319,
        351
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x118"
    },
    "445": {
      "op": "JUMP"
    },
    "446": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "447": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "450": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CC"
    },
    "453": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "454": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "456": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x166D"
    },
    "459": {
      "fn": "FTGStaking.depositReward",
      "jump": "i",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMP",
      "path": "8"
    },
    "460": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "461": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5FA"
    },
    "464": {
      "fn": "FTGStaking.depositReward",
      "jump": "i",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMP",
      "path": "8"
    },
    "465": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D"
    },
    "469": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x606"
    },
    "472": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "474": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1EC"
    },
    "477": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E7"
    },
    "480": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "481": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "483": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1610"
    },
    "486": {
      "fn": "FTGStaking.getStakes",
      "jump": "i",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMP",
      "path": "8"
    },
    "487": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "488": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6AA"
    },
    "491": {
      "fn": "FTGStaking.getStakes",
      "jump": "i",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMP",
      "path": "8"
    },
    "492": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "493": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "495": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "496": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x118"
    },
    "499": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "500": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "501": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1686"
    },
    "504": {
      "fn": "FTGStaking.getStakes",
      "jump": "i",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMP",
      "path": "8"
    },
    "505": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "508": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "515": {
      "op": "SHL"
    },
    "516": {
      "op": "SUB"
    },
    "517": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "518": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "522": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "523": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "526": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x218"
    },
    "529": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "530": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "532": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1639"
    },
    "535": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        6914,
        8811
      ],
      "op": "JUMP",
      "path": "8"
    },
    "536": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "537": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x735"
    },
    "540": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        6914,
        8811
      ],
      "op": "JUMP",
      "path": "8"
    },
    "541": {
      "offset": [
        838,
        865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "542": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x230"
    },
    "545": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x22B"
    },
    "548": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "549": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "551": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x166D"
    },
    "554": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        838,
        865
      ],
      "op": "JUMP",
      "path": "8"
    },
    "555": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "556": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAB8"
    },
    "559": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        838,
        865
      ],
      "op": "JUMP",
      "path": "8"
    },
    "560": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "561": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "563": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP1",
      "path": "8"
    },
    "564": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "565": {
      "op": "SWAP4"
    },
    "566": {
      "op": "DUP5"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "570": {
      "op": "DUP5"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "op": "SWAP3"
    },
    "573": {
      "op": "SWAP1"
    },
    "574": {
      "op": "SWAP3"
    },
    "575": {
      "op": "MSTORE"
    },
    "576": {
      "op": "SWAP1"
    },
    "577": {
      "op": "DUP3"
    },
    "578": {
      "op": "ADD"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "offset": [
        838,
        865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x118"
    },
    "586": {
      "op": "JUMP"
    },
    "587": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "588": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x253"
    },
    "591": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAEB"
    },
    "594": {
      "fn": "FTGStaking.viewRewardsList",
      "jump": "i",
      "offset": [
        9846,
        9946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "595": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "596": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "598": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "599": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x118"
    },
    "602": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "603": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "604": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x16D5"
    },
    "607": {
      "fn": "FTGStaking.viewRewardsList",
      "jump": "i",
      "offset": [
        9846,
        9946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "608": {
      "offset": [
        872,
        923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "609": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x230"
    },
    "612": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x26E"
    },
    "615": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "616": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "618": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1610"
    },
    "621": {
      "fn": "FTGStaking.viewRewardsList",
      "jump": "i",
      "offset": [
        872,
        923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "622": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "623": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "625": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "627": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "628": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "630": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "631": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "DUP2",
      "path": "8"
    },
    "632": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "633": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "635": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "636": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "637": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "DUP1",
      "path": "8"
    },
    "638": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "639": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "641": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "DUP3",
      "path": "8"
    },
    "642": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "ADD",
      "path": "8"
    },
    "643": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "644": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "646": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "647": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "648": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "ADD",
      "path": "8"
    },
    "649": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "650": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "651": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "652": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "653": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "DUP4",
      "path": "8"
    },
    "654": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        872,
        923
      ],
      "op": "JUMP",
      "path": "8"
    },
    "655": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8889,
        9265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "656": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8889,
        9265
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "659": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8889,
        9265
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB68"
    },
    "662": {
      "fn": "FTGStaking.withdrawReward",
      "jump": "i",
      "offset": [
        8889,
        9265
      ],
      "op": "JUMP",
      "path": "8"
    },
    "663": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "664": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "667": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A5"
    },
    "670": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "671": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "673": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x166D"
    },
    "676": {
      "fn": "FTGStaking.stakeReward",
      "jump": "i",
      "offset": [
        9340,
        9803
      ],
      "op": "JUMP",
      "path": "8"
    },
    "677": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "678": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC1D"
    },
    "681": {
      "fn": "FTGStaking.stakeReward",
      "jump": "i",
      "offset": [
        9340,
        9803
      ],
      "op": "JUMP",
      "path": "8"
    },
    "682": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D"
    },
    "686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1610"
    },
    "695": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCBD"
    },
    "700": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "701": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6755,
        6855
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "702": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6755,
        6855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17D"
    },
    "705": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6755,
        6855
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDD7"
    },
    "708": {
      "fn": "FTGStaking.updateReward",
      "jump": "i",
      "offset": [
        6755,
        6855
      ],
      "op": "JUMP",
      "path": "8"
    },
    "709": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "710": {
      "fn": "FTGStaking.stake",
      "offset": [
        5286,
        5287
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x0"
    },
    "712": {
      "fn": "FTGStaking.stake",
      "offset": [
        5276,
        5283
      ],
      "op": "DUP3",
      "path": "8"
    },
    "713": {
      "branch": 73,
      "fn": "FTGStaking.stake",
      "offset": [
        5276,
        5287
      ],
      "op": "GT",
      "path": "8"
    },
    "714": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x311"
    },
    "717": {
      "branch": 73,
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "718": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "720": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "DUP2",
      "path": "8"
    },
    "729": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "732": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "734": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "DUP3",
      "path": "8"
    },
    "735": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "ADD",
      "path": "8"
    },
    "736": {
      "op": "MSTORE"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH20",
      "value": "0x43616E6E6F74207374616B65206E6F7468696E67"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "770": {
      "op": "DUP3"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "775": {
      "op": "ADD"
    },
    "776": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "777": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "779": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "780": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "DUP1",
      "path": "8"
    },
    "781": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "782": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "SUB",
      "path": "8"
    },
    "783": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "784": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "785": {
      "fn": "FTGStaking.stake",
      "offset": [
        5268,
        5312
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "786": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 3,
      "value": "0x40"
    },
    "788": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "789": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP2",
      "path": "8"
    },
    "798": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "799": {
      "fn": "FTGStaking.stake",
      "offset": [
        5416,
        5426
      ],
      "op": "CALLER",
      "path": "8"
    },
    "800": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "802": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP3",
      "path": "8"
    },
    "803": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "ADD",
      "path": "8"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5405
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5415
      ],
      "op": "AND",
      "path": "8"
    },
    "847": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5415
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "848": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5415
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x70A08231"
    },
    "853": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5415
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "859": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "861": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "862": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP1",
      "path": "8"
    },
    "863": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP4",
      "path": "8"
    },
    "864": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "SUB",
      "path": "8"
    },
    "865": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP2",
      "path": "8"
    },
    "866": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP7",
      "path": "8"
    },
    "867": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "GAS",
      "path": "8"
    },
    "868": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "STATICCALL",
      "path": "8"
    },
    "869": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "870": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP1",
      "path": "8"
    },
    "871": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "872": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x375"
    },
    "875": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "876": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "877": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "879": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP1",
      "path": "8"
    },
    "880": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "881": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "882": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "884": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "REVERT",
      "path": "8"
    },
    "885": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "886": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "POP",
      "path": "8"
    },
    "887": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "POP",
      "path": "8"
    },
    "888": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "POP",
      "path": "8"
    },
    "889": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "POP",
      "path": "8"
    },
    "890": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "892": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "893": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "894": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "896": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "NOT",
      "path": "8"
    },
    "897": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "899": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP3",
      "path": "8"
    },
    "900": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "ADD",
      "path": "8"
    },
    "901": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "AND",
      "path": "8"
    },
    "902": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP3",
      "path": "8"
    },
    "903": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "ADD",
      "path": "8"
    },
    "904": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP1",
      "path": "8"
    },
    "905": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "907": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "908": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "POP",
      "path": "8"
    },
    "909": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "DUP2",
      "path": "8"
    },
    "910": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "ADD",
      "path": "8"
    },
    "911": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "912": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x399"
    },
    "915": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "916": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "917": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1721"
    },
    "920": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5397,
        5427
      ],
      "op": "JUMP",
      "path": "8"
    },
    "921": {
      "fn": "FTGStaking.stake",
      "offset": [
        5397,
        5427
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "922": {
      "fn": "FTGStaking.stake",
      "offset": [
        5387,
        5394
      ],
      "op": "DUP3",
      "path": "8"
    },
    "923": {
      "branch": 74,
      "fn": "FTGStaking.stake",
      "offset": [
        5387,
        5427
      ],
      "op": "LT",
      "path": "8"
    },
    "924": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3E7"
    },
    "927": {
      "branch": 74,
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "928": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "930": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "DUP2",
      "path": "8"
    },
    "939": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "944": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "DUP3",
      "path": "8"
    },
    "945": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "ADD",
      "path": "8"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E74204654472042616C616E63650000000000000000"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "989": {
      "op": "DUP3"
    },
    "990": {
      "op": "ADD"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x308"
    },
    "998": {
      "op": "JUMP"
    },
    "999": {
      "fn": "FTGStaking.stake",
      "offset": [
        5366,
        5477
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1000": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 4,
      "value": "0x40"
    },
    "1002": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1003": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1012": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1013": {
      "fn": "FTGStaking.stake",
      "offset": [
        5604,
        5614
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1014": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1016": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1017": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "ADD",
      "path": "8"
    },
    "1018": {
      "op": "MSTORE"
    },
    "1019": {
      "fn": "FTGStaking.stake",
      "offset": [
        5624,
        5628
      ],
      "op": "ADDRESS",
      "path": "8"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1022": {
      "op": "DUP3"
    },
    "1023": {
      "op": "ADD"
    },
    "1024": {
      "op": "MSTORE"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1027": {
      "op": "DUP2"
    },
    "1028": {
      "op": "ADD"
    },
    "1029": {
      "op": "DUP4"
    },
    "1030": {
      "op": "SWAP1"
    },
    "1031": {
      "op": "MSTORE"
    },
    "1032": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5590
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "op": "SUB"
    },
    "1073": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5603
      ],
      "op": "AND",
      "path": "8"
    },
    "1074": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1075": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5603
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "1080": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1086": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1088": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1089": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1090": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1091": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "SUB",
      "path": "8"
    },
    "1092": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1093": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1095": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP8",
      "path": "8"
    },
    "1096": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "GAS",
      "path": "8"
    },
    "1097": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "CALL",
      "path": "8"
    },
    "1098": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1099": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1100": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1101": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x45A"
    },
    "1104": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1105": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1106": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1108": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1109": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "1110": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1111": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1113": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1114": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1115": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "POP",
      "path": "8"
    },
    "1116": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "POP",
      "path": "8"
    },
    "1117": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "POP",
      "path": "8"
    },
    "1118": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "POP",
      "path": "8"
    },
    "1119": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1121": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1122": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "1123": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1125": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "NOT",
      "path": "8"
    },
    "1126": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "1128": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1129": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "ADD",
      "path": "8"
    },
    "1130": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "AND",
      "path": "8"
    },
    "1131": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1132": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "ADD",
      "path": "8"
    },
    "1133": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1134": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1136": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1137": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "POP",
      "path": "8"
    },
    "1138": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1139": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "ADD",
      "path": "8"
    },
    "1140": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1141": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x47E"
    },
    "1144": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1145": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1146": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173A"
    },
    "1149": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5582,
        5639
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1150": {
      "fn": "FTGStaking.stake",
      "offset": [
        5582,
        5639
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "fn": "FTGStaking.stake",
      "offset": [
        5668,
        5682
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1154": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5664
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1155": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1157": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1158": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "GT",
      "path": "8"
    },
    "1159": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1160": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x493"
    },
    "1163": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1164": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x493"
    },
    "1167": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x175C"
    },
    "1170": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5654,
        5682
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1171": {
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1172": {
      "branch": 75,
      "fn": "FTGStaking.stake",
      "offset": [
        5654,
        5682
      ],
      "op": "SUB",
      "path": "8"
    },
    "1173": {
      "fn": "FTGStaking.stake",
      "offset": [
        5650,
        6565
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F6"
    },
    "1176": {
      "branch": 75,
      "fn": "FTGStaking.stake",
      "offset": [
        5650,
        6565
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1177": {
      "fn": "FTGStaking.stake",
      "offset": [
        5771,
        5781
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1178": {
      "fn": "FTGStaking.stake",
      "offset": [
        5729,
        5740
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1180": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1181": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1182": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1183": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5770
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1185": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1187": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1188": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1189": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1190": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1192": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1193": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5782
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1194": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5793
      ],
      "op": "ADD",
      "path": "8"
    },
    "1195": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5800
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1196": {
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5805
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1197": {
      "branch": 76,
      "fn": "FTGStaking.stake",
      "offset": [
        5758,
        5805
      ],
      "op": "SUB",
      "path": "8"
    },
    "1198": {
      "fn": "FTGStaking.stake",
      "offset": [
        5754,
        5954
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4C9"
    },
    "1201": {
      "branch": 76,
      "fn": "FTGStaking.stake",
      "offset": [
        5754,
        5954
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1202": {
      "fn": "FTGStaking.stake",
      "offset": [
        5872,
        5903
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 5,
      "value": "0x4BE"
    },
    "1205": {
      "fn": "FTGStaking.stake",
      "offset": [
        5887,
        5888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x5"
    },
    "1207": {
      "fn": "FTGStaking.stake",
      "offset": [
        5890,
        5897
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1208": {
      "fn": "FTGStaking.stake",
      "offset": [
        5899,
        5902
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "1210": {
      "fn": "FTGStaking.stake",
      "offset": [
        5872,
        5886
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE4"
    },
    "1213": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5872,
        5903
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1214": {
      "fn": "FTGStaking.stake",
      "offset": [
        5872,
        5903
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1215": {
      "fn": "FTGStaking.stake",
      "offset": [
        5866,
        5903
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1216": {
      "fn": "FTGStaking.stake",
      "offset": [
        5866,
        5903
      ],
      "op": "POP",
      "path": "8"
    },
    "1217": {
      "fn": "FTGStaking.stake",
      "offset": [
        5921,
        5939
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 6,
      "value": "0x4C9"
    },
    "1220": {
      "fn": "FTGStaking.stake",
      "offset": [
        5935,
        5938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1221": {
      "fn": "FTGStaking.stake",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB7"
    },
    "1224": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5921,
        5939
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1225": {
      "fn": "FTGStaking.stake",
      "offset": [
        5921,
        5939
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1226": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        5987
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1228": {
      "fn": "FTGStaking.stake",
      "offset": [
        5990,
        6003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D5"
    },
    "1231": {
      "fn": "FTGStaking.stake",
      "offset": [
        6000,
        6003
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1232": {
      "fn": "FTGStaking.stake",
      "offset": [
        5990,
        5997
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1233": {
      "fn": "FTGStaking.stake",
      "offset": [
        5990,
        6003
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "1236": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        5990,
        6003
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1237": {
      "fn": "FTGStaking.stake",
      "offset": [
        5990,
        6003
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1238": {
      "fn": "FTGStaking.stake",
      "offset": [
        6093,
        6103
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 7
    },
    "1239": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1241": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1242": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1243": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1244": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6092
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1246": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1248": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1249": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1251": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1252": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1253": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1254": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1255": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        6003
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1256": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        6003
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        6003
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1259": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        6003
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1260": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1261": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1262": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6104
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1263": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4F9"
    },
    "1266": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1267": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        6003
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1268": {
      "fn": "FTGStaking.stake",
      "offset": [
        5967,
        6003
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1269": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "1272": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        6080,
        6132
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1273": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1274": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1275": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "POP",
      "path": "8"
    },
    "1276": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "POP",
      "path": "8"
    },
    "1277": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1278": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1279": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1280": {
      "fn": "FTGStaking.stake",
      "offset": [
        6080,
        6132
      ],
      "op": "POP",
      "path": "8"
    },
    "1281": {
      "fn": "FTGStaking.stake",
      "offset": [
        6164,
        6176
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 8
    },
    "1282": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6160
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1284": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6160
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1286": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1287": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1288": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1289": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x512"
    },
    "1292": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1293": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1294": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "1297": {
      "fn": "FTGStaking.stake",
      "jump": "i",
      "offset": [
        6146,
        6176
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1298": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1299": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1300": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1301": {
      "fn": "FTGStaking.stake",
      "offset": [
        6146,
        6176
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "fn": "FTGStaking.stake",
      "offset": [
        6217,
        6231
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 9,
      "value": "0x1"
    },
    "1306": {
      "fn": "FTGStaking.stake",
      "offset": [
        6217,
        6231
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1307": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1309": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "DUP1"
    },
    "1313": {
      "op": "MLOAD"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1316": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "1319": {
      "op": "DUP4"
    },
    "1320": {
      "op": "CODECOPY"
    },
    "1321": {
      "op": "DUP2"
    },
    "1322": {
      "op": "MLOAD"
    },
    "1323": {
      "op": "SWAP2"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1326": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x561"
    },
    "1329": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1332": {
      "op": "DUP1"
    },
    "1333": {
      "op": "DUP3"
    },
    "1334": {
      "op": "MSTORE"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "1337": {
      "op": "SWAP1"
    },
    "1338": {
      "op": "DUP3"
    },
    "1339": {
      "op": "ADD"
    },
    "1340": {
      "op": "MSTORE"
    },
    "1341": {
      "op": "PUSH14",
      "value": "0x1D1BDD185B119511D4DD185AD959"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1361": {
      "op": "DUP3"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "op": "SWAP2"
    },
    "1369": {
      "op": "SWAP1"
    },
    "1370": {
      "op": "SWAP2"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "op": "SWAP1"
    },
    "1376": {
      "op": "JUMP"
    },
    "1377": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1378": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1380": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1381": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1382": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1383": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "SUB",
      "path": "8"
    },
    "1384": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1385": {
      "fn": "FTGStaking.stake",
      "offset": [
        6195,
        6232
      ],
      "op": "LOG1",
      "path": "8"
    },
    "1386": {
      "fn": "FTGStaking.stake",
      "offset": [
        6325,
        6335
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 10
    },
    "1387": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1389": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1390": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1391": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1392": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6324
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1394": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1396": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1397": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1398": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1399": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1401": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1402": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1403": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6336
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1404": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1405": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1406": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1407": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1408": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "ADD",
      "path": "8"
    },
    "1409": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1410": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1411": {
      "fn": "FTGStaking.stake",
      "offset": [
        6378,
        6414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1412": {
      "fn": "FTGStaking.stake",
      "offset": [
        6378,
        6414
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1413": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1414": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1415": {
      "fn": "FTGStaking.stake",
      "offset": [
        6416,
        6431
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "1416": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1417": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1418": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "ADD",
      "path": "8"
    },
    "1419": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1420": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1421": {
      "fn": "FTGStaking.stake",
      "offset": [
        6370,
        6432
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1422": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6347
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1423": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6347
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1424": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6347
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "1425": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6347
      ],
      "op": "ADD",
      "path": "8"
    },
    "1426": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1427": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1428": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1430": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1431": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1432": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "ADD",
      "path": "8"
    },
    "1433": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1434": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1435": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1436": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "DUP9",
      "path": "8"
    },
    "1437": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1438": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1439": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1440": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "1441": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1442": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1443": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1444": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1446": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1447": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1448": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "MUL",
      "path": "8"
    },
    "1449": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "ADD",
      "path": "8"
    },
    "1450": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1451": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1452": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1453": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1454": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1455": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1456": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "1457": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "ADD",
      "path": "8"
    },
    "1458": {
      "fn": "FTGStaking.stake",
      "offset": [
        6312,
        6446
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1459": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 11
    },
    "1460": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1461": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x55595F34FD936311E65ECA0A752EE70068B8992FDF64918AFF1B6345689C84E4"
    },
    "1494": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1495": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5EB"
    },
    "1498": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1499": {
      "fn": "FTGStaking.stake",
      "offset": [
        6524,
        6536
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1500": {
      "fn": "FTGStaking.stake",
      "offset": [
        6524,
        6536
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1501": {
      "fn": "FTGStaking.stake",
      "offset": [
        6416,
        6431
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1502": {
      "op": "SWAP2"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "MSTORE"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "MSTORE"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "op": "SWAP1"
    },
    "1514": {
      "op": "JUMP"
    },
    "1515": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1516": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1518": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1519": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1520": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1521": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "SUB",
      "path": "8"
    },
    "1522": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1523": {
      "fn": "FTGStaking.stake",
      "offset": [
        6503,
        6554
      ],
      "op": "LOG2",
      "path": "8"
    },
    "1524": {
      "fn": "FTGStaking.stake",
      "offset": [
        5684,
        6565
      ],
      "op": "POP",
      "path": "8"
    },
    "1525": {
      "fn": "FTGStaking.stake",
      "offset": [
        5684,
        6565
      ],
      "op": "POP",
      "path": "8"
    },
    "1526": {
      "fn": "FTGStaking.stake",
      "offset": [
        5650,
        6565
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1527": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "POP",
      "path": "8"
    },
    "1528": {
      "fn": "FTGStaking.stake",
      "offset": [
        5153,
        6582
      ],
      "op": "POP",
      "path": "8"
    },
    "1529": {
      "fn": "FTGStaking.stake",
      "jump": "o",
      "offset": [
        5153,
        6582
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1530": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1531": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6680,
        6702
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 12,
      "value": "0x603"
    },
    "1534": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6694,
        6701
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1535": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6680,
        6693
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB7"
    },
    "1538": {
      "fn": "FTGStaking.depositReward",
      "jump": "i",
      "offset": [
        6680,
        6702
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1539": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6680,
        6702
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1540": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "POP",
      "path": "8"
    },
    "1541": {
      "fn": "FTGStaking.depositReward",
      "jump": "o",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1543": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1545": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1552": {
      "op": "SHL"
    },
    "1553": {
      "op": "SUB"
    },
    "1554": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1555": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 13
    },
    "1556": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1557": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x660"
    },
    "1560": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1561": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1563": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1572": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1575": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1577": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1578": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1579": {
      "op": "DUP2"
    },
    "1580": {
      "op": "SWAP1"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1622": {
      "op": "DUP3"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "1631": {
      "op": "JUMP"
    },
    "1632": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "1635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1636": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1637": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1649": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1650": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "AND",
      "path": "0"
    },
    "1651": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1837
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x0"
    },
    "1691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "op": "NOT"
    },
    "1702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "AND",
      "path": "0"
    },
    "1703": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1705": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1706": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "op": "SUB"
    },
    "1715": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 16
    },
    "1716": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "AND",
      "path": "8"
    },
    "1717": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1719": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1720": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1721": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1722": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10146
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1724": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1726": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1727": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1728": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1729": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1731": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1732": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1733": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1734": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1735": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10178
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1736": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1737": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1738": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1739": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1740": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1741": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1742": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1743": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MUL",
      "path": "8"
    },
    "1744": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1745": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1746": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1747": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1748": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1749": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1750": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1751": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1752": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1753": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1754": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10095,
        10111
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "1756": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10095,
        10111
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "1757": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1758": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10178
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1759": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1760": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1761": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10134,
        10167
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1762": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP5",
      "path": "8"
    },
    "1763": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1764": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1765": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1766": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1767": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "LT",
      "path": "8"
    },
    "1768": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1769": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x72A"
    },
    "1772": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1773": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1774": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1775": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1776": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1778": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1779": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1781": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1783": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1784": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1785": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "1787": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MUL",
      "path": "8"
    },
    "1788": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1789": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1791": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1792": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1793": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1795": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1796": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1798": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1799": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1800": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1801": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1803": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1804": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1805": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1806": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1807": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1808": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1810": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1811": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1813": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1814": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1815": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1816": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1817": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1818": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1819": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1820": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1821": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1822": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1824": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1825": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1826": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1828": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "ADD",
      "path": "8"
    },
    "1829": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1830": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6E4"
    },
    "1833": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1834": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1835": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1836": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1837": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1838": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1839": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1840": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10127,
        10178
      ],
      "op": "POP",
      "path": "8"
    },
    "1841": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1842": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1843": {
      "fn": "FTGStaking.getStakes",
      "offset": [
        10002,
        10185
      ],
      "op": "POP",
      "path": "8"
    },
    "1844": {
      "fn": "FTGStaking.getStakes",
      "jump": "o",
      "offset": [
        10002,
        10185
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1845": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1846": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7005,
        7019
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1848": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7001
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1849": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1851": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1852": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "GT",
      "path": "8"
    },
    "1853": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1854": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x749"
    },
    "1857": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1858": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x749"
    },
    "1861": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x175C"
    },
    "1864": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        6991,
        7019
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1865": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1866": {
      "branch": 77,
      "fn": "FTGStaking.unstake",
      "offset": [
        6991,
        7019
      ],
      "op": "SUB",
      "path": "8"
    },
    "1867": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6987,
        8805
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F6"
    },
    "1870": {
      "branch": 77,
      "fn": "FTGStaking.unstake",
      "offset": [
        6987,
        8805
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1871": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7106,
        7116
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 17
    },
    "1872": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1874": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1875": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1876": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1877": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7105
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1879": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1881": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1882": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1884": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1885": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7117
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1886": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7129
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1887": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7134
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1888": {
      "branch": 78,
      "fn": "FTGStaking.unstake",
      "offset": [
        7093,
        7134
      ],
      "op": "SUB",
      "path": "8"
    },
    "1889": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x79C"
    },
    "1892": {
      "branch": 78,
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1893": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1895": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1902": {
      "op": "SHL"
    },
    "1903": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1904": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1907": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1909": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1910": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "ADD",
      "path": "8"
    },
    "1911": {
      "op": "MSTORE"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1916": {
      "op": "DUP3"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "MSTORE"
    },
    "1919": {
      "op": "PUSH13",
      "value": "0x139BC8119511C81CDD185AD959"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1938": {
      "op": "DUP3"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "MSTORE"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1943": {
      "op": "ADD"
    },
    "1944": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x308"
    },
    "1947": {
      "op": "JUMP"
    },
    "1948": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7085,
        7152
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1949": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7263,
        7273
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1950": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1952": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1953": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1954": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1955": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7262
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1957": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1959": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1960": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1962": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1963": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7274
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1964": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7250,
        7286
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1965": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7239,
        7286
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1966": {
      "branch": 79,
      "fn": "FTGStaking.unstake",
      "offset": [
        7239,
        7286
      ],
      "op": "LT",
      "path": "8"
    },
    "1967": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7235,
        8795
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x932"
    },
    "1970": {
      "branch": 79,
      "fn": "FTGStaking.unstake",
      "offset": [
        7235,
        8795
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1971": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7422,
        7432
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1972": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7383,
        7406
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1974": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1975": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1976": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1977": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7421
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "1979": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1981": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1982": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1984": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1985": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7433
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1986": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1987": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7477
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 18,
      "value": "0x1"
    },
    "1989": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1990": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1991": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1992": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1993": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1994": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1995": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7D5"
    },
    "1998": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1999": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2000": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7409,
        7445
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2001": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "2004": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        7463,
        7496
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2005": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2006": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2007": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2008": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7463,
        7496
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2009": {
      "op": "POP"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7527,
        7537
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 19
    },
    "2012": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7553,
        7554
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2014": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2015": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2016": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2017": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7526
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2019": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2021": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2022": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2023": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2024": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2026": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2027": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2028": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7538
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2029": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7554
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2030": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7554
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2031": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7514,
        7554
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2032": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 20
    },
    "2033": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2034": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2035": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2036": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "ADD",
      "path": "8"
    },
    "2037": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2038": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2039": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2040": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2041": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2042": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2043": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7645,
        7660
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "2044": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2045": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2046": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "ADD",
      "path": "8"
    },
    "2047": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2048": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2049": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7634,
        7661
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2050": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7607
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2051": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7607
      ],
      "op": "ADD",
      "path": "8"
    },
    "2052": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2053": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2054": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2056": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2057": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2058": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "ADD",
      "path": "8"
    },
    "2059": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2060": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2061": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2062": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2063": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2064": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2065": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2066": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2067": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2068": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2069": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2071": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2072": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2073": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "MUL",
      "path": "8"
    },
    "2074": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2075": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2076": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "ADD",
      "path": "8"
    },
    "2077": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2078": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2079": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2080": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2081": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2082": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2083": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "ADD",
      "path": "8"
    },
    "2084": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2085": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2086": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2087": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7572,
        7679
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2088": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7750,
        7789
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x833"
    },
    "2091": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7750,
        7789
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2092": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7768,
        7783
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2093": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7785,
        7788
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "2095": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7750,
        7764
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE4"
    },
    "2098": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        7750,
        7789
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2099": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7750,
        7789
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2100": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7736,
        7789
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2101": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7736,
        7789
      ],
      "op": "POP",
      "path": "8"
    },
    "2102": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7807,
        7825
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 21,
      "value": "0x83E"
    },
    "2105": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7821,
        7824
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2106": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7807,
        7820
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB7"
    },
    "2109": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        7807,
        7825
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2110": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7807,
        7825
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2117": {
      "op": "SHL"
    },
    "2118": {
      "op": "SUB"
    },
    "2119": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7851
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 22,
      "value": "0x0"
    },
    "2152": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7860
      ],
      "op": "AND",
      "path": "8"
    },
    "2153": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7860
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "2158": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7861,
        7871
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2159": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7873,
        7894
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x878"
    },
    "2162": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7891,
        7894
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2163": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7873,
        7888
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2164": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7873,
        7894
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "2167": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        7873,
        7894
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2168": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7873,
        7894
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2169": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2171": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "SUB"
    },
    "2180": {
      "op": "NOT"
    },
    "2181": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "2183": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2184": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2185": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "SHL",
      "path": "8"
    },
    "2186": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "AND",
      "path": "8"
    },
    "2187": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2188": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "op": "SUB"
    },
    "2197": {
      "op": "SWAP1"
    },
    "2198": {
      "op": "SWAP3"
    },
    "2199": {
      "op": "AND"
    },
    "2200": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2202": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2203": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "ADD",
      "path": "8"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2207": {
      "op": "DUP3"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2212": {
      "op": "ADD"
    },
    "2213": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2215": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2217": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2218": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2219": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2220": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "SUB",
      "path": "8"
    },
    "2221": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2222": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2224": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2225": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "GAS",
      "path": "8"
    },
    "2226": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "CALL",
      "path": "8"
    },
    "2227": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2228": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2229": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2230": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8C3"
    },
    "2233": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2234": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2235": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2237": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2238": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2239": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2240": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2242": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2243": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2244": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "POP",
      "path": "8"
    },
    "2245": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "POP",
      "path": "8"
    },
    "2246": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "POP",
      "path": "8"
    },
    "2247": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "POP",
      "path": "8"
    },
    "2248": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2250": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2251": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2252": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2254": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "NOT",
      "path": "8"
    },
    "2255": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2257": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2258": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "ADD",
      "path": "8"
    },
    "2259": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "AND",
      "path": "8"
    },
    "2260": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2261": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "ADD",
      "path": "8"
    },
    "2262": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2263": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2265": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2266": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "POP",
      "path": "8"
    },
    "2267": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2268": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "ADD",
      "path": "8"
    },
    "2269": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2270": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8E7"
    },
    "2273": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2274": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2275": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173A"
    },
    "2278": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        7843,
        7895
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2279": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7843,
        7895
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2280": {
      "op": "POP"
    },
    "2281": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7950,
        7960
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 23
    },
    "2282": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2284": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2285": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2286": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2287": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        7994
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2289": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2291": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2292": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2294": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2295": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2296": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2297": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8006
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2298": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7982,
        8018
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2299": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7918,
        8073
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2300": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7918,
        8073
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2301": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7918,
        8073
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xD6954C073268A41234627942B1C88CBF53C8BDC07009B12907400074E65D3E9B"
    },
    "2334": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7918,
        8073
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2335": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7918,
        8073
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5EB"
    },
    "2338": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7918,
        8073
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2339": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8040,
        8055
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "2340": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8040,
        8055
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2341": {
      "op": "SWAP2"
    },
    "2342": {
      "op": "DUP3"
    },
    "2343": {
      "op": "MSTORE"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2346": {
      "op": "DUP3"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "MSTORE"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "op": "SWAP1"
    },
    "2353": {
      "op": "JUMP"
    },
    "2354": {
      "fn": "FTGStaking.unstake",
      "offset": [
        7235,
        8795
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2355": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8202,
        8212
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 24
    },
    "2356": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2358": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2359": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2360": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2361": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8201
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2363": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2365": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2366": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2368": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2369": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2370": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2371": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2372": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8229,
        8236
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2373": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8229,
        8236
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2374": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8213
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2375": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x951"
    },
    "2378": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2379": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8229,
        8236
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2380": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8229,
        8236
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2381": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "2384": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        8189,
        8236
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2385": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2386": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2387": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2388": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8189,
        8236
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "op": "POP"
    },
    "2391": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8267,
        8277
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 25
    },
    "2392": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2394": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2395": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2396": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2397": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8266
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2399": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2401": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2402": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2403": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2404": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2406": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2407": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2408": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2409": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2410": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2411": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2412": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2413": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "ADD",
      "path": "8"
    },
    "2414": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2415": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2416": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2417": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8349,
        8385
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2418": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8349,
        8385
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2419": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2420": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2421": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8411,
        8426
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "2422": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2423": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2424": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "ADD",
      "path": "8"
    },
    "2425": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2426": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2427": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8316,
        8448
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2428": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8289
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2429": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8289
      ],
      "op": "ADD",
      "path": "8"
    },
    "2430": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2431": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2432": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2434": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2435": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2436": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "ADD",
      "path": "8"
    },
    "2437": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2438": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2439": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2440": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP7",
      "path": "8"
    },
    "2441": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2442": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2443": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2444": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2445": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2446": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2447": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2449": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2450": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2451": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "MUL",
      "path": "8"
    },
    "2452": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2453": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2454": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "ADD",
      "path": "8"
    },
    "2455": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2456": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2457": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2458": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2459": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2460": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2461": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2462": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "ADD",
      "path": "8"
    },
    "2463": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8466
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2464": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 26
    },
    "2465": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2466": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8502,
        8509
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2467": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8502,
        8509
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2468": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8254,
        8278
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2469": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9AF"
    },
    "2472": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2473": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8502,
        8509
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2474": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8502,
        8509
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2475": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "2478": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        8484,
        8509
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2479": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2480": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2481": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2482": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8484,
        8509
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2483": {
      "op": "POP"
    },
    "2484": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8566,
        8577
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2486": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8566,
        8577
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8580,
        8611
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9C4"
    },
    "2491": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8595,
        8596
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2493": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8598,
        8605
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2494": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8607,
        8610
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "2496": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8580,
        8594
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE4"
    },
    "2499": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        8580,
        8611
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2500": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8580,
        8611
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2501": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8566,
        8611
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2502": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8566,
        8611
      ],
      "op": "POP",
      "path": "8"
    },
    "2503": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8629,
        8647
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 27,
      "value": "0x9CF"
    },
    "2506": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8643,
        8646
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2507": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8629,
        8642
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB7"
    },
    "2510": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        8629,
        8647
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2511": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8629,
        8647
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2518": {
      "op": "SHL"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8673
      ],
      "op": "PUSH32",
      "path": "8",
      "statement": 28,
      "value": "0x0"
    },
    "2553": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8682
      ],
      "op": "AND",
      "path": "8"
    },
    "2554": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8682
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "2559": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8683,
        8693
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2560": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8695,
        8708
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA09"
    },
    "2563": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8705,
        8708
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2564": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8695,
        8702
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2565": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8695,
        8708
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "2568": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        8695,
        8708
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2569": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8695,
        8708
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2570": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2572": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "op": "SUB"
    },
    "2581": {
      "op": "NOT"
    },
    "2582": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "2584": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2585": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2586": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "SHL",
      "path": "8"
    },
    "2587": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "AND",
      "path": "8"
    },
    "2588": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2589": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2596": {
      "op": "SHL"
    },
    "2597": {
      "op": "SUB"
    },
    "2598": {
      "op": "SWAP1"
    },
    "2599": {
      "op": "SWAP3"
    },
    "2600": {
      "op": "AND"
    },
    "2601": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2603": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2604": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "ADD",
      "path": "8"
    },
    "2605": {
      "op": "MSTORE"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "ADD"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2613": {
      "op": "ADD"
    },
    "2614": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2616": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2618": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2619": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2620": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2621": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "SUB",
      "path": "8"
    },
    "2622": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2623": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2625": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP8",
      "path": "8"
    },
    "2626": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "GAS",
      "path": "8"
    },
    "2627": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "CALL",
      "path": "8"
    },
    "2628": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2629": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2630": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2631": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA54"
    },
    "2634": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2635": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2636": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2638": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2639": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "2640": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2641": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2643": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2644": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2645": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "POP",
      "path": "8"
    },
    "2646": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "POP",
      "path": "8"
    },
    "2647": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "POP",
      "path": "8"
    },
    "2648": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "POP",
      "path": "8"
    },
    "2649": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2651": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2652": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "2653": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2655": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "NOT",
      "path": "8"
    },
    "2656": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "2658": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2659": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "ADD",
      "path": "8"
    },
    "2660": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "AND",
      "path": "8"
    },
    "2661": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2662": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "ADD",
      "path": "8"
    },
    "2663": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2664": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2666": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2667": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "POP",
      "path": "8"
    },
    "2668": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2669": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "ADD",
      "path": "8"
    },
    "2670": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2671": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA78"
    },
    "2674": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2675": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2676": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173A"
    },
    "2679": {
      "fn": "FTGStaking.unstake",
      "jump": "i",
      "offset": [
        8665,
        8709
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2680": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8665,
        8709
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 29,
      "value": "0x40"
    },
    "2684": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2685": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2686": {
      "op": "DUP5"
    },
    "2687": {
      "op": "DUP2"
    },
    "2688": {
      "op": "MSTORE"
    },
    "2689": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8764,
        8779
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2692": {
      "op": "DUP3"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8743,
        8753
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2696": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8743,
        8753
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2697": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xD6954C073268A41234627942B1C88CBF53C8BDC07009B12907400074E65D3E9B"
    },
    "2730": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2731": {
      "op": "ADD"
    },
    "2732": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2734": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2735": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2736": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2737": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "SUB",
      "path": "8"
    },
    "2738": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2739": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8732,
        8780
      ],
      "op": "LOG2",
      "path": "8"
    },
    "2740": {
      "fn": "FTGStaking.unstake",
      "offset": [
        8094,
        8795
      ],
      "op": "POP",
      "path": "8"
    },
    "2741": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "POP",
      "path": "8"
    },
    "2742": {
      "fn": "FTGStaking.unstake",
      "offset": [
        6914,
        8811
      ],
      "op": "POP",
      "path": "8"
    },
    "2743": {
      "fn": "FTGStaking.unstake",
      "jump": "o",
      "offset": [
        6914,
        8811
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2744": {
      "offset": [
        838,
        865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2745": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2747": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2748": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2749": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2750": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2751": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "LT",
      "path": "8"
    },
    "2752": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAC8"
    },
    "2755": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2756": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2758": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2759": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2760": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2761": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2763": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2764": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2765": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2766": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2768": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2769": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2770": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2771": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2773": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2774": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2775": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "MUL",
      "path": "8"
    },
    "2776": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "ADD",
      "path": "8"
    },
    "2777": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2778": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2779": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2781": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2782": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "ADD",
      "path": "8"
    },
    "2783": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2784": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2786": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2787": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2788": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "ADD",
      "path": "8"
    },
    "2789": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2790": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2791": {
      "fn": "FTGStaking.unstake",
      "offset": [
        838,
        865
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "offset": [
        838,
        865
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2794": {
      "fn": "FTGStaking.unstake",
      "jump": "o",
      "offset": [
        838,
        865
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2795": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2796": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9894,
        9909
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "2798": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9928,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 30,
      "value": "0x2"
    },
    "2800": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2801": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2802": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2803": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2805": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MUL",
      "path": "8"
    },
    "2806": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2808": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2809": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2811": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2812": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2813": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2814": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2815": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2817": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2818": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2819": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2820": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2821": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2822": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2823": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2824": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2825": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2827": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2828": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2830": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2831": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2832": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2833": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2834": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "LT",
      "path": "8"
    },
    "2835": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2836": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB5F"
    },
    "2839": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2840": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2841": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2842": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2843": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2845": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2846": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2848": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2850": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2851": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2852": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2854": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MUL",
      "path": "8"
    },
    "2855": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2856": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2858": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2859": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2860": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "2862": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2863": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2865": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2866": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2867": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2868": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2870": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2871": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2872": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2873": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2874": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2875": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2877": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2878": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2880": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2881": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2882": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2883": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2884": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2885": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2887": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2888": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "2890": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2891": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2892": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2893": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2894": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2895": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2896": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2897": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2898": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2899": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2901": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2902": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2903": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2905": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "ADD",
      "path": "8"
    },
    "2906": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2907": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB0F"
    },
    "2910": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2911": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2912": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2913": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2914": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2915": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2916": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2917": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9921,
        9939
      ],
      "op": "POP",
      "path": "8"
    },
    "2918": {
      "fn": "FTGStaking.viewRewardsList",
      "offset": [
        9846,
        9946
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2919": {
      "fn": "FTGStaking.viewRewardsList",
      "jump": "o",
      "offset": [
        9846,
        9946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2920": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8889,
        9265
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2921": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8973,
        9025
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 31,
      "value": "0xB73"
    },
    "2924": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8998,
        9008
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2925": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9010,
        9024
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2927": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8973,
        8997
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1121"
    },
    "2930": {
      "fn": "FTGStaking.withdrawReward",
      "jump": "i",
      "offset": [
        8973,
        9025
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2931": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        8973,
        9025
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2932": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9128,
        9138
      ],
      "op": "CALLER",
      "path": "8"
    },
    "2933": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9088,
        9112
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2935": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2936": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2937": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2938": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9127
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "2940": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2942": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2943": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2945": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2946": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2947": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9139
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "2948": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9151
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2950": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9151
      ],
      "op": "ADD",
      "path": "8"
    },
    "2951": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9151
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2952": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9151
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2953": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9161,
        9201
      ],
      "op": "SWAP3",
      "path": "8",
      "statement": 32
    },
    "2954": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9161,
        9201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2955": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9161,
        9201
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2956": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "MLOAD",
      "path": "8",
      "statement": 33
    },
    "2957": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2964": {
      "op": "SHL"
    },
    "2965": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2966": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2967": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2969": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2970": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "ADD",
      "path": "8"
    },
    "2971": {
      "op": "SWAP3"
    },
    "2972": {
      "op": "SWAP1"
    },
    "2973": {
      "op": "SWAP3"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2977": {
      "op": "DUP3"
    },
    "2978": {
      "op": "ADD"
    },
    "2979": {
      "op": "DUP2"
    },
    "2980": {
      "op": "SWAP1"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9115,
        9151
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2989": {
      "op": "SHL"
    },
    "2990": {
      "op": "SUB"
    },
    "2991": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9219
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x0"
    },
    "3024": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9228
      ],
      "op": "AND",
      "path": "8"
    },
    "3025": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9228
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3026": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9228
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xA9059CBB"
    },
    "3031": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9228
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3037": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3039": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3040": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3041": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3042": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "SUB",
      "path": "8"
    },
    "3043": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3044": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3046": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3047": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "GAS",
      "path": "8"
    },
    "3048": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "CALL",
      "path": "8"
    },
    "3049": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3050": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3051": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3052": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBF9"
    },
    "3055": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3056": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3057": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3059": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3060": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "3061": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3062": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3064": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3065": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3066": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "POP",
      "path": "8"
    },
    "3067": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "POP",
      "path": "8"
    },
    "3068": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "POP",
      "path": "8"
    },
    "3069": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "POP",
      "path": "8"
    },
    "3070": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3072": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3073": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "3074": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3076": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "NOT",
      "path": "8"
    },
    "3077": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3079": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3080": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "ADD",
      "path": "8"
    },
    "3081": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "AND",
      "path": "8"
    },
    "3082": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3083": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "ADD",
      "path": "8"
    },
    "3084": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3085": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3087": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3088": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "POP",
      "path": "8"
    },
    "3089": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3090": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "ADD",
      "path": "8"
    },
    "3091": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3092": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F6"
    },
    "3095": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3096": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3097": {
      "fn": "FTGStaking.withdrawReward",
      "offset": [
        9211,
        9258
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x173A"
    },
    "3100": {
      "fn": "FTGStaking.withdrawReward",
      "jump": "i",
      "offset": [
        9211,
        9258
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3101": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9340,
        9803
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3102": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9436,
        9488
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 34,
      "value": "0xC28"
    },
    "3105": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9461,
        9471
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3106": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9473,
        9487
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3108": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9436,
        9460
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1121"
    },
    "3111": {
      "fn": "FTGStaking.stakeReward",
      "jump": "i",
      "offset": [
        9436,
        9488
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3112": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9436,
        9488
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3113": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9569,
        9579
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 35
    },
    "3114": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3116": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3117": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3118": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3119": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9568
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3121": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3123": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3124": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3126": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3127": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3128": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9592
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3130": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9592
      ],
      "op": "ADD",
      "path": "8"
    },
    "3131": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3132": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3133": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9596,
        9603
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3134": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9596,
        9603
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3135": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9580
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3136": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC4A"
    },
    "3139": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3140": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9596,
        9603
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3141": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9596,
        9603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3142": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "3145": {
      "fn": "FTGStaking.stakeReward",
      "jump": "i",
      "offset": [
        9556,
        9603
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3146": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3147": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3148": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3149": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9556,
        9603
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3150": {
      "op": "POP"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9626,
        9636
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 36
    },
    "3153": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3155": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3156": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3157": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3158": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9625
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3160": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3162": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3163": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3165": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3166": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3167": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3168": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3169": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9653,
        9660
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3170": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3171": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9637
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3172": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC6E"
    },
    "3175": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3176": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9653,
        9660
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3177": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3178": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "3181": {
      "fn": "FTGStaking.stakeReward",
      "jump": "i",
      "offset": [
        9613,
        9660
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3182": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3183": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3184": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3185": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9613,
        9660
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3186": {
      "op": "POP"
    },
    "3187": {
      "op": "POP"
    },
    "3188": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9683,
        9693
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 37
    },
    "3189": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3191": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3192": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3193": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3194": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9682
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "3196": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3198": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3199": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3200": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3201": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3203": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3204": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3205": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9694
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3206": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3207": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3208": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3209": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3210": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "ADD",
      "path": "8"
    },
    "3211": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3212": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3213": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3214": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9732,
        9768
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3215": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9732,
        9768
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3216": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3217": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3218": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9770,
        9785
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "3219": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3220": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3221": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "ADD",
      "path": "8"
    },
    "3222": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3223": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3224": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9724,
        9786
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3225": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9705
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3226": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9705
      ],
      "op": "ADD",
      "path": "8"
    },
    "3227": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3228": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3229": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3231": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3232": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3233": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "ADD",
      "path": "8"
    },
    "3234": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3235": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3236": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3237": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3238": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3239": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3240": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3241": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3242": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "3243": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3244": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3245": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3247": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3248": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3249": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "MUL",
      "path": "8"
    },
    "3250": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "ADD",
      "path": "8"
    },
    "3251": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3252": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3253": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3254": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3255": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3256": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3257": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "ADD",
      "path": "8"
    },
    "3258": {
      "fn": "FTGStaking.stakeReward",
      "offset": [
        9670,
        9796
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "fn": "FTGStaking.stakeReward",
      "jump": "o",
      "offset": [
        9340,
        9803
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3262": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3264": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3271": {
      "op": "SHL"
    },
    "3272": {
      "op": "SUB"
    },
    "3273": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "3274": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3275": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "3276": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD17"
    },
    "3279": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3280": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3282": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3289": {
      "op": "SHL"
    },
    "3290": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3291": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3294": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3296": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "3298": {
      "op": "DUP2"
    },
    "3299": {
      "op": "SWAP1"
    },
    "3300": {
      "op": "MSTORE"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3303": {
      "op": "DUP3"
    },
    "3304": {
      "op": "ADD"
    },
    "3305": {
      "op": "MSTORE"
    },
    "3306": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3341": {
      "op": "DUP3"
    },
    "3342": {
      "op": "ADD"
    },
    "3343": {
      "op": "MSTORE"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "3350": {
      "op": "JUMP"
    },
    "3351": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "SUB"
    },
    "3360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 38
    },
    "3361": {
      "branch": 84,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "AND",
      "path": "0"
    },
    "3362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7C"
    },
    "3365": {
      "branch": 84,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3375": {
      "op": "SHL"
    },
    "3376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3383": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3427": {
      "op": "DUP3"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3442": {
      "op": "DUP3"
    },
    "3443": {
      "op": "ADD"
    },
    "3444": {
      "op": "MSTORE"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3447": {
      "op": "ADD"
    },
    "3448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x308"
    },
    "3451": {
      "op": "JUMP"
    },
    "3452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x0"
    },
    "3455": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3470": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "AND",
      "path": "0"
    },
    "3471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3473": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "3474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x0"
    },
    "3512": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3513": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "op": "NOT"
    },
    "3523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "op": "SUB"
    },
    "3532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "3536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "OR",
      "path": "0"
    },
    "3540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3542": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3543": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6755,
        6855
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3544": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6796,
        6848
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 41,
      "value": "0xDE2"
    },
    "3547": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6821,
        6831
      ],
      "op": "CALLER",
      "path": "8"
    },
    "3548": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6833,
        6847
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3550": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6796,
        6820
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1121"
    },
    "3553": {
      "fn": "FTGStaking.updateReward",
      "jump": "i",
      "offset": [
        6796,
        6848
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3554": {
      "fn": "FTGStaking.updateReward",
      "offset": [
        6796,
        6848
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3555": {
      "fn": "FTGStaking.updateReward",
      "jump": "o",
      "offset": [
        6755,
        6855
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3556": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3557": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3559": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3560": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15191,
        15205
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "NOT"
    },
    "3564": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15680,
        15681
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3565": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15677,
        15678
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3566": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15670,
        15690
      ],
      "op": "MULMOD",
      "path": "7"
    },
    "3567": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15719,
        15720
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3568": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15716,
        15717
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3569": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15712,
        15721
      ],
      "op": "MUL",
      "path": "7"
    },
    "3570": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15703,
        15721
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3571": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15703,
        15721
      ],
      "op": "POP",
      "path": "7"
    },
    "3572": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15770,
        15775
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3573": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15766,
        15768
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3574": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15763,
        15776
      ],
      "op": "LT",
      "path": "7"
    },
    "3575": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15755,
        15760
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3576": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15751,
        15753
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3577": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15747,
        15761
      ],
      "op": "SUB",
      "path": "7"
    },
    "3578": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15743,
        15777
      ],
      "op": "SUB",
      "path": "7"
    },
    "3579": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3580": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "POP",
      "path": "7"
    },
    "3581": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15734,
        15777
      ],
      "op": "POP",
      "path": "7"
    },
    "3582": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15860,
        15865
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3583": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15869,
        15870
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3585": {
      "branch": 85,
      "fn": "PRBMath.mulDiv",
      "offset": [
        15860,
        15870
      ],
      "op": "SUB",
      "path": "7"
    },
    "3586": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE1E"
    },
    "3589": {
      "branch": 85,
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3590": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15931,
        15942
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 42
    },
    "3591": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15928
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3592": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3593": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE14"
    },
    "3596": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3597": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE14"
    },
    "3600": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17AE"
    },
    "3603": {
      "fn": "PRBMath.mulDiv",
      "jump": "i",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3604": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3605": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15923,
        15942
      ],
      "op": "DIV",
      "path": "7"
    },
    "3606": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15914,
        15942
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3607": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15914,
        15942
      ],
      "op": "POP",
      "path": "7"
    },
    "3608": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "POP",
      "path": "7",
      "statement": 43
    },
    "3609": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "POP",
      "path": "7"
    },
    "3610": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEB0"
    },
    "3613": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15970,
        15983
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3614": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15856,
        15994
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3615": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16101,
        16112
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 44
    },
    "3616": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16092,
        16097
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3617": {
      "branch": 86,
      "fn": "PRBMath.mulDiv",
      "offset": [
        16092,
        16112
      ],
      "op": "LT",
      "path": "7"
    },
    "3618": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE48"
    },
    "3621": {
      "branch": 86,
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3622": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3624": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3625": {
      "op": "PUSH4",
      "value": "0x1DCF3063"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3632": {
      "op": "SHL"
    },
    "3633": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3634": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3635": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3637": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3638": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "ADD",
      "path": "7"
    },
    "3639": {
      "op": "DUP3"
    },
    "3640": {
      "op": "SWAP1"
    },
    "3641": {
      "op": "MSTORE"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3644": {
      "op": "DUP2"
    },
    "3645": {
      "op": "ADD"
    },
    "3646": {
      "op": "DUP6"
    },
    "3647": {
      "op": "SWAP1"
    },
    "3648": {
      "op": "MSTORE"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16135,
        16178
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x308"
    },
    "3655": {
      "op": "JUMP"
    },
    "3656": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16088,
        16189
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3657": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16424,
        16441
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3659": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16547,
        16558
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3660": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16544,
        16545
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3661": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16541,
        16542
      ],
      "op": "DUP9",
      "path": "7"
    },
    "3662": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16534,
        16559
      ],
      "op": "MULMOD",
      "path": "7"
    },
    "3663": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17090
      ],
      "op": "DUP6",
      "path": "7"
    },
    "3664": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17090
      ],
      "op": "NOT",
      "path": "7"
    },
    "3665": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17093,
        17094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3667": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3668": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3669": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17078,
        17094
      ],
      "op": "ADD",
      "path": "7"
    },
    "3670": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17063,
        17095
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3671": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17063,
        17095
      ],
      "op": "AND",
      "path": "7"
    },
    "3672": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "3673": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "DUP8",
      "path": "7"
    },
    "3674": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3675": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "DIV",
      "path": "7"
    },
    "3676": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17201,
        17226
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "3677": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3678": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3679": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16696,
        16717
      ],
      "op": "SUB",
      "path": "7"
    },
    "3680": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3681": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3682": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17305,
        17324
      ],
      "op": "DIV",
      "path": "7"
    },
    "3683": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "3684": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3685": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3686": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16653,
        16673
      ],
      "op": "GT",
      "path": "7"
    },
    "3687": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3688": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3689": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        16642,
        16674
      ],
      "op": "SUB",
      "path": "7"
    },
    "3690": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17045,
        17060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3692": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3693": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3694": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17467,
        17482
      ],
      "op": "SUB",
      "path": "7"
    },
    "3695": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3696": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3697": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3698": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17463,
        17492
      ],
      "op": "DIV",
      "path": "7"
    },
    "3699": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3700": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3701": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17459,
        17496
      ],
      "op": "ADD",
      "path": "7"
    },
    "3702": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 45
    },
    "3703": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3704": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3705": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17585,
        17600
      ],
      "op": "MUL",
      "path": "7"
    },
    "3706": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3707": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3708": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3709": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17576,
        17600
      ],
      "op": "OR",
      "path": "7"
    },
    "3710": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17938
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3712": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3713": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17937,
        17952
      ],
      "op": "MUL",
      "path": "7"
    },
    "3714": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17956,
        17957
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3716": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3717": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3718": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        17936,
        17957
      ],
      "op": "XOR",
      "path": "7"
    },
    "3719": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 46
    },
    "3720": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3721": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18189,
        18210
      ],
      "op": "MUL",
      "path": "7"
    },
    "3722": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18185,
        18210
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3723": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18185,
        18210
      ],
      "op": "SUB",
      "path": "7"
    },
    "3724": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18174,
        18210
      ],
      "op": "MUL",
      "path": "7"
    },
    "3725": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 47
    },
    "3726": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3727": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18258,
        18279
      ],
      "op": "MUL",
      "path": "7"
    },
    "3728": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18254,
        18279
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3729": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18254,
        18279
      ],
      "op": "SUB",
      "path": "7"
    },
    "3730": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18243,
        18279
      ],
      "op": "MUL",
      "path": "7"
    },
    "3731": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 48
    },
    "3732": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3733": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18328,
        18349
      ],
      "op": "MUL",
      "path": "7"
    },
    "3734": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18324,
        18349
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3735": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18324,
        18349
      ],
      "op": "SUB",
      "path": "7"
    },
    "3736": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18313,
        18349
      ],
      "op": "MUL",
      "path": "7"
    },
    "3737": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 49
    },
    "3738": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3739": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18398,
        18419
      ],
      "op": "MUL",
      "path": "7"
    },
    "3740": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18394,
        18419
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3741": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18394,
        18419
      ],
      "op": "SUB",
      "path": "7"
    },
    "3742": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18383,
        18419
      ],
      "op": "MUL",
      "path": "7"
    },
    "3743": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 50
    },
    "3744": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3745": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18468,
        18489
      ],
      "op": "MUL",
      "path": "7"
    },
    "3746": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18464,
        18489
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3747": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18464,
        18489
      ],
      "op": "SUB",
      "path": "7"
    },
    "3748": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18453,
        18489
      ],
      "op": "MUL",
      "path": "7"
    },
    "3749": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 51
    },
    "3750": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3751": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18539,
        18560
      ],
      "op": "MUL",
      "path": "7"
    },
    "3752": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3753": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3754": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18535,
        18560
      ],
      "op": "SUB",
      "path": "7"
    },
    "3755": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        18524,
        18560
      ],
      "op": "MUL",
      "path": "7"
    },
    "3756": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "MUL",
      "path": "7",
      "statement": 52
    },
    "3757": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        19003,
        19018
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3761": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3762": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3763": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "POP",
      "path": "7"
    },
    "3764": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "POP",
      "path": "7"
    },
    "3765": {
      "fn": "PRBMath.mulDiv",
      "offset": [
        15079,
        19062
      ],
      "op": "POP",
      "path": "7"
    },
    "3766": {
      "fn": "PRBMath.mulDiv",
      "jump": "o",
      "offset": [
        15079,
        19062
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3767": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1359,
        2010
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3768": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1421,
        1435
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3770": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1421,
        1435
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3771": {
      "branch": 80,
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1421,
        1440
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3772": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1417,
        2004
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1040"
    },
    "3775": {
      "branch": 80,
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1417,
        2004
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3776": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 53,
      "value": "0x40"
    },
    "3778": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3779": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3780": {
      "op": "DUP2"
    },
    "3781": {
      "op": "DUP2"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "3785": {
      "op": "DUP2"
    },
    "3786": {
      "op": "DUP4"
    },
    "3787": {
      "op": "ADD"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "PUSH7",
      "value": "0x17DC995DD85C99"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "3799": {
      "op": "SHL"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3802": {
      "op": "DUP3"
    },
    "3803": {
      "op": "ADD"
    },
    "3804": {
      "op": "MSTORE"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3807": {
      "op": "DUP2"
    },
    "3808": {
      "op": "ADD"
    },
    "3809": {
      "op": "DUP4"
    },
    "3810": {
      "op": "SWAP1"
    },
    "3811": {
      "op": "MSTORE"
    },
    "3812": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3813": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3816": {
      "op": "DUP1"
    },
    "3817": {
      "op": "MLOAD"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "3823": {
      "op": "DUP4"
    },
    "3824": {
      "op": "CODECOPY"
    },
    "3825": {
      "op": "DUP2"
    },
    "3826": {
      "op": "MLOAD"
    },
    "3827": {
      "op": "SWAP2"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3830": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3831": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3832": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "SUB",
      "path": "8"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3835": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "ADD",
      "path": "8"
    },
    "3836": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3837": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1461,
        1484
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3838": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1498,
        1520
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3840": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1523,
        1665
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF10"
    },
    "3843": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1555,
        1568
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3B9ACA00"
    },
    "3848": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1612,
        1619
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3849": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1637,
        1651
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3851": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1637,
        1651
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3852": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1523,
        1537
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE4"
    },
    "3855": {
      "fn": "FTGStaking._addNewReward",
      "jump": "i",
      "offset": [
        1523,
        1665
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3856": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1523,
        1665
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3857": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1498,
        1665
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3858": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1498,
        1665
      ],
      "op": "POP",
      "path": "8"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "DUP1"
    },
    "3862": {
      "op": "MLOAD"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "3868": {
      "op": "DUP4"
    },
    "3869": {
      "op": "CODECOPY"
    },
    "3870": {
      "op": "DUP2"
    },
    "3871": {
      "op": "MLOAD"
    },
    "3872": {
      "op": "SWAP2"
    },
    "3873": {
      "op": "MSTORE"
    },
    "3874": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1706,
        1720
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 54
    },
    "3875": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3877": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3878": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF5A"
    },
    "3881": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3882": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3885": {
      "op": "DUP1"
    },
    "3886": {
      "op": "DUP3"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3890": {
      "op": "SWAP1"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "ADD"
    },
    "3893": {
      "op": "MSTORE"
    },
    "3894": {
      "op": "PUSH14",
      "value": "0x7265776172645065723142465447"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3911": {
      "op": "SHL"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3919": {
      "op": "DUP2"
    },
    "3920": {
      "op": "ADD"
    },
    "3921": {
      "op": "SWAP2"
    },
    "3922": {
      "op": "SWAP1"
    },
    "3923": {
      "op": "SWAP2"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "SWAP1"
    },
    "3929": {
      "op": "JUMP"
    },
    "3930": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3931": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3933": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3934": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3935": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3936": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "SUB",
      "path": "8"
    },
    "3937": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3938": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1684,
        1721
      ],
      "op": "LOG1",
      "path": "8"
    },
    "3939": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 55,
      "value": "0x40"
    },
    "3941": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3942": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3943": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "3945": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3946": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "ADD",
      "path": "8"
    },
    "3947": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3948": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3949": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3950": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3951": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3952": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3954": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3955": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3956": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "ADD",
      "path": "8"
    },
    "3957": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3958": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3959": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3960": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1784,
        1799
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "3961": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3962": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3963": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "ADD",
      "path": "8"
    },
    "3964": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3965": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3966": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3967": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1746
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3969": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3970": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "3971": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3973": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3974": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "ADD",
      "path": "8"
    },
    "3975": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3976": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3979": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3980": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3981": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3982": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3983": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3984": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3985": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "4018": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4020": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4021": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP7",
      "path": "8"
    },
    "4022": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "MUL",
      "path": "8"
    },
    "4023": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "4024": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4025": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "ADD",
      "path": "8"
    },
    "4026": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4027": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4028": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4029": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
    },
    "4062": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4063": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "ADD",
      "path": "8"
    },
    "4064": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4065": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4066": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4067": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
    },
    "4100": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4101": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4102": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "ADD",
      "path": "8"
    },
    "4103": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4104": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4105": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4106": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1735,
        1801
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4107": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 56
    },
    "4108": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4109": {
      "op": "SWAP1"
    },
    "4110": {
      "op": "DUP2"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4113": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1752,
        1800
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4114": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xE5F54735F9CE2571EEFFC4CE867A47D7CD77AB6CA4D979F9FC33E445A39EBF3E"
    },
    "4147": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4151": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4152": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4153": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4154": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "SUB",
      "path": "8"
    },
    "4155": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4156": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1820,
        1855
      ],
      "op": "LOG2",
      "path": "8"
    },
    "4157": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1442,
        1866
      ],
      "op": "POP",
      "path": "8"
    },
    "4158": {
      "fn": "FTGStaking.depositReward",
      "offset": [
        6621,
        6709
      ],
      "op": "POP",
      "path": "8"
    },
    "4159": {
      "fn": "FTGStaking.depositReward",
      "jump": "o",
      "offset": [
        6621,
        6709
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4160": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1417,
        2004
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4161": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 57,
      "value": "0x40"
    },
    "4163": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4164": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4165": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "4167": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4168": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "ADD",
      "path": "8"
    },
    "4169": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4170": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4171": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4172": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4173": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4176": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4178": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4179": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "ADD",
      "path": "8"
    },
    "4180": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4181": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4182": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4183": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1922,
        1937
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "4184": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4185": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP6",
      "path": "8"
    },
    "4186": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "ADD",
      "path": "8"
    },
    "4187": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4188": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4189": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1903,
        1938
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4190": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1897
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4192": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4193": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4194": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4196": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4197": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "ADD",
      "path": "8"
    },
    "4198": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4199": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4200": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "4201": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4202": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4203": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4204": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4206": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4207": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4208": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "MUL",
      "path": "8"
    },
    "4209": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "4242": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4243": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "ADD",
      "path": "8"
    },
    "4244": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4245": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4246": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "4247": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4248": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4249": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4250": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
    },
    "4283": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4284": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "ADD",
      "path": "8"
    },
    "4285": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4286": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4287": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4288": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
    },
    "4321": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4322": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4323": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "ADD",
      "path": "8"
    },
    "4324": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1886,
        1939
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "4325": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 58
    },
    "4326": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4327": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1910,
        1917
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4328": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1910,
        1917
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4329": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xE5F54735F9CE2571EEFFC4CE867A47D7CD77AB6CA4D979F9FC33E445A39EBF3E"
    },
    "4362": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4363": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1116"
    },
    "4366": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4367": {
      "op": "DUP2"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "op": "SWAP1"
    },
    "4373": {
      "op": "JUMP"
    },
    "4374": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4375": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4377": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4378": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4379": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4380": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "SUB",
      "path": "8"
    },
    "4381": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4382": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1958,
        1993
      ],
      "op": "LOG2",
      "path": "8"
    },
    "4383": {
      "fn": "FTGStaking._addNewReward",
      "offset": [
        1359,
        2010
      ],
      "op": "POP",
      "path": "8"
    },
    "4384": {
      "fn": "FTGStaking._addNewReward",
      "jump": "o",
      "offset": [
        1359,
        2010
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4385": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3271,
        5123
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4386": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3414,
        3428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4388": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3410
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4389": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4391": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4392": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "GT",
      "path": "8"
    },
    "4393": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4394": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1135"
    },
    "4397": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4398": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1135"
    },
    "4401": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x175C"
    },
    "4404": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        3400,
        3428
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4405": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4406": {
      "branch": 81,
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3400,
        3428
      ],
      "op": "SUB",
      "path": "8"
    },
    "4407": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3396,
        5117
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F6"
    },
    "4410": {
      "branch": 81,
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3396,
        5117
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "op": "SUB"
    },
    "4419": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4420": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "AND",
      "path": "8"
    },
    "4421": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3444,
        3462
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4423": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4424": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4425": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4426": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3521
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4428": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4430": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4431": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4433": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4434": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3542
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4435": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3559
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4437": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3559
      ],
      "op": "ADD",
      "path": "8"
    },
    "4438": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3509,
        3559
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4439": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3465,
        3573
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x115F"
    },
    "4442": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3465,
        3573
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4443": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3465,
        3491
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14BA"
    },
    "4446": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        3465,
        3573
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4447": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3465,
        3573
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4448": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3444,
        3573
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4449": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3444,
        3573
      ],
      "op": "POP",
      "path": "8"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4452": {
      "op": "DUP1"
    },
    "4453": {
      "op": "MLOAD"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4456": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "4459": {
      "op": "DUP4"
    },
    "4460": {
      "op": "CODECOPY"
    },
    "4461": {
      "op": "DUP2"
    },
    "4462": {
      "op": "MLOAD"
    },
    "4463": {
      "op": "SWAP2"
    },
    "4464": {
      "op": "MSTORE"
    },
    "4465": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3611,
        3621
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 59
    },
    "4466": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4468": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4469": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11A6"
    },
    "4472": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4473": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4476": {
      "op": "DUP1"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "MSTORE"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4481": {
      "op": "SWAP1"
    },
    "4482": {
      "op": "DUP3"
    },
    "4483": {
      "op": "ADD"
    },
    "4484": {
      "op": "MSTORE"
    },
    "4485": {
      "op": "PUSH11",
      "value": "0x7374617274496E6465783D"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4502": {
      "op": "DUP3"
    },
    "4503": {
      "op": "ADD"
    },
    "4504": {
      "op": "MSTORE"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4507": {
      "op": "DUP2"
    },
    "4508": {
      "op": "ADD"
    },
    "4509": {
      "op": "SWAP2"
    },
    "4510": {
      "op": "SWAP1"
    },
    "4511": {
      "op": "SWAP2"
    },
    "4512": {
      "op": "MSTORE"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "op": "SWAP1"
    },
    "4517": {
      "op": "JUMP"
    },
    "4518": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4519": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4521": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4522": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4523": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4524": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "SUB",
      "path": "8"
    },
    "4525": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4526": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3592,
        3622
      ],
      "op": "LOG1",
      "path": "8"
    },
    "4527": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3636,
        3654
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4529": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3689,
        3699
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4530": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4531": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3705,
        3716
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4533": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3705,
        3723
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4534": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3701,
        3723
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4535": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3701,
        3723
      ],
      "op": "LT",
      "path": "8"
    },
    "4536": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "4537": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x141C"
    },
    "4540": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4541": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3748,
        3789
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4543": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3792,
        3946
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11EC"
    },
    "4546": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3855,
        3874
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4547": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3911
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4549": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3912,
        3913
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4550": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4551": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4552": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4553": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "LT",
      "path": "8"
    },
    "4554": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11D5"
    },
    "4557": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4558": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11D5"
    },
    "4561": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C4"
    },
    "4564": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        3900,
        3914
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4565": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4566": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4567": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4569": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4570": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4572": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4574": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4575": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4576": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4578": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "MUL",
      "path": "8"
    },
    "4579": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3914
      ],
      "op": "ADD",
      "path": "8"
    },
    "4580": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3924
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4582": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3924
      ],
      "op": "ADD",
      "path": "8"
    },
    "4583": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3900,
        3924
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4584": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3792,
        3829
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x153A"
    },
    "4587": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        3792,
        3946
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4588": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3792,
        3946
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4589": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3748,
        3946
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4590": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3748,
        3946
      ],
      "op": "POP",
      "path": "8"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4593": {
      "op": "DUP1"
    },
    "4594": {
      "op": "MLOAD"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "4600": {
      "op": "DUP4"
    },
    "4601": {
      "op": "CODECOPY"
    },
    "4602": {
      "op": "DUP2"
    },
    "4603": {
      "op": "MLOAD"
    },
    "4604": {
      "op": "SWAP2"
    },
    "4605": {
      "op": "MSTORE"
    },
    "4606": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4052,
        4085
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 60
    },
    "4607": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4609": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4610": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1250"
    },
    "4613": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4614": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4617": {
      "op": "DUP1"
    },
    "4618": {
      "op": "DUP3"
    },
    "4619": {
      "op": "MSTORE"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4622": {
      "op": "SWAP1"
    },
    "4623": {
      "op": "DUP3"
    },
    "4624": {
      "op": "ADD"
    },
    "4625": {
      "op": "MSTORE"
    },
    "4626": {
      "op": "PUSH32",
      "value": "0x7374616B65686F6C6465725374616B65496E646578417452657761726454696D"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4661": {
      "op": "DUP3"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "MSTORE"
    },
    "4664": {
      "op": "PUSH2",
      "value": "0x653D"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "ADD"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4677": {
      "op": "DUP2"
    },
    "4678": {
      "op": "ADD"
    },
    "4679": {
      "op": "SWAP2"
    },
    "4680": {
      "op": "SWAP1"
    },
    "4681": {
      "op": "SWAP2"
    },
    "4682": {
      "op": "MSTORE"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4685": {
      "op": "ADD"
    },
    "4686": {
      "op": "SWAP1"
    },
    "4687": {
      "op": "JUMP"
    },
    "4688": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4689": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4691": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4692": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4693": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4694": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "SUB",
      "path": "8"
    },
    "4695": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4696": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3969,
        4103
      ],
      "op": "LOG1",
      "path": "8"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4703": {
      "op": "SHL"
    },
    "4704": {
      "op": "SUB"
    },
    "4705": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "DUP7",
      "path": "8"
    },
    "4706": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "AND",
      "path": "8"
    },
    "4707": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4121,
        4157
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4709": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4710": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4711": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4712": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4172
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4714": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4716": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4717": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4718": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4719": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4721": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4722": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4231
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4723": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4242
      ],
      "op": "ADD",
      "path": "8"
    },
    "4724": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4725": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4726": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4243,
        4276
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4727": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4243,
        4276
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4728": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4729": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "LT",
      "path": "8"
    },
    "4730": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1285"
    },
    "4733": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4734": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1285"
    },
    "4737": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C4"
    },
    "4740": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        4160,
        4277
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4741": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4742": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4743": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4745": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4746": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4748": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4750": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4751": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4752": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4754": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "MUL",
      "path": "8"
    },
    "4755": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4277
      ],
      "op": "ADD",
      "path": "8"
    },
    "4756": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4289
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4758": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4289
      ],
      "op": "ADD",
      "path": "8"
    },
    "4759": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4160,
        4289
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4760": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4121,
        4289
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4761": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4121,
        4289
      ],
      "op": "POP",
      "path": "8"
    },
    "4762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4764": {
      "op": "DUP1"
    },
    "4765": {
      "op": "MLOAD"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "4771": {
      "op": "DUP4"
    },
    "4772": {
      "op": "CODECOPY"
    },
    "4773": {
      "op": "DUP2"
    },
    "4774": {
      "op": "MLOAD"
    },
    "4775": {
      "op": "SWAP2"
    },
    "4776": {
      "op": "MSTORE"
    },
    "4777": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4390,
        4418
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 61
    },
    "4778": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4780": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4781": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12F0"
    },
    "4784": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4785": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4788": {
      "op": "DUP1"
    },
    "4789": {
      "op": "DUP3"
    },
    "4790": {
      "op": "MSTORE"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4793": {
      "op": "SWAP1"
    },
    "4794": {
      "op": "DUP3"
    },
    "4795": {
      "op": "ADD"
    },
    "4796": {
      "op": "MSTORE"
    },
    "4797": {
      "op": "PUSH32",
      "value": "0x7374616B65686F6C6465725374616B65417452657761726474696D653D000000"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4832": {
      "op": "DUP3"
    },
    "4833": {
      "op": "ADD"
    },
    "4834": {
      "op": "MSTORE"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4837": {
      "op": "DUP2"
    },
    "4838": {
      "op": "ADD"
    },
    "4839": {
      "op": "SWAP2"
    },
    "4840": {
      "op": "SWAP1"
    },
    "4841": {
      "op": "SWAP2"
    },
    "4842": {
      "op": "MSTORE"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4845": {
      "op": "ADD"
    },
    "4846": {
      "op": "SWAP1"
    },
    "4847": {
      "op": "JUMP"
    },
    "4848": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4849": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4851": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4852": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4853": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4854": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "SUB",
      "path": "8"
    },
    "4855": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4856": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4312,
        4436
      ],
      "op": "LOG1",
      "path": "8"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4859": {
      "op": "DUP1"
    },
    "4860": {
      "op": "MLOAD"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "4866": {
      "op": "DUP4"
    },
    "4867": {
      "op": "CODECOPY"
    },
    "4868": {
      "op": "DUP2"
    },
    "4869": {
      "op": "MLOAD"
    },
    "4870": {
      "op": "SWAP2"
    },
    "4871": {
      "op": "MSTORE"
    },
    "4872": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4549
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 62,
      "value": "0x2"
    },
    "4874": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4550,
        4551
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4875": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4876": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4877": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4878": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "LT",
      "path": "8"
    },
    "4879": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x131A"
    },
    "4882": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4883": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x131A"
    },
    "4886": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C4"
    },
    "4889": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        4538,
        4552
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4890": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4891": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4892": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4894": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4895": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4897": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4899": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4900": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4901": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "4903": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "MUL",
      "path": "8"
    },
    "4904": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4552
      ],
      "op": "ADD",
      "path": "8"
    },
    "4905": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4567
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "4907": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4567
      ],
      "op": "ADD",
      "path": "8"
    },
    "4908": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4538,
        4567
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4909": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4911": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4912": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1373"
    },
    "4915": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4916": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4919": {
      "op": "DUP1"
    },
    "4920": {
      "op": "DUP3"
    },
    "4921": {
      "op": "MSTORE"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4924": {
      "op": "SWAP1"
    },
    "4925": {
      "op": "DUP3"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "MSTORE"
    },
    "4928": {
      "op": "PUSH32",
      "value": "0x726577617264734C6973745B695D2E72657761726450657231424654473D0000"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4963": {
      "op": "DUP3"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "MSTORE"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4968": {
      "op": "DUP2"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "SWAP2"
    },
    "4971": {
      "op": "SWAP1"
    },
    "4972": {
      "op": "SWAP2"
    },
    "4973": {
      "op": "MSTORE"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "SWAP1"
    },
    "4978": {
      "op": "JUMP"
    },
    "4979": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4980": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4982": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4983": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4984": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4985": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "SUB",
      "path": "8"
    },
    "4986": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4987": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4459,
        4585
      ],
      "op": "LOG1",
      "path": "8"
    },
    "4988": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4617,
        4812
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 63,
      "value": "0x13AE"
    },
    "4991": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4664
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "4993": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4665,
        4666
      ],
      "op": "DUP5",
      "path": "8"
    },
    "4994": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4995": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4996": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4997": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "LT",
      "path": "8"
    },
    "4998": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1391"
    },
    "5001": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5002": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1391"
    },
    "5005": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C4"
    },
    "5008": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        4653,
        4667
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5009": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5010": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5011": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5013": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5014": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5016": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5018": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5019": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5020": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5022": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "MUL",
      "path": "8"
    },
    "5023": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4667
      ],
      "op": "ADD",
      "path": "8"
    },
    "5024": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4682
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5026": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4682
      ],
      "op": "ADD",
      "path": "8"
    },
    "5027": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4653,
        4682
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5028": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4704,
        4732
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5029": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4754,
        4767
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x3B9ACA00"
    },
    "5034": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4617,
        4631
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE4"
    },
    "5037": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        4617,
        4812
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5038": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4617,
        4812
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5039": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13B8"
    },
    "5042": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5043": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "DUP6",
      "path": "8"
    },
    "5044": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "5047": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        4603,
        4812
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5048": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5049": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "5050": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4603,
        4812
      ],
      "op": "POP",
      "path": "8"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5053": {
      "op": "DUP1"
    },
    "5054": {
      "op": "MLOAD"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5057": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "5060": {
      "op": "DUP4"
    },
    "5061": {
      "op": "CODECOPY"
    },
    "5062": {
      "op": "DUP2"
    },
    "5063": {
      "op": "MLOAD"
    },
    "5064": {
      "op": "SWAP2"
    },
    "5065": {
      "op": "MSTORE"
    },
    "5066": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4854,
        4864
      ],
      "op": "DUP5",
      "path": "8",
      "statement": 64
    },
    "5067": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5069": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5070": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x13FF"
    },
    "5073": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5074": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5077": {
      "op": "DUP1"
    },
    "5078": {
      "op": "DUP3"
    },
    "5079": {
      "op": "MSTORE"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5082": {
      "op": "SWAP1"
    },
    "5083": {
      "op": "DUP3"
    },
    "5084": {
      "op": "ADD"
    },
    "5085": {
      "op": "MSTORE"
    },
    "5086": {
      "op": "PUSH11",
      "value": "0x7265776172647353756D3D"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5100": {
      "op": "SHL"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5103": {
      "op": "DUP3"
    },
    "5104": {
      "op": "ADD"
    },
    "5105": {
      "op": "MSTORE"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5108": {
      "op": "DUP2"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "SWAP2"
    },
    "5111": {
      "op": "SWAP1"
    },
    "5112": {
      "op": "SWAP2"
    },
    "5113": {
      "op": "MSTORE"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5116": {
      "op": "ADD"
    },
    "5117": {
      "op": "SWAP1"
    },
    "5118": {
      "op": "JUMP"
    },
    "5119": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5120": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5122": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5123": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5124": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5125": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "SUB",
      "path": "8"
    },
    "5126": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5127": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4835,
        4865
      ],
      "op": "LOG1",
      "path": "8"
    },
    "5128": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3730,
        4880
      ],
      "op": "POP",
      "path": "8"
    },
    "5129": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3730,
        4880
      ],
      "op": "POP",
      "path": "8"
    },
    "5130": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 65
    },
    "5131": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5132": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1414"
    },
    "5135": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5136": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17DA"
    },
    "5139": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        3725,
        3728
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5140": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5141": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5142": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "POP",
      "path": "8"
    },
    "5143": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3725,
        3728
      ],
      "op": "POP",
      "path": "8"
    },
    "5144": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11B2"
    },
    "5147": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5148": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3672,
        4880
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5149": {
      "op": "POP"
    },
    "5150": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 66,
      "value": "0x40"
    },
    "5152": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5153": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5154": {
      "op": "DUP2"
    },
    "5155": {
      "op": "DUP2"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5159": {
      "op": "DUP2"
    },
    "5160": {
      "op": "DUP4"
    },
    "5161": {
      "op": "ADD"
    },
    "5162": {
      "op": "MSTORE"
    },
    "5163": {
      "op": "PUSH17",
      "value": "0x66696E616C207265776172647353756D3D"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "5183": {
      "op": "SHL"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "ADD"
    },
    "5188": {
      "op": "MSTORE"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5191": {
      "op": "DUP2"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "DUP4"
    },
    "5194": {
      "op": "SWAP1"
    },
    "5195": {
      "op": "MSTORE"
    },
    "5196": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5197": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5200": {
      "op": "DUP1"
    },
    "5201": {
      "op": "MLOAD"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5204": {
      "op": "PUSH2",
      "value": "0x17F4"
    },
    "5207": {
      "op": "DUP4"
    },
    "5208": {
      "op": "CODECOPY"
    },
    "5209": {
      "op": "DUP2"
    },
    "5210": {
      "op": "MLOAD"
    },
    "5211": {
      "op": "SWAP2"
    },
    "5212": {
      "op": "MSTORE"
    },
    "5213": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5214": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5215": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5216": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "SUB",
      "path": "8"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5219": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "ADD",
      "path": "8"
    },
    "5220": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5221": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4898,
        4934
      ],
      "op": "LOG1",
      "path": "8"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5228": {
      "op": "SHL"
    },
    "5229": {
      "op": "SUB"
    },
    "5230": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "DUP5",
      "path": "8",
      "statement": 67
    },
    "5231": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "AND",
      "path": "8"
    },
    "5232": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5234": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5235": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5236": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5237": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4960
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5239": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5241": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5242": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5244": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5245": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5246": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4993
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5248": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4993
      ],
      "op": "ADD",
      "path": "8"
    },
    "5249": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5250": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5251": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4997,
        5007
      ],
      "op": "DUP4",
      "path": "8"
    },
    "5252": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4997,
        5007
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5253": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        4981
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5254": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1490"
    },
    "5257": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5258": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4997,
        5007
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5259": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4997,
        5007
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5260": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "5263": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "i",
      "offset": [
        4948,
        5007
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5264": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5265": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5266": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5267": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        4948,
        5007
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "op": "POP"
    },
    "5271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5277": {
      "op": "SHL"
    },
    "5278": {
      "op": "SUB"
    },
    "5279": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 68
    },
    "5280": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "AND",
      "path": "8"
    },
    "5281": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5283": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5284": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5285": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5286": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5033
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5288": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5290": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5291": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5293": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5294": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5054
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5295": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5074,
        5106
      ],
      "op": "TIMESTAMP",
      "path": "8"
    },
    "5296": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5298": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5071
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5299": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5071
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5300": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5071
      ],
      "op": "ADD",
      "path": "8"
    },
    "5301": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        5021,
        5106
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3271,
        5123
      ],
      "op": "POP",
      "path": "8"
    },
    "5304": {
      "fn": "FTGStaking._updateStakeholderReward",
      "offset": [
        3271,
        5123
      ],
      "op": "POP",
      "path": "8"
    },
    "5305": {
      "fn": "FTGStaking._updateStakeholderReward",
      "jump": "o",
      "offset": [
        3271,
        5123
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5306": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2088,
        2597
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5307": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2240
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5309": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2247
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5310": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2194,
        2201
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5312": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2194,
        2201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5313": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2194,
        2201
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5314": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2194,
        2201
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5315": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14CD"
    },
    "5318": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2280
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5319": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2279,
        2280
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5321": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14DC"
    },
    "5324": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2280
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5325": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2229,
        2280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5326": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2254,
        2265
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5328": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2254,
        2272
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5329": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2254,
        2276
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14DC"
    },
    "5332": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2254,
        2276
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5333": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2275,
        2276
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5335": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2275,
        2276
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5336": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2254,
        2276
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "5339": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "jump": "i",
      "offset": [
        2254,
        2276
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5340": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2254,
        2276
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5341": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2217,
        2280
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5342": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2217,
        2280
      ],
      "op": "POP",
      "path": "8"
    },
    "5343": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5344": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5345": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2411
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5347": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2412,
        2413
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5348": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5349": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5350": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5351": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "LT",
      "path": "8"
    },
    "5352": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F3"
    },
    "5355": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5356": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14F3"
    },
    "5359": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C4"
    },
    "5362": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "jump": "i",
      "offset": [
        2400,
        2414
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5363": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5364": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5365": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5367": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5368": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5370": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5372": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5373": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5374": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5376": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "MUL",
      "path": "8"
    },
    "5377": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2414
      ],
      "op": "ADD",
      "path": "8"
    },
    "5378": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2424
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5380": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2424
      ],
      "op": "ADD",
      "path": "8"
    },
    "5381": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2424
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5382": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2442
      ],
      "op": "LT",
      "path": "8"
    },
    "5383": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2442
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5384": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2452
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5385": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2452
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5386": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2452
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1512"
    },
    "5389": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2452
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5390": {
      "op": "POP"
    },
    "5391": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2446,
        2452
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5392": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2446,
        2452
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5393": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2446,
        2452
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5394": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2400,
        2452
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5395": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5396": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1520"
    },
    "5399": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5402": {
      "op": "NOT"
    },
    "5403": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2496,
        2499
      ],
      "op": "ADD",
      "path": "8",
      "statement": 69
    },
    "5404": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x14DF"
    },
    "5407": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5408": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2393,
        2557
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5409": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2577,
        2578
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 70,
      "value": "0x0"
    },
    "5411": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2574
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5412": {
      "branch": 82,
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2578
      ],
      "op": "GT",
      "path": "8"
    },
    "5413": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x152F"
    },
    "5416": {
      "branch": 82,
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2590
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5417": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2589,
        2590
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5419": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2590
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB0"
    },
    "5422": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2590
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5423": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2573,
        2590
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5424": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2581,
        2586
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEB0"
    },
    "5427": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2581,
        2582
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5428": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2585,
        2586
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5430": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "offset": [
        2581,
        2586
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x179B"
    },
    "5433": {
      "fn": "FTGStaking._getfirstRewardsIndexToAdd",
      "jump": "i",
      "offset": [
        2581,
        2586
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5434": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2671,
        3212
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5441": {
      "op": "SHL"
    },
    "5442": {
      "op": "SUB"
    },
    "5443": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5444": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "AND",
      "path": "8"
    },
    "5445": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2806,
        2813
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5447": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5448": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5449": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5450": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2849
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5452": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5454": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5455": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5456": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5457": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5459": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5460": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2870
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5461": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2881
      ],
      "op": "ADD",
      "path": "8"
    },
    "5462": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2888
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5463": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2806,
        2813
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5464": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2806,
        2813
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5465": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2978
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1563"
    },
    "5468": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2978
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5469": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2977,
        2978
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5471": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2978
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x158C"
    },
    "5474": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2978
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5475": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2837,
        2978
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5482": {
      "op": "SHL"
    },
    "5483": {
      "op": "SUB"
    },
    "5484": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "DUP5",
      "path": "8"
    },
    "5485": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "AND",
      "path": "8"
    },
    "5486": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5488": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5489": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5490": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5491": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2919
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5493": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5495": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5496": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5497": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5498": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5500": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5501": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5502": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2940
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5503": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2951
      ],
      "op": "ADD",
      "path": "8"
    },
    "5504": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2958
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5505": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x158C"
    },
    "5508": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5509": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2961,
        2962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5511": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2961,
        2962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5512": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1788"
    },
    "5515": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "jump": "i",
      "offset": [
        2907,
        2962
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5516": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2907,
        2962
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5517": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2825,
        2978
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5518": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2825,
        2978
      ],
      "op": "POP",
      "path": "8"
    },
    "5519": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5520": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3068,
        3073
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5521": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3020
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5523": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5525": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3021,
        3040
      ],
      "op": "DUP7",
      "path": "8"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5532": {
      "op": "SHL"
    },
    "5533": {
      "op": "SUB"
    },
    "5534": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "AND",
      "path": "8"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5541": {
      "op": "SHL"
    },
    "5542": {
      "op": "SUB"
    },
    "5543": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "AND",
      "path": "8"
    },
    "5544": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5545": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5546": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5548": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "ADD",
      "path": "8"
    },
    "5549": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5550": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5551": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5552": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5554": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "ADD",
      "path": "8"
    },
    "5555": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5557": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3041
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5558": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3052
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "5560": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3052
      ],
      "op": "ADD",
      "path": "8"
    },
    "5561": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3053,
        3054
      ],
      "op": "DUP3",
      "path": "8"
    },
    "5562": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5563": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5564": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5565": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "LT",
      "path": "8"
    },
    "5566": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C9"
    },
    "5569": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5570": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C9"
    },
    "5573": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17C4"
    },
    "5576": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "jump": "i",
      "offset": [
        3008,
        3055
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5577": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5578": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5579": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5581": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5582": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "5584": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5586": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "5587": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "5588": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "5590": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "MUL",
      "path": "8"
    },
    "5591": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3055
      ],
      "op": "ADD",
      "path": "8"
    },
    "5592": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3065
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "5594": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3065
      ],
      "op": "ADD",
      "path": "8"
    },
    "5595": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3065
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5596": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3073
      ],
      "op": "GT",
      "path": "8"
    },
    "5597": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3095
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5598": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3095
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5599": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3095
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15E7"
    },
    "5602": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3095
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5603": {
      "op": "POP"
    },
    "5604": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3089,
        3095
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5605": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3089,
        3095
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5606": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3089,
        3095
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5607": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3008,
        3095
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5608": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "5609": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15F5"
    },
    "5612": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5615": {
      "op": "NOT"
    },
    "5616": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3148,
        3151
      ],
      "op": "ADD",
      "path": "8",
      "statement": 71
    },
    "5617": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x158F"
    },
    "5620": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5621": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2988,
        3176
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5622": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3196,
        3197
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 72,
      "value": "0x0"
    },
    "5624": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3193
      ],
      "op": "DUP2",
      "path": "8"
    },
    "5625": {
      "branch": 83,
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3197
      ],
      "op": "GT",
      "path": "8"
    },
    "5626": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3205
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1604"
    },
    "5629": {
      "branch": 83,
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3205
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5630": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3204,
        3205
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "5632": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3205
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1606"
    },
    "5635": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3205
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5636": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3205
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5637": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3200,
        3201
      ],
      "op": "DUP1",
      "path": "8"
    },
    "5638": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3192,
        3205
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5639": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3185,
        3205
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5640": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3185,
        3205
      ],
      "op": "POP",
      "path": "8"
    },
    "5641": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        3185,
        3205
      ],
      "op": "POP",
      "path": "8"
    },
    "5642": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2671,
        3212
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "5643": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2671,
        3212
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "5644": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2671,
        3212
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "5645": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2671,
        3212
      ],
      "op": "POP",
      "path": "8"
    },
    "5646": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "offset": [
        2671,
        3212
      ],
      "op": "POP",
      "path": "8"
    },
    "5647": {
      "fn": "FTGStaking._getStakeHolderStakeIndexAtRewardTime",
      "jump": "o",
      "offset": [
        2671,
        3212
      ],
      "op": "JUMP",
      "path": "8"
    },
    "5648": {
      "op": "JUMPDEST"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5653": {
      "op": "DUP3"
    },
    "5654": {
      "op": "DUP5"
    },
    "5655": {
      "op": "SUB"
    },
    "5656": {
      "op": "SLT"
    },
    "5657": {
      "op": "ISZERO"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x1622"
    },
    "5661": {
      "op": "JUMPI"
    },
    "5662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5664": {
      "op": "DUP1"
    },
    "5665": {
      "op": "REVERT"
    },
    "5666": {
      "op": "JUMPDEST"
    },
    "5667": {
      "op": "DUP2"
    },
    "5668": {
      "op": "CALLDATALOAD"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5675": {
      "op": "SHL"
    },
    "5676": {
      "op": "SUB"
    },
    "5677": {
      "op": "DUP2"
    },
    "5678": {
      "op": "AND"
    },
    "5679": {
      "op": "DUP2"
    },
    "5680": {
      "op": "EQ"
    },
    "5681": {
      "op": "PUSH2",
      "value": "0x1604"
    },
    "5684": {
      "op": "JUMPI"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5687": {
      "op": "DUP1"
    },
    "5688": {
      "op": "REVERT"
    },
    "5689": {
      "op": "JUMPDEST"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5692": {
      "op": "DUP1"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5695": {
      "op": "DUP4"
    },
    "5696": {
      "op": "DUP6"
    },
    "5697": {
      "op": "SUB"
    },
    "5698": {
      "op": "SLT"
    },
    "5699": {
      "op": "ISZERO"
    },
    "5700": {
      "op": "PUSH2",
      "value": "0x164C"
    },
    "5703": {
      "op": "JUMPI"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5706": {
      "op": "DUP1"
    },
    "5707": {
      "op": "REVERT"
    },
    "5708": {
      "op": "JUMPDEST"
    },
    "5709": {
      "op": "DUP3"
    },
    "5710": {
      "op": "CALLDATALOAD"
    },
    "5711": {
      "op": "SWAP2"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5715": {
      "op": "DUP4"
    },
    "5716": {
      "op": "ADD"
    },
    "5717": {
      "op": "CALLDATALOAD"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5720": {
      "op": "DUP2"
    },
    "5721": {
      "op": "LT"
    },
    "5722": {
      "op": "PUSH2",
      "value": "0x1662"
    },
    "5725": {
      "op": "JUMPI"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5728": {
      "op": "DUP1"
    },
    "5729": {
      "op": "REVERT"
    },
    "5730": {
      "op": "JUMPDEST"
    },
    "5731": {
      "op": "DUP1"
    },
    "5732": {
      "op": "SWAP2"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "op": "POP"
    },
    "5735": {
      "op": "SWAP3"
    },
    "5736": {
      "op": "POP"
    },
    "5737": {
      "op": "SWAP3"
    },
    "5738": {
      "op": "SWAP1"
    },
    "5739": {
      "op": "POP"
    },
    "5740": {
      "jump": "o",
      "op": "JUMP"
    },
    "5741": {
      "op": "JUMPDEST"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5746": {
      "op": "DUP3"
    },
    "5747": {
      "op": "DUP5"
    },
    "5748": {
      "op": "SUB"
    },
    "5749": {
      "op": "SLT"
    },
    "5750": {
      "op": "ISZERO"
    },
    "5751": {
      "op": "PUSH2",
      "value": "0x167F"
    },
    "5754": {
      "op": "JUMPI"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5757": {
      "op": "DUP1"
    },
    "5758": {
      "op": "REVERT"
    },
    "5759": {
      "op": "JUMPDEST"
    },
    "5760": {
      "op": "POP"
    },
    "5761": {
      "op": "CALLDATALOAD"
    },
    "5762": {
      "op": "SWAP2"
    },
    "5763": {
      "op": "SWAP1"
    },
    "5764": {
      "op": "POP"
    },
    "5765": {
      "jump": "o",
      "op": "JUMP"
    },
    "5766": {
      "op": "JUMPDEST"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5769": {
      "op": "DUP1"
    },
    "5770": {
      "op": "DUP3"
    },
    "5771": {
      "op": "MSTORE"
    },
    "5772": {
      "op": "DUP3"
    },
    "5773": {
      "op": "MLOAD"
    },
    "5774": {
      "op": "DUP3"
    },
    "5775": {
      "op": "DUP3"
    },
    "5776": {
      "op": "ADD"
    },
    "5777": {
      "op": "DUP2"
    },
    "5778": {
      "op": "SWAP1"
    },
    "5779": {
      "op": "MSTORE"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5782": {
      "op": "SWAP2"
    },
    "5783": {
      "op": "SWAP1"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5786": {
      "op": "SWAP1"
    },
    "5787": {
      "op": "DUP2"
    },
    "5788": {
      "op": "DUP6"
    },
    "5789": {
      "op": "ADD"
    },
    "5790": {
      "op": "SWAP1"
    },
    "5791": {
      "op": "DUP7"
    },
    "5792": {
      "op": "DUP5"
    },
    "5793": {
      "op": "ADD"
    },
    "5794": {
      "op": "DUP6"
    },
    "5795": {
      "op": "JUMPDEST"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "DUP2"
    },
    "5798": {
      "op": "LT"
    },
    "5799": {
      "op": "ISZERO"
    },
    "5800": {
      "op": "PUSH2",
      "value": "0x16C8"
    },
    "5803": {
      "op": "JUMPI"
    },
    "5804": {
      "op": "DUP2"
    },
    "5805": {
      "op": "MLOAD"
    },
    "5806": {
      "op": "DUP1"
    },
    "5807": {
      "op": "MLOAD"
    },
    "5808": {
      "op": "DUP6"
    },
    "5809": {
      "op": "MSTORE"
    },
    "5810": {
      "op": "DUP7"
    },
    "5811": {
      "op": "ADD"
    },
    "5812": {
      "op": "MLOAD"
    },
    "5813": {
      "op": "DUP7"
    },
    "5814": {
      "op": "DUP6"
    },
    "5815": {
      "op": "ADD"
    },
    "5816": {
      "op": "MSTORE"
    },
    "5817": {
      "op": "SWAP3"
    },
    "5818": {
      "op": "DUP5"
    },
    "5819": {
      "op": "ADD"
    },
    "5820": {
      "op": "SWAP3"
    },
    "5821": {
      "op": "SWAP1"
    },
    "5822": {
      "op": "DUP6"
    },
    "5823": {
      "op": "ADD"
    },
    "5824": {
      "op": "SWAP1"
    },
    "5825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x16A3"
    },
    "5831": {
      "op": "JUMP"
    },
    "5832": {
      "op": "JUMPDEST"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "op": "SWAP2"
    },
    "5835": {
      "op": "SWAP8"
    },
    "5836": {
      "op": "SWAP7"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "op": "POP"
    },
    "5839": {
      "op": "POP"
    },
    "5840": {
      "op": "POP"
    },
    "5841": {
      "op": "POP"
    },
    "5842": {
      "op": "POP"
    },
    "5843": {
      "op": "POP"
    },
    "5844": {
      "jump": "o",
      "op": "JUMP"
    },
    "5845": {
      "op": "JUMPDEST"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5848": {
      "op": "DUP1"
    },
    "5849": {
      "op": "DUP3"
    },
    "5850": {
      "op": "MSTORE"
    },
    "5851": {
      "op": "DUP3"
    },
    "5852": {
      "op": "MLOAD"
    },
    "5853": {
      "op": "DUP3"
    },
    "5854": {
      "op": "DUP3"
    },
    "5855": {
      "op": "ADD"
    },
    "5856": {
      "op": "DUP2"
    },
    "5857": {
      "op": "SWAP1"
    },
    "5858": {
      "op": "MSTORE"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5861": {
      "op": "SWAP2"
    },
    "5862": {
      "op": "SWAP1"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5865": {
      "op": "SWAP1"
    },
    "5866": {
      "op": "DUP2"
    },
    "5867": {
      "op": "DUP6"
    },
    "5868": {
      "op": "ADD"
    },
    "5869": {
      "op": "SWAP1"
    },
    "5870": {
      "op": "DUP7"
    },
    "5871": {
      "op": "DUP5"
    },
    "5872": {
      "op": "ADD"
    },
    "5873": {
      "op": "DUP6"
    },
    "5874": {
      "op": "JUMPDEST"
    },
    "5875": {
      "op": "DUP3"
    },
    "5876": {
      "op": "DUP2"
    },
    "5877": {
      "op": "LT"
    },
    "5878": {
      "op": "ISZERO"
    },
    "5879": {
      "op": "PUSH2",
      "value": "0x16C8"
    },
    "5882": {
      "op": "JUMPI"
    },
    "5883": {
      "op": "DUP2"
    },
    "5884": {
      "op": "MLOAD"
    },
    "5885": {
      "op": "DUP1"
    },
    "5886": {
      "op": "MLOAD"
    },
    "5887": {
      "op": "DUP6"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "DUP7"
    },
    "5890": {
      "op": "DUP2"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "op": "MLOAD"
    },
    "5893": {
      "op": "DUP8"
    },
    "5894": {
      "op": "DUP7"
    },
    "5895": {
      "op": "ADD"
    },
    "5896": {
      "op": "MSTORE"
    },
    "5897": {
      "op": "DUP6"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "MLOAD"
    },
    "5900": {
      "op": "DUP6"
    },
    "5901": {
      "op": "DUP6"
    },
    "5902": {
      "op": "ADD"
    },
    "5903": {
      "op": "MSTORE"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5906": {
      "op": "SWAP1"
    },
    "5907": {
      "op": "SWAP4"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "op": "SWAP3"
    },
    "5910": {
      "op": "SWAP1"
    },
    "5911": {
      "op": "DUP6"
    },
    "5912": {
      "op": "ADD"
    },
    "5913": {
      "op": "SWAP1"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "PUSH2",
      "value": "0x16F2"
    },
    "5920": {
      "op": "JUMP"
    },
    "5921": {
      "op": "JUMPDEST"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5926": {
      "op": "DUP3"
    },
    "5927": {
      "op": "DUP5"
    },
    "5928": {
      "op": "SUB"
    },
    "5929": {
      "op": "SLT"
    },
    "5930": {
      "op": "ISZERO"
    },
    "5931": {
      "op": "PUSH2",
      "value": "0x1733"
    },
    "5934": {
      "op": "JUMPI"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5937": {
      "op": "DUP1"
    },
    "5938": {
      "op": "REVERT"
    },
    "5939": {
      "op": "JUMPDEST"
    },
    "5940": {
      "op": "POP"
    },
    "5941": {
      "op": "MLOAD"
    },
    "5942": {
      "op": "SWAP2"
    },
    "5943": {
      "op": "SWAP1"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "jump": "o",
      "op": "JUMP"
    },
    "5946": {
      "op": "JUMPDEST"
    },
    "5947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5951": {
      "op": "DUP3"
    },
    "5952": {
      "op": "DUP5"
    },
    "5953": {
      "op": "SUB"
    },
    "5954": {
      "op": "SLT"
    },
    "5955": {
      "op": "ISZERO"
    },
    "5956": {
      "op": "PUSH2",
      "value": "0x174C"
    },
    "5959": {
      "op": "JUMPI"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5962": {
      "op": "DUP1"
    },
    "5963": {
      "op": "REVERT"
    },
    "5964": {
      "op": "JUMPDEST"
    },
    "5965": {
      "op": "DUP2"
    },
    "5966": {
      "op": "MLOAD"
    },
    "5967": {
      "op": "DUP1"
    },
    "5968": {
      "op": "ISZERO"
    },
    "5969": {
      "op": "ISZERO"
    },
    "5970": {
      "op": "DUP2"
    },
    "5971": {
      "op": "EQ"
    },
    "5972": {
      "op": "PUSH2",
      "value": "0x1604"
    },
    "5975": {
      "op": "JUMPI"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5978": {
      "op": "DUP1"
    },
    "5979": {
      "op": "REVERT"
    },
    "5980": {
      "op": "JUMPDEST"
    },
    "5981": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5988": {
      "op": "SHL"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5991": {
      "op": "MSTORE"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5996": {
      "op": "MSTORE"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6001": {
      "op": "REVERT"
    },
    "6002": {
      "op": "JUMPDEST"
    },
    "6003": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6010": {
      "op": "SHL"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6013": {
      "op": "MSTORE"
    },
    "6014": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6018": {
      "op": "MSTORE"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6023": {
      "op": "REVERT"
    },
    "6024": {
      "op": "JUMPDEST"
    },
    "6025": {
      "op": "DUP2"
    },
    "6026": {
      "op": "DUP2"
    },
    "6027": {
      "op": "SUB"
    },
    "6028": {
      "op": "DUP2"
    },
    "6029": {
      "op": "DUP2"
    },
    "6030": {
      "op": "GT"
    },
    "6031": {
      "op": "ISZERO"
    },
    "6032": {
      "op": "PUSH2",
      "value": "0x160A"
    },
    "6035": {
      "op": "JUMPI"
    },
    "6036": {
      "op": "PUSH2",
      "value": "0x160A"
    },
    "6039": {
      "op": "PUSH2",
      "value": "0x1772"
    },
    "6042": {
      "jump": "i",
      "op": "JUMP"
    },
    "6043": {
      "op": "JUMPDEST"
    },
    "6044": {
      "op": "DUP1"
    },
    "6045": {
      "op": "DUP3"
    },
    "6046": {
      "op": "ADD"
    },
    "6047": {
      "op": "DUP1"
    },
    "6048": {
      "op": "DUP3"
    },
    "6049": {
      "op": "GT"
    },
    "6050": {
      "op": "ISZERO"
    },
    "6051": {
      "op": "PUSH2",
      "value": "0x160A"
    },
    "6054": {
      "op": "JUMPI"
    },
    "6055": {
      "op": "PUSH2",
      "value": "0x160A"
    },
    "6058": {
      "op": "PUSH2",
      "value": "0x1772"
    },
    "6061": {
      "jump": "i",
      "op": "JUMP"
    },
    "6062": {
      "op": "JUMPDEST"
    },
    "6063": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6070": {
      "op": "SHL"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6073": {
      "op": "MSTORE"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6078": {
      "op": "MSTORE"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6083": {
      "op": "REVERT"
    },
    "6084": {
      "op": "JUMPDEST"
    },
    "6085": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6092": {
      "op": "SHL"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6095": {
      "op": "MSTORE"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6100": {
      "op": "MSTORE"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6105": {
      "op": "REVERT"
    },
    "6106": {
      "op": "JUMPDEST"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6111": {
      "op": "DUP3"
    },
    "6112": {
      "op": "ADD"
    },
    "6113": {
      "op": "PUSH2",
      "value": "0x17EC"
    },
    "6116": {
      "op": "JUMPI"
    },
    "6117": {
      "op": "PUSH2",
      "value": "0x17EC"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x1772"
    },
    "6123": {
      "jump": "i",
      "op": "JUMP"
    },
    "6124": {
      "op": "JUMPDEST"
    },
    "6125": {
      "op": "POP"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "op": "SWAP1"
    },
    "6130": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a3ccff8542fdd5c54bc5becdf1ca4a3bfea10e5a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.1.0/contracts/access/Ownable.sol\";\nimport \"paulrberg/prb-math@2.5.0/contracts/PRBMath.sol\";\n\n\ncontract FTGStaking is Ownable {\n    IERC20 public immutable ftgToken;\n\n    //Can be new stake or unstake\n    struct Staking {\n        uint256 totalStaked;\n        uint256 timestamp;\n    }\n\n    struct Stakeholder {\n        uint256 totalStaked;\n        uint256 totalReward;\n        uint256 lastRewardUpdate;\n        Staking[] flexStakes;\n    }\n\n    struct Reward {\n        uint256 rewards;\n        uint256 rewardPer1BFTG;\n        uint256 timestamp;\n    }\n\n    uint256 public totalFTGStaked;\n\n    enum StakeType {\n        FLEX,\n        LOCK30DAYS\n    }\n\n    Reward[] public rewardsList;\n\n    mapping(address => Stakeholder) public stakeholders;\n\n    event NewStake(address indexed user, uint256 amount, uint256 timestamp);\n    event NewUnstake(address indexed user, uint256 amount, uint256 timestamp);\n    event NewReward(uint256 indexed amount, uint256 timestamp);\n    //event For debugging\n    event Log(string message, uint256 data);\n\n    constructor(address _stakingToken) {\n        ftgToken = IERC20(_stakingToken);\n    }\n\n    // To register a new reward deposit or fee\n    function _addNewReward(uint256 _reward) private {\n        if (totalFTGStaked != 0) {\n            emit Log(\"_reward\", _reward);\n            uint256 rewardPer1BFTG = PRBMath.mulDiv(\n                1_000_000_000,// TODO whats this number?\n                _reward,\n                totalFTGStaked\n            );\n            emit Log(\"rewardPer1BFTG\", rewardPer1BFTG);\n            rewardsList.push(Reward(_reward, rewardPer1BFTG, block.timestamp));\n            emit NewReward(_reward, block.timestamp);\n        } else {\n            rewardsList.push(Reward(_reward, 0, block.timestamp));\n            emit NewReward(_reward, block.timestamp);\n        }\n    }\n\n    // to retrieve the first reward index to add from last updated time\n    function _getfirstRewardsIndexToAdd(uint256 lastUpdateTime)\n        private\n        view\n        returns (uint256)\n    {\n        uint256 i = rewardsList.length > 0 ? rewardsList.length - 1 : 0;\n        /* emit Log(\"i0=\",i);\n        emit Log(\"rewardsList[i].timestam\",rewardsList[i].timestamp); */\n        while (rewardsList[i].timestamp >= lastUpdateTime && i != 0) {\n            unchecked {\n                --i;\n            }\n            // emit Log(\"i=\",i);\n        }\n        return i > 0 ? i + 1 : 1;\n    }\n\n    // to retrieve the stakeholder's stake at a certain reward time\n    function _getStakeHolderStakeIndexAtRewardTime(\n        address _stakeholderAddress,\n        uint256 _time\n    ) private view returns (uint256) {\n        uint256 i = stakeholders[_stakeholderAddress].flexStakes.length > 0\n            ? stakeholders[_stakeholderAddress].flexStakes.length - 1\n            : 0;\n        while (\n            stakeholders[_stakeholderAddress].flexStakes[i].timestamp > _time &&\n            i != 0\n        ) {\n            unchecked {\n                --i;\n            }\n        }\n        return i > 0 ? i : 0;\n    }\n\n    // to update the reward balance of a stakeholder\n    function _updateStakeholderReward(\n        address _stakeholderAddress,\n        StakeType _stakeType\n    ) private {\n        if (_stakeType == StakeType.FLEX) {\n            uint256 startIndex = _getfirstRewardsIndexToAdd(\n                stakeholders[_stakeholderAddress].lastRewardUpdate\n            );\n            emit Log(\"startIndex=\", startIndex);\n            uint256 rewardsSum = 0;\n            for (uint256 i = startIndex; i < rewardsList.length; i++) {\n                uint256 stakeholderStakeIndexAtRewardTime = _getStakeHolderStakeIndexAtRewardTime(\n                        _stakeholderAddress,\n                        rewardsList[i].timestamp\n                    );\n                emit Log(\n                    \"stakeholderStakeIndexAtRewardTime=\",\n                    stakeholderStakeIndexAtRewardTime\n                );\n                uint256 stakeholderStakeAtRewardtime = stakeholders[\n                    _stakeholderAddress\n                ].flexStakes[stakeholderStakeIndexAtRewardTime].totalStaked;\n                emit Log(\n                    \"stakeholderStakeAtRewardtime=\",\n                    stakeholderStakeAtRewardtime\n                );\n                emit Log(\n                    \"rewardsList[i].rewardPer1BFTG=\",\n                    rewardsList[i].rewardPer1BFTG\n                );\n                rewardsSum += PRBMath.mulDiv(\n                    rewardsList[i].rewardPer1BFTG,\n                    stakeholderStakeAtRewardtime,\n                    1_000_000_000 // TODO whats this number?\n                );\n                emit Log(\"rewardsSum=\", rewardsSum);\n            }\n            emit Log(\"final rewardsSum=\", rewardsSum);\n            stakeholders[_stakeholderAddress].totalReward += rewardsSum;\n            stakeholders[_stakeholderAddress].lastRewardUpdate = block\n                .timestamp;\n        }\n    }\n\n    // stake ftg token \n    function stake(uint256 _amount, StakeType _stakeType) public {\n        // Check that user does not stake 0\n        require(_amount > 0, \"Cannot stake nothing\");\n        // Check staker's balance is enough\n        require(\n            _amount < ftgToken.balanceOf(msg.sender),\n            \"Insufficient FTG Balance\"\n        );\n\n        // Transfer of ftg token to the staking Contract (contract need to be approved first)\n        ftgToken.transferFrom(msg.sender, address(this), _amount);\n\n        if (_stakeType == StakeType.FLEX) {\n            // first staking ?\n            uint256 fee;\n            if (stakeholders[msg.sender].flexStakes.length == 0) {\n                // calculate initial fee\n                fee = PRBMath.mulDiv(5, _amount, 100);\n                _addNewReward(fee);\n            }\n            uint256 amountStaked = _amount - fee;\n            // Add stake's amount to stakeholder's totalStaked\n            stakeholders[msg.sender].totalStaked += amountStaked;\n            totalFTGStaked += amountStaked;\n            emit Log(\"totalFTGStaked\", totalFTGStaked);\n            // Add the new Stake to the stakeholder's stakes List\n            stakeholders[msg.sender].flexStakes.push(\n                Staking(stakeholders[msg.sender].totalStaked, block.timestamp)\n            );\n\n            // Emit a NewStake event\n            emit NewStake(msg.sender, amountStaked, block.timestamp);\n        }\n        //\n    }\n\n    //function to deposit reward\n    function depositReward(uint256 _amount) external {\n        _addNewReward(_amount);\n    }\n\n    //public function to update Rewards\n    function updateReward() public {\n        _updateStakeholderReward(msg.sender, StakeType.FLEX);\n    }\n\n    // function called by stakeholder to unstake ftg\n    function unstake(uint256 _amount, StakeType _stakeType) public {\n        if (_stakeType == StakeType.FLEX) {\n            //verify that stakeholder has staking\n            require(stakeholders[msg.sender].totalStaked != 0, \"No FTG staked\");\n            //if amount exceeds totalStaked, we withdraw everything?\n            if (_amount >= stakeholders[msg.sender].totalStaked) {\n                //stakeholder is only partly withdrawing his staking balance\n                uint256 amountToUnstake = stakeholders[msg.sender].totalStaked;\n                totalFTGStaked -= amountToUnstake;\n                stakeholders[msg.sender].totalStaked = 0;\n                stakeholders[msg.sender].flexStakes.push(\n                    Staking(0, block.timestamp)\n                );\n                // unstaking 2%(?) fee\n                uint256 fee = PRBMath.mulDiv(2, amountToUnstake, 100);\n                _addNewReward(fee);\n                ftgToken.transfer(msg.sender, amountToUnstake - fee);\n                emit NewUnstake(\n                    msg.sender,\n                    stakeholders[msg.sender].totalStaked,\n                    block.timestamp\n                );\n            } else {\n                //stakeholder is only partly withdrawing his staking balance\n                stakeholders[msg.sender].totalStaked -= _amount;\n                stakeholders[msg.sender].flexStakes.push(\n                    Staking(\n                        stakeholders[msg.sender].totalStaked,\n                        block.timestamp\n                    )\n                );\n                totalFTGStaked -= _amount;\n                // unstaking 2%(?) fee\n                uint256 fee = PRBMath.mulDiv(2, _amount, 100);\n                _addNewReward(fee);\n                ftgToken.transfer(msg.sender, _amount - fee);\n                emit NewUnstake(msg.sender, _amount, block.timestamp);\n            }\n        }\n    }\n\n    // function for the stakeholder to withdraw his accumulated rewards\n    function withdrawReward() public {\n        // firstly update reward balance\n        _updateStakeholderReward(msg.sender, StakeType.FLEX);\n        // transfer rewards to stakeholder's account\n        uint256 rewardToWithdraw = stakeholders[msg.sender].totalReward;\n        stakeholders[msg.sender].totalReward = 0;\n        ftgToken.transfer(msg.sender, rewardToWithdraw);\n    }\n\n    // function for the stakeholder to stake his accumulated rewards\n    function stakeReward(uint256 _amount) public {\n        // firstly update reward balance\n        _updateStakeholderReward(msg.sender, StakeType.FLEX);\n        // transfer reward balance to the staking balance\n        stakeholders[msg.sender].totalReward -= _amount;\n        stakeholders[msg.sender].totalStaked += _amount;\n        stakeholders[msg.sender].flexStakes.push(\n            Staking(stakeholders[msg.sender].totalStaked, block.timestamp)\n        );\n    }\n\n    // returns the rewardsList array\n    function viewRewardsList() public view returns (Reward[] memory) {\n        return rewardsList;\n    }\n\n    // returns the stakeholder's flexStakes array\n    function getStakes(address _stakeholderAddress)\n        public\n        view\n        returns (Staking[] memory)\n    {\n        return stakeholders[_stakeholderAddress].flexStakes;\n    }\n\n    // returns the stakeholder's last updated reward\n    function getAccountRewardInfo(address _stakeholderAddress)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        return (\n            stakeholders[_stakeholderAddress].totalReward,\n            stakeholders[_stakeholderAddress].lastRewardUpdate\n        );\n    }\n\n}\n",
  "sourceMap": "282:10248:8:-:0;;;1222:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;909:18;;-1:-1:-1;;;;;;909:18:0;665:10:2;909:18:0;;;;;942:43;;665:10:2;;;;942:43:0;;867:17;;942:43;-1:-1:-1;;;;;;1267:32:8;;;282:10248;;14:290:10;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:10;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:10:o;:::-;282:10248:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/FTGStaking.sol",
  "type": "contract"
}